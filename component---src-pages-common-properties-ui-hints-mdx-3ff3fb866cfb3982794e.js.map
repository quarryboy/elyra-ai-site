{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/common-properties/ui-hints.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-common-properties-ui-hints-mdx-3ff3fb866cfb3982794e.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`UI hints is a section of the property definition json and contains specifications to assist in the presentation and flow of the property dialog. The specifications indicate which controls to use to display and gather input on the fields.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n <AnchorLink mdxType=\"AnchorLink\">Introduction</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Group-info</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">UI-only parameters</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Parameter info</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Complex type info</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Action info</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Resource definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Dynamic text expressions</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Introduction`}</h2>\n    <p>{`The UI Hints section consists a set of simple and complex attributes.`}</p>\n    <p>{`The simple attributes are:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`id`}</inlineCode>{` (string) Dialog id.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`label`}</inlineCode>{` (object) External name of dialog.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`description`}</inlineCode>{` (object) Description of dialog.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`editor_size`}</inlineCode>{` (string) The width of the properties editor panel. This can have a value of `}<inlineCode parentName=\"p\">{`\"small\"`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`\"medium\"`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`\"large\"`}</inlineCode>{`. The default is `}<inlineCode parentName=\"p\">{`\"small\"`}</inlineCode>{`.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`When `}<inlineCode parentName=\"li\">{`\"small\"`}</inlineCode>{` is specified the properties panel is displayed with a default width of 320px and with a resize button that allows the panel to be increased in size up to the “medium” size which is 625px.`}</li>\n          <li parentName=\"ul\">{`When `}<inlineCode parentName=\"li\">{`\"medium\"`}</inlineCode>{` is specified the properties panel is show with a width of 625px and with a resize button that allows the panel to be increased in size up to the `}<inlineCode parentName=\"li\">{`\"large\"`}</inlineCode>{` size which is 900px.`}</li>\n          <li parentName=\"ul\">{`When `}<inlineCode parentName=\"li\">{`\"large\"`}</inlineCode>{` is specified the properties panel is show with a width of 900px and no resize button is displayed.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`pixel_width`}</inlineCode>{` (object) This optional property gives finer control over the minimum and maximum sizes of the properties editor panel. If this is omitted the properties editor width is controlled by the `}<inlineCode parentName=\"p\">{`editor_size`}</inlineCode>{` property. `}<inlineCode parentName=\"p\">{`pixel_width`}</inlineCode>{` is an object with two properties `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` which are both numbers.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`min`}</inlineCode>{` is specified it overrides the default size of the shrunken panel and `}<inlineCode parentName=\"li\">{`max`}</inlineCode>{` is based on the `}<inlineCode parentName=\"li\">{`editor_size`}</inlineCode>{` value.`}</li>\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`max`}</inlineCode>{` is specified it overrides the default size of the expanded panel and `}<inlineCode parentName=\"li\">{`min`}</inlineCode>{` is based on the `}<inlineCode parentName=\"li\">{`editor_size`}</inlineCode>{` value.`}</li>\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`editor_size`}</inlineCode>{` is set to `}<inlineCode parentName=\"li\">{`\"large\"`}</inlineCode>{` only the `}<inlineCode parentName=\"li\">{`max`}</inlineCode>{` value will be used to specify the size of the panel and no resize button will be displayed.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`A warning will be displayed in the console if you specify an invalid value for either `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{` such as making `}<inlineCode parentName=\"p\">{`min`}</inlineCode>{` greater than `}<inlineCode parentName=\"p\">{`max`}</inlineCode>{`.`}</p>\n    <p>{`Example of the simple attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"uihints\": {\n  \"id\":\"org.apache.spark.ml.ibm.transformers.Distinct\",\n  \"icon\": \"images/transformationspark.svg\",\n  \"label\": {\n    \"default\": \"Distinct\"\n  },\n  \"editor_size\": \"medium\",\n  \"pixel_width\": {\n    \"min\": 400,\n    \"max\": 800\n  },\n  \"description\": {\n    \"default\": \"Remove rows to leave only rows with distinct combinations of rows\"\n}\n\n`}</code></pre>\n    <h2>{`Group-info`}</h2>\n    <p>{`The complex attributes of the UI hints section are:`}</p>\n    <p>{`Group info attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` (string) Required Panel id`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string) The group type to be displayed. see Group/Panel Controls in 3.3 Common Properties Controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`depends_on_ref`}</inlineCode>{` (string) Property name this group depends upon. Valid for panelSelector groups only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label`}</inlineCode>{` (object) Group label.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See Resource Definition`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`description`}</inlineCode>{` (object) Group description. Only used with `}<inlineCode parentName=\"li\">{`textPanel`}</inlineCode>{`.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n          <li parentName=\"ul\">{`See `}<a href=\"#dynamic-text-expressions\">{`Dynamic Text Expressions`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` (array`}{`[string]`}{`) List of parameter to be displayed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`action_refs`}</inlineCode>{` (array`}{`[string]`}{`) List of action to be displayed. Used with `}<inlineCode parentName=\"li\">{`actionPanel`}</inlineCode>{` only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group_info`}</inlineCode>{` (object) List of additional group information.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` (any) Returned in custom panel constructor without any changes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`insert_panels`}</inlineCode>{` (boolean) Indicates whether panels, contained with a `}<inlineCode parentName=\"li\">{`panelSelector`}</inlineCode>{`, should be inserted between the radio buttons of a radio button set indicated by the depends_on_ref parameter.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nested_panel`}</inlineCode>{` (boolean) Indicate whether panel should be nested. Nested panels are indented by 16px from the left and display left border. Default is false.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`class_name`}</inlineCode>{` (string) Optional classname for this group`}</li>\n    </ul>\n    <p>{`Example group info section:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"group_info\": [\n      {\n        \"id\": \"settings\",\n        \"label\": {\n          \"default\": \"Settings\"\n        },\n        \"type\": \"columnSelection\",\n        \"parameter_refs\": [\n          \"keys\"\n        ]\n      }\n    ]\n\n`}</code></pre>\n    <h2>{`UI-only parameters`}</h2>\n    <p>{`UI-only parameters require information about the parameters same as the parameter definition information used for the backend parameters. The UI-only parameter definition information is stored in the UI-hints section in the sub-section named `}<inlineCode parentName=\"p\">{`ui_parameters`}</inlineCode>{`. The format of the information in the `}<inlineCode parentName=\"p\">{`ui_parameters`}</inlineCode>{` sub-section is documented `}<a href=\"parameter-definition\">{`here`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"ui_parameters\": [\n    {\n      \"id\":\"databaseResource\",\n      \"type\":\"boolean\",\n      \"default\":true\n    },\n    {\n      \"id\":\"toi\",\n      \"type\":\"double\",\n      \"default\":0.0\n    }\n]\n\n`}</code></pre>\n    <p>{`The UI-only parameters need to be added to other UI Hints sections (for example `}<inlineCode parentName=\"p\">{`Group Info`}</inlineCode>{` and canbe refered to by the `}<inlineCode parentName=\"p\">{`parameter_ref`}</inlineCode>{` field just like backend parameters.`}</p>\n    <h2>{`Parameter info`}</h2>\n    <p>{`The parameter info section contains the list of parameters to gather values on through the property dialogs and UI hints about each parameter. The UI hints provide information to facilitate the UI controls used to display the parameter in the property dialogs.`}</p>\n    <p>{`Parameter info attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_ref`}</inlineCode>{` (string) Required Parameter name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label`}</inlineCode>{` (object) External name for parameter.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`description`}</inlineCode>{` (object) Description of parameter with optional placement context.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement`}</inlineCode>{` (string) Placement context for the text. Valid values are `}<inlineCode parentName=\"li\">{`as_tooltip, on_panel`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`control`}</inlineCode>{` (string) Which control to use. see Parameter Controls in 3.3 Common Properties Controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`increment`}</inlineCode>{` (number) Determines the increment/decrement value for the spinner control only. The default value is `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`orientation`}</inlineCode>{` (string) Determines how the control is displayed. Valid values are `}<inlineCode parentName=\"li\">{`vertical, horizontal`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`width`}</inlineCode>{` (number) Column width for tables. The widths provided for table columns are used to calculate relative widths for each table column. So for example a 3 column table with widths of 20, 30, and 50 would use 20%, 30%, and 50% of the overall table width, respectively.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`char_limit`}</inlineCode>{` (number) Limits the number of characters a user can enter into the control for string parameters only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`display_chars`}</inlineCode>{` (number) This has been deprecated and is subject to removal. Limits the number of characters displayed for a text field in a column in a table. The text will have an ellipsis appended at this limit. Defaults to 64 characters.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`separator`}</inlineCode>{` (string) Determines where to put a separator relative to the current control. Valid values are `}<inlineCode parentName=\"li\">{`after, before`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`visible`}</inlineCode>{` (boolean) Determines whether to display control in a table cell. Used in complex types only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`place_holder_text`}</inlineCode>{` (object) Text hint for the user displayed input controls.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`resource_key`}</inlineCode>{` (string) Used as a key for enum value labels in the resources section of property definition.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`edit_style`}</inlineCode>{` (string) Editing style of elements in a table. Valid values are `}<inlineCode parentName=\"li\">{`subpanel, inline, on_panel`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`value_icons`}</inlineCode>{` (array`}{`[string]`}{`) For enumerated types, this defines the set of icons for the valid values. The ordering must be consistent with the order in the parameter enum attribute.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`filterable`}</inlineCode>{` (boolean) Determines if this column values can be filtered so that only rows that match the filter in column values are shown in the table. Applies to complex parameters only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sortable`}</inlineCode>{` (boolean) Determines if this column values can be sorted into ascending/descending order in a table. Applies to complex parameters only.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`number_generator`}</inlineCode>{` (object) Describes a number generator link beside numeric control labels. The ‘label’ element is a standard resource item, and the ‘range’ element contains ‘min’ and ‘max’ attributes to constrain the range of generated numbers.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dm_default`}</inlineCode>{` (string) Data record metadata field to be used for default values in table cell columns. Typically this is used with parameters in complex structures in which the key field is a column name. Valid values are `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`description`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`measure`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`modeling_role`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dm_image`}</inlineCode>{` (string) This can be set to display an icon of the corresponding dm type in the role:column field of a table. Valid values are `}<inlineCode parentName=\"li\">{`measure`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`none`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`summary`}</inlineCode>{` (boolean) Determines if parameter should be shown in the summary when using a `}<inlineCode parentName=\"li\">{`summaryPanel`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`text_before`}</inlineCode>{` (object) Text to be displayed before the control`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string) Adds a icon and additional formatting to the text. Only `}<inlineCode parentName=\"li\">{`info`}</inlineCode>{` is support at this time.`}</li>\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string) Adds a icon and additional formatting to the text. Only `}<inlineCode parentName=\"li\">{`info`}</inlineCode>{` is support at this time.`}</li>\n          <li parentName=\"ul\">{`See Dynamic Text Expressions`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`text_after`}</inlineCode>{` (object) Text to be displayed after the control`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string) Adds a icon and additional formatting to the text. Only info is support at this time.`}</li>\n          <li parentName=\"ul\">{`See Dynamic Text Expressions`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`custom_control_id`}</inlineCode>{` (string) Id that is used to determine which custom control to use when `}<inlineCode parentName=\"li\">{`control=custom`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` (any) Returned in custom control constructor without any changes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rows`}</inlineCode>{` (integer) Number of rows to show in a table before scrolling starts. If one table in a panel is set to -1, that table will use the remaining available vertical space, down to a minimum of 2 rows. Used in expression and code controls to determine the number of rows to show for those controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`moveable_rows`}</inlineCode>{` (boolean) Determines if rows can be moved up or down in a table or array of strings.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`action_ref`}</inlineCode>{` (string) An action to be displayed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date_format`}</inlineCode>{` (string) A format string such as YYYY-MM-DD which describes the display and entry format for a date field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time_format`}</inlineCode>{` (string) A format string such as HH:mm:ss which describes the display and entry format for a time field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`custom_value_allowed`}</inlineCode>{` (boolean) Determines if a dropdown, outside of a table, can allow a custom value to be entered.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`class_name`}</inlineCode>{` (string) Optional classname for this parameter`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`    \"parameter_info\": [\n      {\n        \"parameter_ref\": \"keys\",\n        \"label\": {\n          \"resource_key\": \"sort.keys.label\"\n        },\n        \"description\": {\n          \"resource_key\": \"sort.keys.desc\",\n          \"placement\": \"on_panel\"\n        },\n        \"rows\": -1\n      }\n    ]\n\n`}</code></pre>\n    <h2>{`Complex type info`}</h2>\n    <p>{`The complex_type_info section defines complex data types. This section is needed if in the `}<inlineCode parentName=\"p\">{`parameters`}</inlineCode>{` section of the parameter definition, one of the parameters has a type that is not the base type (i.e. an array or map of base types). The type of control used for this definition depends on the group info type value.`}</p>\n    <p>{`Complex Type info attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`complex_type_ref`}</inlineCode>{` (string) Required Name of complex type, can be referenced in other places.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key_definition`}</inlineCode>{` (string) A set of parameter info attributes about the key parameter.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label`}</inlineCode>{` (object) External name of subpanel.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameters`}</inlineCode>{` (object) Required List of parameters that are part of this complex parameter. This parameter can either have a set of parameter_info attributes or other nested complex_type_info attributes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header`}</inlineCode>{` (boolean) If true then the table has a header row with column names. Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`add_remove_rows`}</inlineCode>{` (boolean) If `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` then the table can have rows added and removed. Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`include_all_fields`}</inlineCode>{` (boolean) When `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`add_remove_rows`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`, ensures that all fields are included in the control at all times.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`row_selection`}</inlineCode>{` (string enum) How many rows in a table can be selected at a time.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`single`}</inlineCode>{`: only one row at a time is able to be selected.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`multiple`}</inlineCode>{`: multiple rows at a time are able to be selected.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`multiple`}</inlineCode>{`-edit: select multiple rows and allow the editing of column values of all selected rows.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`Example complex_type_info section:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` \"complex_type_info\": [\n      {\n        \"complex_type_ref\": \"SortEntry\",\n        \"row_selection\": \"multiple\",\n        \"moveable_rows\": true,\n        \"add_remove_rows\": false,\n        \"include_all_fields\": true,\n        \"key_definition\": {\n          \"parameter_ref\": \"field\",\n          \"width\": 28,\n          \"label\": {\n            \"resource_key\": \"SortEntry.field.label\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"parameter_ref\": \"sort_order\",\n            \"width\": 16,\n            \"resource_key\": \"SortEntry.sort_order\",\n            \"label\": {\n              \"resource_key\": \"SortEntry.sort_order.label\"\n            },\n            \"control\": \"toggletext\",\n            \"value_icons\": [\n              \"/images/up-triangle.svg\",\n              \"/images/down-triangle.svg\"\n            ]\n          }\n        ]\n      },\n      {\n        \"complex_type_ref\": \"FieldStorageEntry\",\n        \"key_definition\": {\n          \"parameter_ref\": \"field\",\n          \"label\": {\n            \"default\": \"\",\n            \"resource_key\": \"FieldStorageEntry.field\"\n          },\n          \"width\": 26,\n          \"sortable\": true,\n          \"filterable\": true\n        },\n        \"parameters\": [\n          {\n            \"parameter_ref\": \"override\",\n            \"label\": {\n              \"default\": \"\",\n              \"resource_key\": \"FieldStorageEntry.override\"\n            },\n            \"width\": 16,\n            \"edit_style\": \"inline\",\n            \"sortable\": true\n          },\n          {\n            \"parameter_ref\": \"storage\",\n            \"label\": {\n              \"default\": \"\",\n              \"resource_key\": \"FieldStorageEntry.storage\"\n            },\n            \"width\": 26,\n            \"edit_style\": \"inline\",\n            \"dm_default\": \"type\"\n          }\n        ]\n      }\n    ]\n\n`}</code></pre>\n    <h2>{`Action info`}</h2>\n    <p>{`The action_info section defines an action. Actions are used to callback to the application to perform an operation.`}</p>\n    <p>{`Action info attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` (string) Required Id of the action.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label`}</inlineCode>{` (object) Required External name of action.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`See `}<a href=\"#resource-definition\">{`Resource Definition`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`control`}</inlineCode>{` (string) Required The type of action. Currently `}<inlineCode parentName=\"li\">{`button`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`image`}</inlineCode>{` are supported.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`image`}</inlineCode>{` (object) Properties associate with an `}<inlineCode parentName=\"li\">{`image`}</inlineCode>{` action.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`ur\\`l (string) Location of the image to display.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`placement`}</inlineCode>{` (string) Placement of image relative to a property. Values are `}<inlineCode parentName=\"li\">{`right`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`left`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`size`}</inlineCode>{` (object) Pixel size of the image.`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`height`}</inlineCode>{` (number) Image height in pixels.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`width`}</inlineCode>{` (number) Image width in pixels.`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` (any) Returned back in action callback.`}</li>\n    </ul>\n    <h2>{`Resource definition`}</h2>\n    <p>{`Used for user-facing text. Allows for default values if no translations are provided.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`default`}</inlineCode>{` (string) Default value if `}<inlineCode parentName=\"li\">{`resource_key`}</inlineCode>{` not defined.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`resource_key`}</inlineCode>{` (string) Used as a key for enum value labels in the resources section of property definition.`}</li>\n    </ul>\n    <h2>{`Dynamic text expressions`}</h2>\n    <p>{`Used to dynamically set text based on a parameter value change. If parameter id is used then then current value for that parameter will be passed into the function.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`percent(<number or parameter id>, <integer>)`}</inlineCode>{` Return the percent of the 1st parameter. The optional 2nd parameter determines the number of decimal places.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sum(<number or parameter id>, <number or parameter id>, ...) `}</inlineCode>{`Returns the sum of all parameters`}</li>\n    </ul>\n    <p>{`{\n“parameter_ref”: “numberfield”,\n“label”: {\n“default”: “Number”\n},\n“text_after”: {\n“default”: “Sum: \\${sum(numberfield, 2)} with (numberfield, 2, numberfield). Percent: \\${percent(numberfield,2)}”\n}\n}`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}