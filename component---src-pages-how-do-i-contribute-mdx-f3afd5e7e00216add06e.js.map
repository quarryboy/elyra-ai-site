{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/how-do-i-contribute.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","InlineNotification","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-how-do-i-contribute-mdx-f3afd5e7e00216add06e.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This guide documents the best way to make various types of contribution to the Elyra projects,\nincluding what is required before submitting a documentation or code change and how to properly merge them.`}</p>\n  </PageDescription>\n    <InlineNotification mdxType=\"InlineNotification\">\nContributing to the Elyra project doesn't just mean writing code. Helping testing and reviewing pull requests\nand improving documentation are also welcome. In fact, proposing significant code changes usually requires first\ngaining experience and credibility within the community by helping in other ways. This is also a guide to \nbecoming an effective contributor.\n    </InlineNotification>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Code of conduct</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Contributing documentation changes</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Contributing code changes</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Suggested issues</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Talking to the contributors</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Code of conduct`}</h2>\n    <p>{`As contributors and maintainers of this project, and in the interest of fostering\nan open and welcoming community, we pledge to respect all people who contribute\nthrough reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Our standards</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Enforcement responsibilities</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Scope</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Enforcement</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Attrition</AnchorLink>\n    </AnchorLinks>\n    <p>{`We are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age,\nreligion, or nationality.`}</p>\n    <p>{`We pledge to act and interact in ways that contribute to an open, welcoming, diverse,\ninclusive, and healthy community.`}</p>\n    <h3>{`Our standards`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Examples of behavior that contributes to a positive environment for our community include:\n\n  * Demonstrating empathy and kindness toward other people\n  * Being respectful of differing opinions, viewpoints, and experiences\n  * Giving and gracefully accepting constructive feedback\n  * Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n  * Focusing on what is best not just for us as individuals, but for the overall community\n\n  Examples of unacceptable behavior include:\n\n  * The use of sexualized language or imagery, and sexual attention or\n    advances of any kind\n  * Trolling, insulting or derogatory comments, and personal or political attacks\n  * Public or private harassment\n  * Publishing others' private information, such as a physical or email\n    address, without their explicit permission\n  * Other conduct which could reasonably be considered inappropriate in a\n    professional setting\n`}</code></pre>\n    <h3>{`Enforcement responsibilities`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior\n`}</code></pre>\n    <p>{`and will take appropriate and fair corrective action in response to any behavior that they deem\ninappropriate, threatening, offensive, or harmful.`}</p>\n    <p>{`Community leaders have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct,\nand will communicate reasons for moderation decisions when appropriate.`}</p>\n    <h3>{`Scope`}</h3>\n    <p>{`This Code of Conduct applies within all community spaces including Gitter, issue trackers, wikis,\nblogs, Twitter, and any other communication channels used by our community, and also applies when\nan individual is officially representing the community in public spaces. Examples of representing\nour community include using an official e-mail address, posting via an official social media account,`}</p>\n    <h3>{`Enforcement`}</h3>\n    <p>{`Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community\nleaders responsible for enforcement via e-mail to the Elyra Project Management Committee at\nelyra-pmc AT googlegroups DOT com. All complaints will be reviewed and investigated promptly and fairly.`}</p>\n    <p>{`All community leaders are obligated to respect the privacy and security of the reporter of any incident.`}</p>\n    <h3>{`Attrition`}</h3>\n    <p>{`  This Code of Conduct is adapted from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.contributor-covenant.org/\"\n      }}>{`Contributor Covenant`}</a>{`,\nversion 2.0, available at `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\"\n      }}>{`https://www.contributor-covenant.org/version/2/0/code_of_conduct.html`}</a>{`.`}</p>\n    <h2>{`Contributing documentation changes`}</h2>\n    <p>{`To create or modify the project documentation, edit the Markdown source files which is usually located at\n$project/docs directory, whose README file shows how to build the documentation locally to test your changes.`}</p>\n    <p>{`The process to propose a doc change is otherwise the same as the process for proposing code changes below.`}</p>\n    <h2>{`Contributing code changes`}</h2>\n    <p>{`Please review the preceding section before proposing a code change. This section documents how to do so.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Before creating a Pull Request</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Creating a Pull Request</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">The Review Process</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Merging Pull Requests</AnchorLink>\n    </AnchorLinks>\n    <p>{`When you contribute code, you affirm that the contribution is your original work and that you license the\nwork to the project under the project’s open source license.`}</p>\n    <p>{`Whether or not you state this explicitly, by submitting any copyrighted material via pull request, email,\nor other means you agree to license the material under the project’s open source license and warrant that you\nhave the legal authority to do so.`}</p>\n    <h3>{`Before creating a Pull Request`}</h3>\n    <p>{`1.Make sure you have the most up to date code`}</p>\n    <p>{`If you haven’t done so, please set upstream as described in `}<a parentName=\"p\" {...{\n        \"href\": \"https://help.github.com/articles/configuring-a-remote-for-a-fork/\"\n      }}>{`GitHub Documentation`}</a></p>\n    <p>{`Make sure you do not have any uncommitted changes and rebase master with latest changes from upstream:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git fetch upstream\ngit checkout master\ngit rebase upstream/master\n`}</code></pre>\n    <p>{`Now you should rebase your branch with master, to receive the upstream changes`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git checkout branch\ngit rebase master\n`}</code></pre>\n    <p>{`In both cases, you can have conflicts:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`error: could not apply fa39187... something to add to patch A\n\nWhen you have resolved this problem, run \"git rebase --continue\".\nIf you prefer to skip this patch, run \"git rebase --skip\" instead.\nTo check out the original branch and stop rebasing, run \"git rebase --abort\".\nCould not apply fa39187f3c3dfd2ab5faa38ac01cf3de7ce2e841... Change fake file\n`}</code></pre>\n    <p>{`Here, Git is telling you which commit is causing the conflict (fa39187). You’re given three choices:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You can run `}<inlineCode parentName=\"li\">{`git rebase --abort`}</inlineCode>{` to completely undo the rebase. Git will return you to your branch’s\nstate as it was before git rebase was called.`}</li>\n      <li parentName=\"ul\">{`You can run `}<inlineCode parentName=\"li\">{`git rebase --skip`}</inlineCode>{` to completely skip the commit. That means that none of the changes\nintroduced by the problematic commit will be included. It is very rare that you would choose this option.`}</li>\n      <li parentName=\"ul\">{`You can fix the conflict.`}</li>\n    </ul>\n    <p>{`To fix the conflict, you can follow `}<a parentName=\"p\" {...{\n        \"href\": \"https://help.github.com/articles/resolving-a-merge-conflict-from-the-command-line\"\n      }}>{`the standard procedures for resolving merge conflicts from the command line`}</a>{`.\nWhen you’re finished, you’ll need to call `}<inlineCode parentName=\"p\">{`git rebase --continue`}</inlineCode>{` in order for Git to continue processing\nthe rest of the rebase.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` If there are any merge conflicts with the `}<inlineCode parentName=\"p\">{`yarn.lock`}</inlineCode>{` file, there is no need to manually resolve them. Simply run `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` and yarn will do its\nbest to automatically resolve any conflicts.`}</p>\n    </InlineNotification>\n    <h3>{`Creating a Pull Request`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Fork the Github repository at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/xxx\"\n        }}>{`https://github.com/elyra-ai/xxx`}</a>{` if you haven’t already`}</li>\n      <li parentName=\"ol\">{`Clone your fork, create a new branch, push commits to the branch.`}</li>\n      <li parentName=\"ol\">{`Consider whether documentation or tests need to be added or updated as part of the change, and add them as needed.`}</li>\n      <li parentName=\"ol\">{`Open a pull request against the master branch of elyra-ai/elyra. (Only in special cases would the PR be opened\nagainst other branches.)`}</li>\n      <li parentName=\"ol\">{`The PR title should describe the proposed change in the PR itself.`}</li>\n      <li parentName=\"ol\">{`If the pull request is still a work in progress, and so is not ready to be merged, but needs to be pushed\nto Github to facilitate review, then prefix the PR title with `}<inlineCode parentName=\"li\">{`[WIP]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Follow `}<a parentName=\"li\" {...{\n          \"href\": \"http://chris.beams.io/posts/git-commit/\"\n        }}>{`The 7 rules for a great commit message`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Separate subject from body with a blank line`}</li>\n          <li parentName=\"ul\">{`Limit the subject line to 50 characters`}</li>\n          <li parentName=\"ul\">{`Capitalize the subject line`}</li>\n          <li parentName=\"ul\">{`Do not end the subject line with a period`}</li>\n          <li parentName=\"ul\">{`Use the imperative mood in the subject line`}</li>\n          <li parentName=\"ul\">{`Wrap the body at 72 characters`}</li>\n          <li parentName=\"ul\">{`Use the body to explain what and why vs. how`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h3>{`The Review Process`}</h3>\n    <p>{`The review process can help the project achieve a high-quality code base. When performing code reviews,\nvarious aspects should be considered, and the following\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.michaelagreiler.com/wp-content/uploads/2019/08/Code_Review_Checklist_Greiler.pdf\"\n      }}>{`code review checklist`}</a>{`\ngive some examples of such items.`}</p>\n    <p>{`What to expect from the review process?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Other reviewers, including committers, may comment on the changes and suggest modifications. Changes can be added\nby simply pushing more commits to the same branch.`}</li>\n      <li parentName=\"ul\">{`Lively, polite, rapid technical debate is encouraged from everyone in the community. The outcome may be a\nrejection of the entire change.`}</li>\n      <li parentName=\"ul\">{`Reviewers can indicate that a change looks suitable for merging with a comment such as:\n“I think this patch looks good”. Elyra uses the LGTM convention for indicating the strongest level of\ntechnical sign-off on a patch: simply comment with the word “LGTM”. It specifically means:\n“I’ve looked at this thoroughly and take as much ownership as if I wrote the patch myself”. If you comment LGTM\nyou will be expected to help with bugs or follow-up issues on the patch. Consistent, judicious use of LGTMs\nis a great way to gain credibility as a reviewer with the broader community.`}</li>\n      <li parentName=\"ul\">{`Sometimes, other changes will be merged which conflict with your pull request’s changes. The PR can’t be merged\nuntil the conflict is resolved. This can be resolved with “git fetch origin” followed by “git merge origin/master”\nand resolving the conflicts by hand, then pushing the result to your branch.`}</li>\n      <li parentName=\"ul\">{`Try to be responsive to the discussion rather than let days pass between replies`}</li>\n    </ul>\n    <h3>{`Merging Pull Requests`}</h3>\n    <p>{`To avoid a convoluted master branch history, with lots of “merge xxx” on the commit history, we are not using the\nGitHub `}<inlineCode parentName=\"p\">{`merge pull request`}</inlineCode>{` UI option and recommending either `}<inlineCode parentName=\"p\">{`squash and merge`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`rebase and merge`}</inlineCode>{` options. `}</p>\n    <h2>{`Suggested Issues`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Issues tagged as Good first issue: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/elyra/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22\"\n        }}>{`https://github.com/elyra-ai/elyra/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22`}</a></li>\n      <li parentName=\"ul\">{`Issues tagged as Help wanted: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/elyra/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22help+wanted%22\"\n        }}>{`https://github.com/elyra-ai/elyra/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22help+wanted%22`}</a></li>\n    </ul>\n    <h2>{`Talking to the contributors`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Find us on gitter: `}<a parentName=\"li\" {...{\n          \"href\": \"https://gitter.im/elyra-ai/community\"\n        }}>{`https://gitter.im/elyra-ai/community`}</a></li>\n      <li parentName=\"ul\">{`Come to our weekly dev meeting on Thursdays: `}<a parentName=\"li\" {...{\n          \"href\": \"https://elyra.readthedocs.io/en/latest/getting_started/getting-help.html#join-the-weekly-community-meeting\"\n        }}>{`https://elyra.readthedocs.io/en/latest/getting_started/getting-help.html#join-the-weekly-community-meeting`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}