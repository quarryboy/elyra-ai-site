{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/common-properties/controls.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-common-properties-controls-mdx-cf27add77fb1fe17fe2a.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The editor determines the most appropriate control and panel type for each parameter based on the context (parameter type, role, group type, etc.). Although an author can specify a desired control for a given parameter via its uihints, this should be used sparingly and carefully - specifying an inappropriate control for a parameter will lead to undefined behavior.`}</p>\n    </PageDescription>\n    <p>{`A visual documentation containing examples of the following group/panels and control types are available at `}<a parentName=\"p\" {...{\n        \"href\": \"https://wdp-common-canvas-dev.stage1.mybluemix.net/#/properties\"\n      }}>{`https://wdp-common-canvas-dev.stage1.mybluemix.net/#/properties`}</a>{`.`}</p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n <AnchorLink mdxType=\"AnchorLink\">Group/panel controls</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Parameter controls</AnchorLink>\n \n    </AnchorLinks>\n    <h2>{`Group/panel controls`}</h2>\n    <p>{`Controls are grouped and arranged on panels and sub-panels within the “group_info” section of operator uihints. Some panels appear as tab controls, others are for managing shared dataset metadata, while still others contain nested sub-panels.`}</p>\n    <Title mdxType=\"Title\">Group types</Title>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controls`}</inlineCode>{` A general panel type containing parameter controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tabs`}</inlineCode>{` A tabbed control, each tab containing sub-panels and controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`subTabs`}</inlineCode>{` A vertical sub-tabbed control, each tab containing sub-panels and controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`panels`}</inlineCode>{` A panel type that contains sub-panels.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`panelSelector`}</inlineCode>{` A panel containing sub-panels that are shown or hidden based upon a controlling radio selection.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`columnSelection`}</inlineCode>{` A panel type containing field-selection controls that share a common set of fields.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customPanel`}</inlineCode>{` A custom panel for displaying user defined control. Found `}<a href=\"custom-components\">{`here`}</a>{` .`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`summaryPanel`}</inlineCode>{` A panel used in the flyout editor that will provide a link to open a wide flyout that can contain panels and parameter.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`actionPanel`}</inlineCode>{` A panel used for containing action controls.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`textPanel`}</inlineCode>{` A panel used to display static label and/or description.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`twistyPanel`}</inlineCode>{` A panel used to display a panel title that expands to the panel content when clicked.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`columnPanel`}</inlineCode>{` A panel used to display children side by side.`}</li>\n    </ul>\n    <h2>{`Parameter controls`}</h2>\n    <p>{`The following controls are supported in the Common Properties editor. Control types are intended for use with particular parameter types:`}</p>\n    <Title mdxType=\"Title\">Control types</Title>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`readonly`}</inlineCode>{` A read only text field. Used for fields users shouldn’t edit.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hidden`}</inlineCode>{` A control that has no UI to display.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`textfield`}</inlineCode>{` A single line editable text field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`passwordfield`}</inlineCode>{` A masked single line text field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`textarea`}</inlineCode>{` A multi-line text area.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`list`}</inlineCode>{` A single column table for editing a list of values.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expression`}</inlineCode>{` An expression editing field that provides language specific syntax highlighting and text auto complete. An expression builder addon is available with the expression control. You must provide the `}<inlineCode parentName=\"li\">{`expressionInfo`}</inlineCode>{` field for the `}<inlineCode parentName=\"li\">{`propertiesInfo`}</inlineCode>{` config. Found `}<a href=\"properties-documentation\">{`here`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`code`}</inlineCode>{` An code editing field that provides language specific syntax highlighting and text auto complete.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`numberfield`}</inlineCode>{` A numeric text field. Number fields can also optionally display a random number generator beside the control label. See the uihints schema for details.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`spinner`}</inlineCode>{` A standard spinner control to increment/decrement the number value.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`checkbox`}</inlineCode>{` A standard checkbox control.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`radioset`}</inlineCode>{` A radio set where a parameter value is selected from a small range of options. See the Conditions wiki page for special radio button disabling options.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`checkboxset`}</inlineCode>{` A checkbox set for list type parameters with enumerated options where the count is less than 5.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`oneofselect`}</inlineCode>{` A standard dropdown list control.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`multiselect`}</inlineCode>{` A standard dropdown list control that allows for multiple selection.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`someofselect`}</inlineCode>{` A multi-selection control for enumerated list parameters where the count is greater than 4.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`selectcolumn`}</inlineCode>{` A droplist control that selects from available column names.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`selectcolumns`}</inlineCode>{` A multi-select control for column selections.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`toggletext`}</inlineCode>{` A two-state control with optional icons that can exist on its own or within table cells.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`structuretable`}</inlineCode>{` Table control for editing lists or maps of complex types that have field names in the first column.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`structurelisteditor`}</inlineCode>{` For lists or maps of complex types that are not field-oriented parameters.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`structureeditor`}</inlineCode>{` Allows one to define a structure and use it directly on a panel. Each structure member is surfaced as an individual control. Supports a layout setting that allows one to position structureeditor controls in a grid (see below).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`readonlyTable`}</inlineCode>{` A read only table. Used for tables to display fields that users shouldn’t edit.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`custom`}</inlineCode>{` A custom control for displaying a user defined control. Found `}<a href=\"custom-components\">{`here`}</a>{` .`}</li>\n    </ul>\n    <Title mdxType=\"Title\">A Note on field name storage</Title>\n    <p>{`When a given node can accept more than a single datarecord-metadata object as input, it becomes necessary to store the schema name (a.k.a. ‘link_name’) along with each field name that is stored in parameter sets. In those cases, instead of using strings to store field names, they are represented in parameter sets as compound objects containing both ‘link_ref’ and ‘field_name’ elements:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"current_parameters\": {  \n    \"field\": { \"link_ref\": \"Schema-1\", \"field_name\": \"Age\" },\n    ...\n\n`}</code></pre>\n    <p>{`In order to indicate that a given node can potentially accept multiple input data links and would thus require compound field name storage, all parameter definitions within the node that contain `}<inlineCode parentName=\"p\">{`\"role\": \"column\"`}</inlineCode>{`, whether located at the top level or within complex types, should declare their data types as “object” instead of “string”:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"parameters\": [\n  {\n    \"id\": \"fields\",\n    \"type\": \"array[object]\",\n    \"role\": \"column\",\n    \"required\": true\n  },\n  ...\n\n`}</code></pre>\n    <Title mdxType=\"Title\">edit_style</Title>\n    <p>{`When editing complex type values in tables one can either edit cell values inline or in a sub panel:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`subpanel`}</inlineCode>{` A small sub-dialog is launched to edit cell values.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`inline`}</inlineCode>{` Controls appear inline within table cells for editing values.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`on_panel`}</inlineCode>{` Control appears below the table when the row is selected.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Miscellaneous</Title>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`moveable_rows`}</inlineCode>{` boolean - A value that appears in “complex_type_definition” sections. If set to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` allows rows in the table to be moved up and down for reordering.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`row_selection`}</inlineCode>{` enum `}{`[“single”, “multiple”]`}{` - Determines how many rows can be selected in a table at one time. Defaults to multiple.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sortable`}</inlineCode>{` boolean - Both sortable and filterable apply to table columns. When set within the “key_definition” or the “parameters” sections of a structure definition, those columns are sortable and/or can be filtered upon.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`filterable`}</inlineCode>{` boolean (see sortable above)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`language`}</inlineCode>{` enum `}{`[“CLEM”, “text/x-hive”]`}{` - The language for the expression control syntax highlight and text auto complete feature. If not specified, the expression control does not have syntax highlighting or text auto complete.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`layout`}</inlineCode>{` A two-dimensional string array value that appears in “complex_type_definition” sections and allows one to layout structureeditor controls in a two dimensional grid.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}