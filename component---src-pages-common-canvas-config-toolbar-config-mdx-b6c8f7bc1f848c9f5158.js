(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"013z":function(e,t,n){"use strict";var a=n("q1tI"),o=n.n(a),i=n("NmYn"),l=n.n(i),b=n("Wbzz"),c=n("Xrax"),r=n("k4MR"),d=n("TSYQ"),s=n.n(d),p=n("QH2O"),h=n.n(p),u=n("qKvR"),m=function(e){var t,n=e.title,a=e.theme,o=e.tabs,i=void 0===o?[]:o;return Object(u.b)("div",{className:s()(h.a.pageHeader,(t={},t[h.a.withTabs]=i.length,t[h.a.darkMode]="dark"===a,t))},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:h.a.text},n)))))},f=n("BAC9"),j=function(e){var t=e.relativePagePath,n=e.repository,a=Object(b.useStaticQuery)("1364590287").site.siteMetadata.repository,o=n||a,i=o.baseUrl,l=o.subDirectory,c=i+"/edit/"+o.branch+l+"/src/pages"+t;return i?Object(u.b)("div",{className:"bx--row "+f.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:f.link,href:c},"Edit this page on GitHub"))):null},O=n("FCXl"),y=n("dI71"),g=n("I8xM"),w=function(e){function t(){return e.apply(this,arguments)||this}return Object(y.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,a=e.slug,o=a.split("/").filter(Boolean).slice(-1)[0],i=n.map((function(e){var t,n=l()(e,{lower:!0,strict:!0}),i=n===o,c=new RegExp(o+"/?(#.*)?$"),r=a.replace(c,n);return Object(u.b)("li",{key:e,className:s()((t={},t[g.selectedItem]=i,t),g.listItem)},Object(u.b)(b.Link,{className:g.link,to:""+r},e))}));return Object(u.b)("div",{className:g.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",{"aria-label":t},Object(u.b)("ul",{className:g.list},i))))))},t}(o.a.Component),x=n("MjG9"),v=n("CzIb"),N=n("Asxa"),C=n("OIbQ"),T=n.n(C),k=function(e){var t=e.date,n=new Date(t);return t?Object(u.b)(N.c,{className:T.a.row},Object(u.b)(N.a,null,Object(u.b)("div",{className:T.a.text},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,n=e.children,a=e.location,o=e.Title,i=t.frontmatter,d=void 0===i?{}:i,s=t.relativePagePath,p=t.titleType,h=d.tabs,f=d.title,y=d.theme,g=d.description,N=d.keywords,C=d.date,T=Object(v.a)().interiorTheme,A=Object(b.useStaticQuery)("2456312558").site.pathPrefix,I=A?a.pathname.replace(A,""):a.pathname,L=h?I.split("/").filter(Boolean).slice(-1)[0]||l()(h[0],{lower:!0}):"",z=y||T;return Object(u.b)(r.a,{tabs:h,homepage:!1,theme:z,pageTitle:f,pageDescription:g,pageKeywords:N,titleType:p},Object(u.b)(m,{title:o?Object(u.b)(o,null):f,label:"label",tabs:h,theme:z}),h&&Object(u.b)(w,{title:f,slug:I,tabs:h,currentTab:L}),Object(u.b)(x.a,{padded:!0},n,Object(u.b)(j,{relativePagePath:s}),Object(u.b)(k,{date:C})),Object(u.b)(O.a,{pageContext:t,location:a,slug:I,tabs:h,currentTab:L}),Object(u.b)(c.a,null))}},BAC9:function(e,t,n){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,n){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,n){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,n){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},UJoU:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n("wx14"),o=n("zLVn"),i=(n("q1tI"),n("7ljp")),l=n("013z"),b=n("Wbzz"),c=(n("qKvR"),{}),r=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",t)}},d=r("AnchorLinks"),s=r("AnchorLink"),p={_frontmatter:c},h=l.a;function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(h,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(d,{small:!0,mdxType:"AnchorLinks"},Object(i.b)(s,{mdxType:"AnchorLink"},"action"),Object(i.b)(s,{mdxType:"AnchorLink"},"label"),Object(i.b)(s,{mdxType:"AnchorLink"},"enable"),Object(i.b)(s,{mdxType:"AnchorLink"},"iconEnabled"),Object(i.b)(s,{mdxType:"AnchorLink"},"iconDisabled"),Object(i.b)(s,{mdxType:"AnchorLink"},"incLabelWithIcon"),Object(i.b)(s,{mdxType:"AnchorLink"},"kind"),Object(i.b)(s,{mdxType:"AnchorLink"},"tooltip"),Object(i.b)(s,{mdxType:"AnchorLink"},"divider"),Object(i.b)(s,{mdxType:"AnchorLink"},"Deprecated toolbar config"),Object(i.b)(s,{mdxType:"AnchorLink"},"Advanced: JSX actions"),Object(i.b)(s,{mdxType:"AnchorLink"},"action"),Object(i.b)(s,{mdxType:"AnchorLink"},"jsx"),Object(i.b)(s,{mdxType:"AnchorLink"},"tooltip")),Object(i.b)("h2",null,"Toolbar config object"),Object(i.b)("p",null,"The toolbar config object configures which action items (tools) and dividers are shown in the canvas toolbar. A toolbar will be displayed for common-canvas if the canvas configuration field ",Object(i.b)(b.Link,{to:"/common-canvas/config/canvas-config#canvas-config-object#enabletoolbarlayout",mdxType:"Link"},Object(i.b)("inlineCode",{parentName:"p"},"enableToolbarLayout"))," is set to “Top”. If you do not specify a toolbar config, common canvas will display a default toolbar. "),Object(i.b)("p",null,"If you choose to specify a toolbar config object, you can specify actions for the left and right sides of the toolbar to override the default toolbar and, optionally, tell the toolbar not to handle enable/disable for the standard toolbar buttons using ",Object(i.b)("inlineCode",{parentName:"p"},"overrideAutoEnableDisable"),". The ",Object(i.b)("inlineCode",{parentName:"p"},"leftBar")," and ",Object(i.b)("inlineCode",{parentName:"p"},"rightBar")," fields contain an array of objects: one element for each toolbar item. "),Object(i.b)("p",null,"Two toolbar items are automatically added to the toolbar:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A palette action which is used for opening and closing the node palette. This is added to the left side of the left side of the toolbar if the ",Object(i.b)(b.Link,{to:"/common-canvas/config/canvas-config#enablepalettelayout",mdxType:"Link"},Object(i.b)("inlineCode",{parentName:"li"},"enablePaletteLayout"))," field is set to either “Flyout” (the default) or “Modal” in the canvas configuration."),Object(i.b)("li",{parentName:"ul"},"A notification panel action which is used to open and close the notifications panel. This will be added to the right side of the right side of the toolbar if a ",Object(i.b)(b.Link,{to:"/common-canvas/config/canvas-config#notification-config-object",mdxType:"Link"},"notification configuration")," object is specified to the ",Object(i.b)("inlineCode",{parentName:"li"},"<CommonCanvas>")," react object.")),Object(i.b)("p",null,"The toolbar will display the objects in the same order they are defined in the arrays. "),Object(i.b)("p",null,"Here is an example, toolbar configuration object:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'const toolbarConfig = {\n        leftBar: [\n            { action: "undo", label: "Undo", enable: true },\n            { action: "redo", label: "Redo", enable: true },\n            { divider: true },\n            { action: "cut", label: "Cut", enable: false },\n            { action: "copy", label: "Copy", enable: false },\n            { action: "paste", label: "Paste", enable: false },\n            { divider: true },\n            { action: "createAutoComment", label: "Add Comment", enable: true },\n            { action: "deleteSelectedObjects", label: "Delete", enable: true },\n            { action: "arrangeHorizontally", label: "Arrange Horizontally", enable: true }\n        ],\n        rightBar: [\n            { action: "stop", label: "Stop Execution", enable: false },\n            { divider: true },\n            { action: "run", label: "Run Pipeline", enable: false }\n        ],\n        overrideAutoEnableDisable: false\n    };\n')),Object(i.b)("p",null,"Where:"),Object(i.b)("h3",null,"leftBar"),Object(i.b)("p",null,"An array of action items to specify what is displayed on the left side of the toolbar."),Object(i.b)("h3",null,"rightBar"),Object(i.b)("p",null,"An array of action items to specify what is displayed on the right side of the toolbar. If this is omitted, common-canvas will automatically populate the right side of the toolbar with zoom-in, zoom-out, and zoom-to-fit actions. To suppress these right side actions, specify the ",Object(i.b)("inlineCode",{parentName:"p"},"rightBar")," field as an empty array or an array containing the actions you want on the right."),Object(i.b)("h3",null,"overrideAutoEnableDisable"),Object(i.b)("p",null,"A boolean. The default is false. If set to true it will switch off the auto-enablement feature of common-canvas. This is useful if the host application wants to disable all the nodes under certain circumstances. If set to true, the ",Object(i.b)("inlineCode",{parentName:"p"},"enable")," property in the action item is used to decide whether to display the icon as enabled or disabled. If set to false or omitted common-canvas will handle the auto-enablement of common actions. (See the ",Object(i.b)("inlineCode",{parentName:"p"},"action"),"section below for more details.)  "),Object(i.b)("p",null,"Here is an example of an action object which must contain a unique ",Object(i.b)("inlineCode",{parentName:"p"},"action")," field as a minimum."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{\n    action: "run", \n    label: "Run", \n    enable: true,\n    iconEnabled: "/image/myOwnEnabledIcon.svg",\n    iconDisabled: "/image/myOwnDisabledIcon.svg",\n    incLabelWithIcon: "before",\n    kind: "primary",\n    tooltip: "Run the flow"\n}\n')),Object(i.b)("h3",null,"action"),Object(i.b)("p",null,"A unique identifier and the name of the action to be performed. This action name will be passed in the ",Object(i.b)("inlineCode",{parentName:"p"},"data")," parameter of the ",Object(i.b)(b.Link,{to:"/common-canvas/callbacks#editactionhandler",mdxType:"Link"},"editActionHandler")," callback method so you can detect when the user clicks an action in the toolbar. "),Object(i.b)("p",null,"If you are using the recommended (and default) ",Object(i.b)(b.Link,{to:"/common-canvas/config/canvas-config#enableinternalobjectmodel",mdxType:"Link"},"internal object model"),", the following built in actions will be automatically handled by common-canvas: ",Object(i.b)("inlineCode",{parentName:"p"},"undo"),", ",Object(i.b)("inlineCode",{parentName:"p"},"redo"),", ",Object(i.b)("inlineCode",{parentName:"p"},"cut"),", ",Object(i.b)("inlineCode",{parentName:"p"},"copy"),", ",Object(i.b)("inlineCode",{parentName:"p"},"paste"),", ",Object(i.b)("inlineCode",{parentName:"p"},"createAutoComment"),", ",Object(i.b)("inlineCode",{parentName:"p"},"deleteSelectedObjects"),", ",Object(i.b)("inlineCode",{parentName:"p"},"arrangeHorizontally"),", ",Object(i.b)("inlineCode",{parentName:"p"},"arrangeVertically"),", ",Object(i.b)("inlineCode",{parentName:"p"},"zoomIn"),", ",Object(i.b)("inlineCode",{parentName:"p"},"zoomOut"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"zoomToFit"),". So for example, if the ",Object(i.b)("inlineCode",{parentName:"p"},"deleteSelectedObjects")," action (shown as a trash can) is clicked, any selected objects will be deleted from the internal object model."),Object(i.b)("p",null,"Disablement of some of these built in actions is also handled by common-canvas so, for example, when no canvas objects are selected the ",Object(i.b)("inlineCode",{parentName:"p"},"deleteSelectedObjects")," action (trash can icon) will be automatically disabled. You can switch off this automatic enable/disable function by setting ",Object(i.b)("inlineCode",{parentName:"p"},"overrideAutoEnableDisable")," field in the toolbar config to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),". When set to true, the ",Object(i.b)("inlineCode",{parentName:"p"},"enable")," field in the action objects will be used to set the enablement appearance of the toolbar item."),Object(i.b)("h3",null,"label"),Object(i.b)("p",null,"The Tooltip label to display (and optionally the text to display next to the icon if ",Object(i.b)("inlineCode",{parentName:"p"},"incLabelWithIcon")," is specified)."),Object(i.b)("h3",null,"enable"),Object(i.b)("p",null,"Icon will have hover effect and is clickable when set to true. If false, icon will be disabled and unclickable. If not set, it will default to disabled (enable: false). This field is ignored for the standard action items (like cut, copy, paste) because common canvas handles their enable/disable appearance."),Object(i.b)("h3",null,"iconEnabled"),Object(i.b)("p",null,"Specifies the icon to display when ",Object(i.b)("inlineCode",{parentName:"p"},"enable")," is true. Common-canvas will provide icons for the following actions so you don’t need to specify ",Object(i.b)("inlineCode",{parentName:"p"},"iconEnabled")," or ",Object(i.b)("inlineCode",{parentName:"p"},"iconDisabled")," for them: ",Object(i.b)("inlineCode",{parentName:"p"},"stop"),", ",Object(i.b)("inlineCode",{parentName:"p"},"run"),", ",Object(i.b)("inlineCode",{parentName:"p"},"undo"),", ",Object(i.b)("inlineCode",{parentName:"p"},"redo"),", ",Object(i.b)("inlineCode",{parentName:"p"},"cut"),", ",Object(i.b)("inlineCode",{parentName:"p"},"copy"),", ",Object(i.b)("inlineCode",{parentName:"p"},"paste"),", ",Object(i.b)("inlineCode",{parentName:"p"},"createAutoComment"),", ",Object(i.b)("inlineCode",{parentName:"p"},"deleteSelectedObjects"),", ",Object(i.b)("inlineCode",{parentName:"p"},"arrangeHorizontally"),", ",Object(i.b)("inlineCode",{parentName:"p"},"arrangeVertically"),", ",Object(i.b)("inlineCode",{parentName:"p"},"zoomIn"),", ",Object(i.b)("inlineCode",{parentName:"p"},"zoomOut"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"zoomToFit"),". "),Object(i.b)("p",null,"It can be either:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"a string containing the path to a custom SVG file to display or"),Object(i.b)("li",{parentName:"ul"},"a JSX expression, for example ",Object(i.b)("inlineCode",{parentName:"li"},"(<Edit32 />)")," where Edit32 is an icon imported from carbon icons. It is recommended to only pass very simple JSX expressions. ")),Object(i.b)("h3",null,"iconDisabled"),Object(i.b)("p",null,"specifies the icon to display when ",Object(i.b)("inlineCode",{parentName:"p"},"enable")," is false. If ",Object(i.b)("inlineCode",{parentName:"p"},"iconDisabled")," is ",Object(i.b)("em",{parentName:"p"},"not")," specified ",Object(i.b)("inlineCode",{parentName:"p"},"iconEnabled")," will be used instead. It can be omitted for any of the standard actions (see ",Object(i.b)("inlineCode",{parentName:"p"},"iconEnabled")," above). "),Object(i.b)("p",null,"It can be either:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"a string containing the path to a custom SVG file to display or"),Object(i.b)("li",{parentName:"ul"},"a JSX expression, for example ",Object(i.b)("inlineCode",{parentName:"li"},"(<Edit32 />)")," where Edit32 is an icon imported from carbon icons. It is recommended to only pass very simple JSX expressions. ")),Object(i.b)("h3",null,"incLabelWithIcon"),Object(i.b)("p",null,"Can be set to “none”, “before” or “after”. The default is “none”. This field specifies whether the label should be displayed in the toolbar with the icon and if so, where it is displayed with respect to the icon."),Object(i.b)("h3",null,"kind"),Object(i.b)("p",null,"Can be set to “default”, “primary”, “danger”, “secondary”, “tertiary” or “ghost”. The default it “default”. These give the action the same styling as the equivalent kind’s of ",Object(i.b)("a",{href:"https://carbondesignsystem.com/components/button/usage#button-types"},"buttons in the carbon library"),"."),Object(i.b)("h3",null,"tooltip"),Object(i.b)("p",null,"A string or JSX object. The tooltip that will be displayed for the action. If this is not provided the label will be displayed as the tooltip instead."),Object(i.b)("p",null,"You can add dividers to separate groups of actions from other actions. This is displayed as a thin gray line. The divider object has one attribute:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    { \n       divider: true\n    }\n\n")),Object(i.b)("h3",null,"divider"),Object(i.b)("p",null,"To show a divider in the toolbar, add an object with divider attribute set to true."),Object(i.b)("h3",null,"Deprecated toolbar config"),Object(i.b)("p",null,"The old toolbar configuration is still supported for now (but is deprecated). This allows the config to be provided as an array that defines just the left side of the toolbar. The right side will always show the zoom actions (zoomIn, zoomOut, zoomToFit) and a notifications panel icon (if a notification configuration object is provided in the CommonCanvas react object). These right side actions will always show on the right-hand side of the toolbar and are handled internally by the canvas. The entries in the array follow the same definition as described above. Note: there is no need to provide a palette action in the array because a palette icon and following divider will automatically be added to the toolbar when a palette is specified for the canvas."),Object(i.b)("p",null,"An example of the toolbar config array should look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'    const toolbarConfig = [\n       { action: "stop", label: "Stop Execution", enable: false },\n       { action: "run", label: "Run Pipeline", enable: false },\n       { action: "undo", label: "Undo", enable: true },\n       { action: "redo", label: "Redo", enable: true },\n       { action: "cut", label: "Cut", enable: false },\n       { action: "copy", label: "Copy", enable: false },\n       { action: "paste", label: "Paste", enable: false },\n       { action: "createAutoComment", label: "Add Comment", enable: true },\n       { action: "deleteSelectedObjects", label: "Delete", enable: true },\n       { action: "arrangeHorizontally", label: "Arrange Horizontally", enable: true }\n    ];\n\n')),Object(i.b)("h3",null,"Advanced: JSX actions"),Object(i.b)("p",null,"Regular toolbar buttons, explained above, are displayed as set of Carbon ",Object(i.b)("inlineCode",{parentName:"p"},"Button"),"s. If you ",Object(i.b)("strong",{parentName:"p"},"don’t")," want your content wrappered in a button, you can provide your own JSX to display as an action in the toolbar. Be aware however that, because of the way the toolbar is designed, there are restrictions on what the toolbar can do to display your JSX. For example, it cannot display anything with a height greater than the toolbar height."),Object(i.b)("p",null,"If you provide your own JSX object it is displayed in a simple ",Object(i.b)("inlineCode",{parentName:"p"},"div")," in the toolbar. Some attributes are applied to the ",Object(i.b)("inlineCode",{parentName:"p"},"div")," to allow the action to work correctly within the toolbar - these cannot be changed. You are responsible for styling your JSX object to get it to appear the way you want."),Object(i.b)("p",null,"Also be aware that, if the width of the toolbar reduces (maybe by the user sizing the page) your action may get moved into the overflow menu. It is also your responsibility to style the button so it appears as you want in the overflow menu as well as the toolbar."),Object(i.b)("p",null,"The JSX can be provided in the ",Object(i.b)("inlineCode",{parentName:"p"},"jsx")," field. Here is an example. The only other fields that are recognized with the ",Object(i.b)("inlineCode",{parentName:"p"},"jsx")," field are ",Object(i.b)("inlineCode",{parentName:"p"},"action")," and ",Object(i.b)("inlineCode",{parentName:"p"},"tooltip"),", all other fields will be ignored."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'    { \n       action: "custom-loading",\n       jsx: (<div style={{ padding: "0 11px" }}><InlineLoading status="active" description="Loading..." /></div>),\n       tooltip: "Loading the thing you wanted."\n    }\n')),Object(i.b)("h3",null,"action"),Object(i.b)("p",null,"A unique identifier and the name of the action to be performed."),Object(i.b)("h3",null,"jsx"),Object(i.b)("p",null,"A JSX object. This will be displayed as the action in the toolbar."),Object(i.b)("h3",null,"tooltip"),Object(i.b)("p",null,"A string or JSX object. This will be displayed as the tooltip for the action in the toolbar. If tooltip is omitted no tooltip will be added to your action. If tooltip is specified the jsx will be inside a tooltip div which is in the toolbar div mentioned above."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-common-canvas-config-toolbar-config-mdx-b6c8f7bc1f848c9f5158.js.map