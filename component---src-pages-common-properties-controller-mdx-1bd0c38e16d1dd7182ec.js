(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"013z":function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),o=n("NmYn"),l=n.n(o),s=n("Wbzz"),i=n("Xrax"),b=n("k4MR"),d=n("TSYQ"),c=n.n(d),p=n("QH2O"),u=n.n(p),m=n("qKvR"),h=function(e){var t,n=e.title,a=e.theme,r=e.tabs,o=void 0===r?[]:r;return Object(m.b)("div",{className:c()(u.a.pageHeader,(t={},t[u.a.withTabs]=o.length,t[u.a.darkMode]="dark"===a,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:u.a.text},n)))))},y=n("BAC9"),f=function(e){var t=e.relativePagePath,n=e.repository,a=Object(s.useStaticQuery)("1364590287").site.siteMetadata.repository,r=n||a,o=r.baseUrl,l=r.subDirectory,i=o+"/edit/"+r.branch+l+"/src/pages"+t;return o?Object(m.b)("div",{className:"bx--row "+y.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:y.link,href:i},"Edit this page on GitHub"))):null},j=n("FCXl"),O=n("dI71"),g=n("I8xM"),v=function(e){function t(){return e.apply(this,arguments)||this}return Object(O.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,a=e.slug,r=a.split("/").filter(Boolean).slice(-1)[0],o=n.map((function(e){var t,n=l()(e,{lower:!0,strict:!0}),o=n===r,i=new RegExp(r+"/?(#.*)?$"),b=a.replace(i,n);return Object(m.b)("li",{key:e,className:c()((t={},t[g.selectedItem]=o,t),g.listItem)},Object(m.b)(s.Link,{className:g.link,to:""+b},e))}));return Object(m.b)("div",{className:g.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",{"aria-label":t},Object(m.b)("ul",{className:g.list},o))))))},t}(r.a.Component),x=n("MjG9"),w=n("CzIb"),I=n("Asxa"),T=n("OIbQ"),k=n.n(T),P=function(e){var t=e.date,n=new Date(t);return t?Object(m.b)(I.c,{className:k.a.row},Object(m.b)(I.a,null,Object(m.b)("div",{className:k.a.text},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,n=e.children,a=e.location,r=e.Title,o=t.frontmatter,d=void 0===o?{}:o,c=t.relativePagePath,p=t.titleType,u=d.tabs,y=d.title,O=d.theme,g=d.description,I=d.keywords,T=d.date,k=Object(w.a)().interiorTheme,L=Object(s.useStaticQuery)("2456312558").site.pathPrefix,N=L?a.pathname.replace(L,""):a.pathname,D=u?N.split("/").filter(Boolean).slice(-1)[0]||l()(u[0],{lower:!0}):"",C=O||k;return Object(m.b)(b.a,{tabs:u,homepage:!1,theme:C,pageTitle:y,pageDescription:g,pageKeywords:I,titleType:p},Object(m.b)(h,{title:r?Object(m.b)(r,null):y,label:"label",tabs:u,theme:C}),u&&Object(m.b)(v,{title:y,slug:N,tabs:u,currentTab:D}),Object(m.b)(x.a,{padded:!0},n,Object(m.b)(f,{relativePagePath:c}),Object(m.b)(P,{date:T})),Object(m.b)(j.a,{pageContext:t,location:a,slug:N,tabs:u,currentTab:D}),Object(m.b)(i.a,null))}},BAC9:function(e,t,n){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,n){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,n){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,n){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},guzf:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n("wx14"),r=n("zLVn"),o=(n("q1tI"),n("7ljp")),l=n("013z"),s=(n("qKvR"),{}),i=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",t)}},b=i("AnchorLinks"),d=i("AnchorLink"),c={_frontmatter:s},p=l.a;function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(p,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(b,{mdxType:"AnchorLinks"},Object(o.b)(d,{mdxType:"AnchorLink"},"propertyId"),Object(o.b)(d,{mdxType:"AnchorLink"},"Property methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Message methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"State methods (disable/enabled & hidden/visible)"),Object(o.b)(d,{mdxType:"AnchorLink"},"DatasetMetadata methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Row selection methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Validation methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Control methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"General methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Disable move row buttons methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"Custom panel and control methods"),Object(o.b)(d,{mdxType:"AnchorLink"},"maxLength for single-line and multi-line control methods")),Object(o.b)("h2",null,"propertyId"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"const propertyId = {\n  name: {parameter name defined in operator definition},\n  row: {row in table/array}, // optional when col not set\n  col: {col in table}, // optional\n  propertyId: {propertyId of the nested structure} // optional\n}\n\n")),Object(o.b)("h2",null,"Property methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"setPropertyValues(values)  \nupdatePropertyValue(propertyId, value) \n/* \n * options - optional object of config options where\n *   filterHiddenDisabled (boolean): when set to true, filter out data values with a state of disabled or hidden\n *   applyProperties (boolean): when set to true, will return data values in the format expected by the `applyPropertyChanges` callback. If unset or false, will return the internal format used by common properties.\n*/\ngetPropertyValue(propertyId, options)  \n/* \n * options - optional object of config options where\n *   filterHiddenDisabled (boolean): when set to true, filter out data values with a state of disabled or hidden\n *   applyProperties (boolean): when set to true, will return data values in the format expected by the `applyPropertyChanges` callback. If unset or false, will return the internal format used by common properties.\n*/\ngetPropertyValues(options)  \n\n")),Object(o.b)("h2",null,"Message methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"/*\n * Returns current list of error messages\n * @filteredPipeline (boolean) optional\n * when filteredPipeline=true returns enabled/visible control messages and only 1 per control.\n */\ngetErrorMessages(filteredPipeline)\ngetErrorMessage(propertyId)  \nsetErrorMessages(messages)  \nupdateErrorMessage(propertyId, message) \n\n")),Object(o.b)("h2",null,"State methods (disable/enabled & hidden/visible)"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'getControlState(propertyId)\ngetControlStates()\nsetControlStates(states)  \n\n/*\n * @propertyId - see above\n * @state - valid values are "enabled", "disabled", "visible", "hidden"\n */\nupdateControlState(propertyId, state) \n\n')),Object(o.b)("h2",null,"DatasetMetadata methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"getDatasetMetadata()\n\n/*\n * @datasetMetadata - see [schema](https://github.com/elyra-ai/pipeline-schemas/blob/master/common-pipeline/datarecord-metadata/datarecord-metadata-v1-schema.json)\n */ \nsetDatasetMetadata(datasetMetadata)\n\n")),Object(o.b)("h2",null,"Row selection methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"/*\n * Returns table row selection indices as an array of integers.\n * @propertyId - see above\n */\ngetSelectedRows(propertyId)\n\n/*\n * Updates table row selections for the given table control.\n * @propertyId - see above\n * @selection - A zero-based array of integer selection indices\n */\nupdateSelectedRows(propertyId, selection) \n\n/*\n * Clears selected table rows for the given table.\n * @propertyId - see above\n * If the propertyId is omitted all table row selections are cleared\n */\nclearSelectedRows(propertyId)\n\n/*\n * Adds a row selection listener for a table or list.\n * @propertyId - see above\n * @listener - callback function for when a selection is made in the table or list\n */\naddRowSelectionListener(propertyId, listener)\n\n/*\n * Removes the row selection listener from a table or list.\n * @propertyId - see above\n */\nremoveRowSelectionListener(propertyId)\n\n")),Object(o.b)("h2",null,"Validation methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"\n/*\n * Runs validation conditions on all controls\n */\nvalidatePropertiesValues()\n\n\n\n/*\n * Validates a specific propertyId\n * @propertyId - see above\n */\nvalidateInput(propertyId)\n\n")),Object(o.b)("h2",null,"Control methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'/* \n * Update the enum values for a given control.  Used when enum values aren\'t static\n * @propertyId - see above\n * @valuesObj (array) [{ value: <string, number, boolean> , label: "<string>" }]\n */\nupdateControlEnumValues(propertyId, valuesObj)\n\n')),Object(o.b)("h2",null,"General methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"/*\n* Returns the current size of the RHS flyout.\n*/\ngetEditorSize()\n\n\n")),Object(o.b)("h2",null,"Disable move row buttons methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"/**\n * Disable table row move buttons for all propertyIds in given array\n * @param propertyIds Array of propertyIds\n *\n */\nsetDisableRowMoveButtons(propertyIds)\n/**\n* Returns array of propertyIds for which row move buttons will be disabled\n*   @return Array of propertyIds\n*/\ngetDisableRowMoveButtons()\n/**\n* Check if row move buttons should be disabled for given propertyId\n* @param propertyId  The unique property identifier\n* @return boolean\n*/\nisDisableRowMoveButtons(propertyId)\n\n")),Object(o.b)("h2",null,"Custom panel and control methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'/* \n * Only used in custom panel to allow for custom property summary values to be displayed\n * Displays the value set in propertiesReducer for that parameter\n * @propertyId - see above\n * @label (string)\n * @inSummary (boolean)\n */\nsetControlInSummary(propertyId, label, inSummary)\n\n/* \n * Sets the content to be displayed in the summaryPanel for a customPanel property.\n * The summary panel will directly display the content.\n * @propertyId - see above\n * @content = { value: <object> , label: "<value>" }\n */\nupdateCustPropSumPanelValue(propertyId, content)\n\n/* \n * Returns a standard control that can then be used in a customPanel.\n * @propertyId - See above\n * @paramDef - Follows the format of https://github.com/elyra-ai/pipeline-schemas/blob/master/common-canvas/parameter-defs/parameter-defs-v1-schema.json).  titleDefinition, current_parameters, conditions, dataset_metadata are ignored and are optional.   \n * @parameter - This is the parameter from the paramDef to create the control for.  \n */\ncreateControl(propertyId, paramDef, parameter)\n\n/* \n * Returns the translated text for a control given a resource key. \n * Users should be able to use the values from resources that has been uploaded as part of paramDef.\n * @key - Resource key\n * @value - Default value returned when no resource or key has been found.\n */\ngetResource(key, value)\n\n\n')),Object(o.b)("h2",null,"maxLength for single-line and multi-line control methods"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"/*\n * Returns the maximum characters allowed for multi-line string controls\n * Default value is 1024\n */\ngetMaxLengthForMultiLineControls()\n\n/*\n * Returns the maximum characters allowed for single-line string controls\n * Default value is 128\n */\ngetMaxLengthForSingleLineControls()\n\n")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-common-properties-controller-mdx-1bd0c38e16d1dd7182ec.js.map