{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/dev-guide/elyra-release.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-dev-guide-elyra-release-mdx-44c4ce27a64081aab5e7.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\n     Elyra release\n  </span>;\nexport const _frontmatter = {};\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2>{`Before you begin`}</h2>\n    <p>{`Elyra depends on a few different packages that are under the control of the Elyra community and used\nmostly to abstract integration with other runtimes and components.`}</p>\n    <p>{`Currently, these packages are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/pipeline-editor\"\n        }}>{`pipeline-editor`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/canvas\"\n        }}>{`canvas`}</a></li>\n    </ul>\n    <p>{`Before you begin creating a new Elyra release, verify if there is a need to release any of these packages, and if\nnecessary, update Elyra to use the new release.`}</p>\n    <h2>{`Elyra release process overview`}</h2>\n    <p>{`Building an Elyra release consists of the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Updating the `}<a parentName=\"li\" {...{\n          \"href\": \"../getting_started/changelog.md\"\n        }}>{`changelog.md`}</a>{` with the list of changes added to the release`}</li>\n      <li parentName=\"ul\">{`Building the Elyra python package.`}</li>\n      <li parentName=\"ul\">{`Building Elyra JupyterLab extensions as npm packages.`}</li>\n      <li parentName=\"ul\">{`Generate and build the modified packages to enable single-extension deployment.`}</li>\n      <li parentName=\"ul\">{`Build and publish multiple docker images`}</li>\n    </ul>\n    <p>{`Most of the steps required to prepare and publish a release have been automated through the `}<inlineCode parentName=\"p\">{`create-release.sh`}</inlineCode>{` script,\nwhich exposes three goals:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`prepare-changelog`}</inlineCode>{` goal traverse the recent commits to update the changelog.md for a given release.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create release prepare-changelog --version 2.3.0\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`prepare`}</inlineCode>{` goal create the release artifacts and make them available locally for validation.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create release prepare --version 2.3.0 --dev-version 2.4.0\n`}</code></pre>\n    <p>{`— The ‘publish’ goal get a previous prepared release and publish the artifacts to respective repositories.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create release publish --version 2.3.0\n`}</code></pre>\n    <h3>{`Creating minor/patch releases from branches`}</h3>\n    <p>{`In the case of creating minor/patch releases from a branch, one will need to modify the release script so that it\nperform a checkout of the `}<inlineCode parentName=\"p\">{`given branch`}</inlineCode>{` after cloning the Elyra repository:`}</p>\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`checkout_code`}</inlineCode>{` function in the create-release script and add the following at the end of that function:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`check_run(['git', 'checkout', '<BRANCH NAME>'], cwd=config.source_dir)\ncheck_run(['git', 'status'], cwd=config.source_dir)\n`}</code></pre>\n    <h2>{`Preparing Elyra release`}</h2>\n    <h3>{`Generate the release changelog`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create release prepare-changelog --version 2.3.0\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The updated changelog will then be available at `}<inlineCode parentName=\"li\">{`./build/release/elyra`}</inlineCode>{` as a git commit`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The release manager should make any necessary adjustments and/or updates before ‘pushing the changelog commit’. `}</li>\n          <li parentName=\"ul\">{`Note that the release manage could also push the change log as a new pull request to gather inputs from the community.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`Prepare the release artifacts`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create-release.py prepare --version 2.0.0 --dev-version 2.1.0 [--rc 0][--beta 0]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The artifacts for the new release will then be available at `}<inlineCode parentName=\"li\">{`./build/release/`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The Elyra folder is the main release`}</li>\n          <li parentName=\"ul\">{`The other folders, are the individual extensions packaged as standalone packages`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`elyra\nelyra-code-snippet-extension\nelyra-pipeline-editor-extension\nelyra-python-editor-extension\nelyra-r-editor-extension\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Test the release`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Run multiple scenarios, to make sure each extension is working ok`}</li>\n          <li parentName=\"ul\">{`Run the covid-notebook scenario`}</li>\n          <li parentName=\"ul\">{`Run the NOAA sample`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`Publish the release`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`create-release.py publish --version 2.0.0 [--rc 0] [--beta 0]\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Build and publish container images based on release tag`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git pull --rebase\ngit checkout tags/v2.0.0\nmake container-images publish-container-images\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Update dev and latest image tags based on release tag`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker tag elyra/elyra:2.0.0 elyra/elyra:dev && docker push elyra/elyra:dev\ndocker tag elyra/elyra:2.0.0 elyra/elyra:latest && docker push elyra/elyra:latest\ndocker tag quay.io/elyra/elyra:2.0.0 quay.io/elyra/elyra:dev && docker push quay.io/elyra/elyra:dev\ndocker tag quay.io/elyra/elyra:2.0.0 quay.io/elyra/elyra:latest && docker push quay.io/elyra/elyra:latest\n\ndocker tag elyra/airflow:2.0.0 elyra/airflow:dev && docker push elyra/airflow:dev\ndocker tag elyra/airflow:2.0.0 elyra/airflow:latest && docker push elyra/airflow:latest\ndocker tag quay.io/elyra/airflow:2.0.0 quay.io/elyra/airflow:dev && docker push quay.io/elyra/airflow:dev\ndocker tag quay.io/elyra/airflow:2.0.0 quay.io/elyra/airflow:latest && docker push quay.io/elyra/airflow:latest\n\ndocker tag elyra/kf-notebook:2.0.0 elyra/kf-notebook:dev && docker push elyra/kf-notebook:dev\ndocker tag elyra/kf-notebook:2.0.0 elyra/kf-notebook:latest && docker push elyra/kf-notebook:latest\ndocker tag quay.io/elyra/kf-notebook:2.0.0 quay.io/elyra/kf-notebook:dev && docker push quay.io/elyra/kf-notebook:dev\ndocker tag quay.io/elyra/kf-notebook:2.0.0 quay.io/elyra/kf-notebook:latest && docker push quay.io/elyra/kf-notebook:latest\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Merge changes for conda-forge`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-feedstock/pulls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-server-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-server-feedstock/pulls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-code-snippet-extension-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-code-snippet-extension-feedstock/pulls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-pipeline-editor-extension-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-pipeline-editor-extension-feedstock/pulls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-python-editor-extension-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-python-editor-extension-feedstock/pulls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/conda-forge/elyra-r-editor-extension-feedstock/pulls\"\n            }}>{`https://github.com/conda-forge/elyra-r-editor-extension-feedstock/pulls`}</a></li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}