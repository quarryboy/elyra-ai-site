{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./src/pages/dev-guide/development-workflow.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-dev-guide-development-workflow-mdx-69d6e86a405419733cc9.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\n    Development Workflow\n  </span>;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This section describes the steps necessary to build Elyra in a development environment.`}</p>\n    </PageDescription>\n    <h3>{`Requirements`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n        }}>{`Python 3 Miniconda`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org/en/\"\n        }}>{`NodeJS 12+`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://yarnpkg.com/lang/en/docs/install\"\n        }}>{`Yarn`}</a></li>\n    </ul>\n    <h2>{`Setting up your development environment`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install Miniconda\nDownload and install a `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.conda.io/en/latest/miniconda.html\"\n          }}>{`Python 3 version of Miniconda`}</a>{` according to your Operating System`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create a new Python environment`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`conda create -n <env-name> python\n`}</code></pre>\n        <p parentName=\"li\">{`  The python version of your environment will match the miniconda version you installed. You can override the default by explicitly setting `}<inlineCode parentName=\"p\">{`python=3.7`}</inlineCode>{`, for example.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Activate the new environment`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`conda activate <env-name>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Verify your miniconda environment`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`python --version\nwhich python # Displays current python path\npip3 --version\nwhich pip3\n`}</code></pre>\n        <p parentName=\"li\">{`  Python path must be under miniconda envs folder.\nConfirm pip3 location matches where miniconda is installed.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install NodeJS`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`conda install -y -c conda-forge/label/main nodejs\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Setting up your Elyra Github repository`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Fork the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/elyra\"\n          }}>{`Elyra Github repository`}</a>{` (if you haven’t already)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Make a local copy of Elyra fork`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`git clone https://github.com/<your-github-id>/elyra.git\ncd elyra\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Set `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` as described in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/configuring-a-remote-for-a-fork\"\n          }}>{`GitHub documentation`}</a></p>\n      </li>\n    </ul>\n    <h2>{`Building`}</h2>\n    <p>{`Elyra is divided in two parts, a collection of Jupyter Notebook backend extensions,\nand their respective JupyterLab UI extensions. Our JupyterLab extensions are located in our `}<inlineCode parentName=\"p\">{`packages`}</inlineCode>{`\ndirectory. `}</p>\n    <h3>{`Build & Installation`}</h3>\n    <p>{`Elyra uses `}<inlineCode parentName=\"p\">{`make`}</inlineCode>{` to automate some of the development workflow tasks.`}</p>\n    <p>{`Issuing a `}<inlineCode parentName=\"p\">{`make`}</inlineCode>{` command with no task specified will provide a list of the currently supported tasks.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ make\n\nclean                          Make a clean source tree and uninstall extensions\ncontainer-images               Build all container images\ndocs                           Build docs\ninstall-server                 Build and install backend only\ninstall                        Build and install\nlint                           Run linters\npublish-container-images       Publish all container images\nrelease                        Build wheel file for release\ntest                           Run all tests (backend, frontend and cypress integration tests)\nwatch                          Watch packages. For use alongside jupyter lab --watch\n`}</code></pre>\n    <p>{`You can build and install all Elyra packages with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make clean install\n`}</code></pre>\n    <p>{`You can check that the notebook server extension was successfully installed with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`jupyter serverextension list\n`}</code></pre>\n    <p>{`You can check that the JupyterLab extension was successfully installed with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`jupyter labextension list\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` When switching between Elyra major versions, it is recommended to clean your JupyterLab environment before a build.\nThe `}<inlineCode parentName=\"p\">{`clean-jupyterlab`}</inlineCode>{` removes your JupyterLab packages and completely deletes your Jupyter workspace.\nMake sure to backup any important data in your environment before running the script.`}</p>\n    </InlineNotification>\n    <p>{`To clean your environment and install the latest JupyterLab:\n`}<inlineCode parentName=\"p\">{`etc/scripts/clean-jupyterlab.sh`}</inlineCode>{`\nTo specify a JupyterLab version to be installed:\n`}<inlineCode parentName=\"p\">{`etc/scripts/clean-jupyterlab.sh --version 2.2.9`}</inlineCode></p>\n    <h3>{`Parallel Development with @elyra/pipeline-editor`}</h3>\n    <p>{`You can install Elyra using a local build of @elyra/pipeline-editor with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make clean dev-link install\n`}</code></pre>\n    <h2>{`Back-end Development`}</h2>\n    <p>{`After making code changes to the back-end, you can re-build Elyra’s Python package with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make install-server\n`}</code></pre>\n    <p>{`This command builds and installs the updated  Python package independently, skipping any UI component build.`}</p>\n    <p>{`Restart JupyterLab to pick up the new code changes.`}</p>\n    <h2>{`Front-end Incremental Development`}</h2>\n    <p>{`Elyra supports incremental development using `}<inlineCode parentName=\"p\">{`--watch`}</inlineCode>{`. This allows you to make code changes to\nfront-end packages and see them without running `}<inlineCode parentName=\"p\">{`make install`}</inlineCode>{` again.`}</p>\n    <p>{`After installation run the following to watch for code changes and rebuild automatically:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make watch\n`}</code></pre>\n    <p>{`Then in a separate terminal, using the same Python environment, start JupyterLab in watch mode:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`jupyter lab --watch\n`}</code></pre>\n    <p>{`When in watch mode JupyterLab will watch for changes in the build of each package and rebuild.\nTo see your changes just refresh JupyterLab in your browser.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` JupyterLab watch mode will not pick up changes in package dependencies like `}<inlineCode parentName=\"p\">{`services`}</inlineCode>{`.\nSo when making changes to services you will need to stop and restart `}<inlineCode parentName=\"p\">{`jupyter lab --watch`}</inlineCode>{` and\nnot just refresh your browser.`}</p>\n    </InlineNotification>\n    <h2>{`Building the Elyra Container Image`}</h2>\n    <p>{`Elyra’s container image can be built using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make elyra-image\n`}</code></pre>\n    <p>{`By default, the command above will build a container image from the tip of the repository master branch.`}</p>\n    <p>{`In order to build from a particular release, you can pass a `}<inlineCode parentName=\"p\">{`TAG`}</inlineCode>{` parameter to the make command as below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`make elyra-image TAG=2.2.1\n`}</code></pre>\n    <p>{`Official container images are published on `}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/elyra/elyra/tags\"\n      }}>{`Docker Hub`}</a>{`\nand `}<a parentName=\"p\" {...{\n        \"href\": \"https://quay.io/repository/elyra/elyra?tab=tags\"\n      }}>{`quay.io`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}