{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/common-properties/conditions.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-common-properties-conditions-mdx-664246eadaa526ebc308.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Conditions define a set of specifications for evaluating parameter values. The specifications support complex interdependency checking such as relationships between multiple parameters (i.e. Valid values for parameter one depend upon the value of parameter two).`}</p>\n    </PageDescription>\n    <p>{`A visual documentation containing examples of the following group/panels and control types are available at `}<a parentName=\"p\" {...{\n        \"href\": \"https://wdp-common-canvas-dev.stage1.mybluemix.net/#/properties\"\n      }}>{`https://wdp-common-canvas-dev.stage1.mybluemix.net/#/properties`}</a>{`.`}</p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n <AnchorLink mdxType=\"AnchorLink\">Validaton definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Enabled definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Visible definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Filter definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Enum filter definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Allow Change definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">A note on table cell conditions </AnchorLink>\n \n    </AnchorLinks>\n    <h2>{`Validaton definition`}</h2>\n    <p>{`A single validation. The fail_message is displayed upon validation failure.`}</p>\n    <p>{`The attributes for the validation definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` (string) A unique identifier for the validation. This is required if multiple validations have the same focus_parameter_ref value.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fail_message`}</inlineCode>{` (object) `}<strong parentName=\"li\">{`Required`}</strong>{` The message to display if the validation fails. Each fail_message consist of the following attributes`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`message`}</inlineCode>{` (object) `}<strong parentName=\"li\">{`Required`}</strong>{` The message to display. Found `}<a href=\"ui-hints/#resource-definition\">{`here`}</a>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`focus_parameter_ref`}</inlineCode>{` (string) `}<strong parentName=\"li\">{`Required`}</strong>{` The parameter control to get focus after displaying the error/warning. If the validation refers to a table cell, then control must have the column indicator. For example if the validation is for `}<inlineCode parentName=\"li\">{`MyTable`}</inlineCode>{` cell column 2 then `}<inlineCode parentName=\"li\">{`MyTable[2]`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` (string) Type of messages. Valid values are `}<inlineCode parentName=\"li\">{`error, warning, info`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) Specification for how to evaluate the validity of the parameter. The evaluate attribute can be one of the following structures.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`condition`}</inlineCode>{` (object) This is a single condition that evaluates to true or false.`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`op`}</inlineCode>{` (string) `}<strong parentName=\"li\">{`Required`}</strong>{` A single operator for the properties of the condition. Valid values are: `}<inlineCode parentName=\"li\">{`isEmpty`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`isNotEmpty`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`greaterThan`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`lessThan`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`equals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`notEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`contains`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`notContains`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`colNotExists`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`isDateTime`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmTypeEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmTypeNotEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmMeasurementEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmMeasurementNotEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmRoleEquals`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`dmRoleNotEquals`}</inlineCode>{`.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_ref`}</inlineCode>{` (string) `}<strong parentName=\"li\">{`Required`}</strong>{` The primary parameter.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_2_ref`}</inlineCode>{` (string) Second parameter for multi-parameter validation.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`value`}</inlineCode>{` (string, boolean, number) Value against which to compare the primary parameter value.`}</li>\n              <li parentName=\"ul\"><inlineCode parentName=\"li\">{`values`}</inlineCode>{` (array`}{`[string]`}{`) Values against which to compare the primary parameter value is in. Used only in filter conditions.`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`or`}</inlineCode>{` (object) This is a container of ‘or’ conditions. Evaluates to true if ANY sub-condition evaluates to true. Can nest any number of additional conditional types.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`and`}</inlineCode>{` (object) This is a container of ‘and’ conditions. Evaluates to true if ALL sub-condition evaluates to true. Can nest any number of additional conditional types.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`Enabled definition`}</h2>\n    <p>{`Enablement test. Disables controls if evaluate is false.`}</p>\n    <p>{`The attributes for the enabled definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` (array`}{`[string]`}{`) Array of parameter names affected by this operation. If evaluate is false, then the controls associated with these parameters are disabled. Note that individual radio buttons can be disabled by using the radio button value name instead of the overall property name in the parameter_refs array.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`action_refs`}</inlineCode>{` (array`}{`[string]`}{`) Array of action names affected by this operation. If evaluate is false, then the action button or image associated with these action names are disabled.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) see the `}<inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` attribute in `}<inlineCode parentName=\"li\">{`validation definition`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2>{`Visible definition`}</h2>\n    <p>{`Visibility test. Hides controls if evaluate is false.`}</p>\n    <p>{`The attributes for the visible definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` (array`}{`[string]`}{`) Array of parameter names affected by this operation. If evaluate is false, then hide the controls associated with these parameters.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`action_refs`}</inlineCode>{` (array`}{`[string]`}{`) Array of action names affected by this operation. If evaluate is false, then the action button or image associated with these action names are disabled.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) see the `}<inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` attribute in `}<inlineCode parentName=\"li\">{`validation definition`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2>{`Filter definition`}</h2>\n    <p>{`Filter test. The filter will determine which data record fields to include in a control.`}</p>\n    <p>{`The attributes for the filter definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_ref`}</inlineCode>{` (string) Parameter id affected by this operation. This must be a parameter that operates upon datarecord-metadata columns.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` (string) Exclusive with `}<inlineCode parentName=\"li\">{`parameter_ref`}</inlineCode>{` and used with `}<inlineCode parentName=\"li\">{`dmSharedFields`}</inlineCode>{`. Parameter ids affected by this operation. They must be parameters that operate upon datarecord-metadata columns.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) see the `}<inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` attribute in `}<inlineCode parentName=\"li\">{`validation definition`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Supported operations (op):`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmType`}</inlineCode>{` - filters `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` value from schema.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmMeasurement`}</inlineCode>{` - filters `}<inlineCode parentName=\"li\">{`measurement`}</inlineCode>{` value from schema.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmModelingRole`}</inlineCode>{` - filters `}<inlineCode parentName=\"li\">{`modeling_role`}</inlineCode>{` value from schema.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dmSharedFields`}</inlineCode>{` - shares source fields with all field chooser property names found in the `}<inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` array.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example 1</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"filter\": {\n        \"parameter_ref\": \"fields_filter_measurement\",\n        \"evaluate\": {\n        \"condition\": {\n            \"op\": \"dmMeasurement\",\n            \"value\": \"discrete\"\n        }\n        }\n    }\n    }\n`}</code></pre>\n    <Title mdxType=\"Title\">Example 2</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"filter\": {\n        \"parameter_ref\": \"fields_filter_type\",\n        \"evaluate\": {\n        \"condition\": {\n            \"op\": \"dmType\",\n            \"values\": [\"integer\", \"double\"]\n        }\n        }\n    }\n}\n`}</code></pre>\n    <Title mdxType=\"Title\">Example 3</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"filter\": {\n    \"parameter_refs\": [\n       \"fields_filter_type\",\n       \"multi_field_chooser_table\",\n       \"field_chooser_in_another_panel\"\n    ],\n    \"evaluate\": {\n      \"condition\": {\n        \"op\": \"dmSharedFields\"\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h2>{`Enum filter definition`}</h2>\n    <p>{`Filters the available options for enumeration parameters. Reduces the available enumeration items if evaluate is true.`}</p>\n    <p>{`The attributes for the enum_filter definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`target`}</inlineCode>{` (object) Contains a target parameter_ref reference and a replacement values array.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) see the `}<inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` attribute in `}<inlineCode parentName=\"li\">{`validation definition`}</inlineCode>{`.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"enum_filter\": {\n    \"target\": {\n      \"parameter_ref\": \"radioset_filtered\",\n      \"values\": [\n        \"red\",\n        \"yellow\",\n        \"green\"\n      ]\n    },\n    \"evaluate\": {\n      \"condition\": {\n        \"parameter_ref\": \"filter_radios\",\n        \"op\": \"equals\",\n        \"value\": true\n    }\n  }\n}\n\n\n`}</code></pre>\n    <h2>{`Allow change definition`}</h2>\n    <p>{`Allow change validates that a change is allowed on a property. If it evaluates to true then the value for the property is changed. This is typically used to restrict values that are invalid in one property based on the value in another property. For example, if the property represents a storage type with a value of string, then a property that represents a measurement type should not be allowed to be set to continuous.`}</p>\n    <p>{`The attributes for the enum_filter definition are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameter_refs`}</inlineCode>{` (array`}{`[string]`}{`) Array of parameter names affected by this operation.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`evaluate`}</inlineCode>{` (object) see the evaluate attribute in validation definition.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n      \"allow_change\": {\n        \"parameter_refs\": [\n          \"ST_mse_table[2]\"\n        ],\n        \"evaluate\": {\n          \"or\": [\n            {\n              \"condition\": {\n                \"parameter_ref\": \"ST_mse_table[2]\",\n                \"op\": \"notEquals\",\n                \"value\": \"Football\"\n              }\n            },\n            {\n              \"condition\": {\n                \"parameter_ref\": \"ST_mse_table[5]\",\n                \"op\": \"notEquals\",\n                \"value\": \"European\"\n              }\n            }\n          ]\n        }\n      }\n    }\n\n`}</code></pre>\n    <h2>{`A note on table cell conditions`}</h2>\n    <p>{`Support for table cell conditions is achieved via the use of the array subscript operator, `}<inlineCode parentName=\"p\">{`[]`}</inlineCode>{`. When evaluating table cells, one uses the table identifier with an array subscript indicating the zero-based table column being operated upon (which also corresponds to the sub-control index as defined in `}<inlineCode parentName=\"p\">{`complex_types`}</inlineCode>{`).`}</p>\n    <p>{`So for example if one has a StructureTable property named myTable, column conditions on that table are referred to using `}<inlineCode parentName=\"p\">{`myTable[1]`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`myTable[3]`}</inlineCode>{`, etc.`}</p>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`  \"conditions\": [\n      {\n        \"validation\": {\n          \"fail_message\": {\n            \"type\": \"error\",\n            \"focus_parameter_ref\": \"inputFieldList\",\n            \"message\": {\n              \"resource_key\": \"input_field_list_not_empty\"\n            }\n          },\n          \"evaluate\": {\n            \"condition\": {\n              \"parameter_ref\": \"inputFieldList\",\n              \"op\": \"isNotEmpty\"\n            }\n          }\n        }\n      },\n      {\n    \"visible\": {\n      \"parameter_refs\": [\n         \"oneofselectPets\"\n      ],\n      \"evaluate\": {\n         \"condition\": {\n            \"parameter_ref\": \"oneofselectAnimals\",\n        \"op\": \"notContains\",\n        \"value\": \"lion\"\n          }\n      }\n    }\n      },\n     {\n    \"visible\": {\n      \"action_refs\": [\n         \"action_button\"\n      ],\n      \"evaluate\": {\n         \"condition\": {\n            \"parameter_ref\": \"button_hide_checkbox\",\n        \"op\": \"equals\",\n        \"value\": false\n          }\n      }\n    }\n      },\n      {\n    \"enabled\": {\n      \"parameter_refs\": [\n        \"radiosetColor\"\n      ],\n      \"evaluate\": {\n        \"condition\": {\n          \"parameter_ref\": \"checkboxEnable\",\n          \"op\": \"checked\"\n            }\n      }\n    }\n      },\n      {\n    \"validation\": {\n      \"fail_message\": {\n        \"type\": \"error\",\n        \"focus_parameter_ref\": \"subsamplingRate\",\n        \"message\": {\n          \"resource_key\": \"subsampling_rate_not_valid\"\n        }\n      },\n      \"evaluate\": {\n        \"and\": [\n          {\n            \"condition\": {\n              \"parameter_ref\": \"subsamplingRate\",\n              \"op\": \"greaterThan\",\n              \"value\": 0\n            }\n          },\n          {\n            \"or\": [\n              {\n                \"condition\": {\n                  \"parameter_ref\": \"subsamplingRate\",\n                  \"op\": \"lessThan\",\n                  \"value\": 1\n                }\n              },\n              {\n                \"condition\": {\n                  \"parameter_ref\": \"subsamplingRate\",\n                  \"op\": \"equals\",\n                  \"value\": 1\n                }\n              }\n            ]\n          }\n        ]\n      }\n    }\n      },\n      {\n    \"enabled\": {\n      \"parameter_refs\": [\n        \"field_types[2]\"\n      ],\n      \"evaluate\": {\n        \"condition\": {\n          \"parameter_ref\": \"field_types[1]\",\n          \"op\": \"checked\"\n        }\n      }\n    }\n      }\n    }\n  ]\n\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}