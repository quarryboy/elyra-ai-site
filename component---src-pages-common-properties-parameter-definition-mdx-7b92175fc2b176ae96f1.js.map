{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/common-properties/parameter-definition.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"sOAEeA,ECGI,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,YAAjB,MAAwB,GAAxB,SACjB,mBACEC,UAAWC,IAAGC,IAAOC,YAAR,OACVD,IAAOE,UAAWL,EAAKM,OADb,EAEVH,IAAOI,UAAqB,SAAVR,EAFR,KAIb,mBAAKE,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,iBACb,kBAAIO,GAAG,aAAaP,UAAWE,IAAOM,MACnCX,Q,YCbEY,ECIE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,EAEhBC,yBAAe,cAHjBC,KACEC,aAAgBH,WAHiD,EAmB3BD,GAAkBC,EAApDI,EAnB6D,EAmB7DA,QAASC,EAnBoD,EAmBpDA,aAEXC,EAAUF,EAAN,SArB2D,EAmBtCG,OAEUF,EAA/B,aAAwDP,EAElE,OAAOM,EACL,mBAAKhB,UAAS,WAAaoB,OACzB,mBAAKpB,UAAU,WACb,iBAAGA,UAAWqB,OAAMH,KAAMA,GAA1B,8BAKF,M,oCCnCSI,E,kGCabC,OAAA,WAAU,IAAD,EACuBC,KAAKC,MAA3B5B,EADD,EACCA,MAAOE,EADR,EACQA,KAAM2B,EADd,EACcA,KACfC,EAAaD,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAWjC,EAAKkC,KAAI,SAACC,GAAS,IAAD,EAC3BC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAd,aAClBT,EAAOQ,EAAKgB,QAAQF,EAAiBL,GAC3C,OACE,kBAAIQ,IAAKT,EAAKlC,UAAWC,KAAE,OAAI2C,gBAAeL,EAAnB,GAA+BM,aACxD,YAAC,OAAD,CAAM7C,UAAWqB,OAAMyB,GAAE,GAAK5B,GAC3BgB,OAMT,OACE,mBAAKlC,UAAW+C,iBACd,mBAAK/C,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,mCACb,mBAAKgD,aAAYnD,GACf,kBAAIG,UAAWiD,QAAOjB,S,GA3BAkB,IAAMC,W,yDCZ7BC,ECEU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOpBC,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL,YAAC,IAAD,CAAKrD,UAAWE,IAAOkB,KACrB,YAAC,IAAD,KACE,mBAAKpB,UAAWE,IAAOM,MAAvB,sBACsB8C,EAAaE,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,MCyESC,IAjFC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EACJH,EAAlDI,mBADsD,MACxC,GADwC,EACpCvD,EAAgCmD,EAAhCnD,iBAAkBwD,EAAcL,EAAdK,UAE1CnE,EAMEkE,EANFlE,KACAF,EAKEoE,EALFpE,MACOsE,EAILF,EAJFnE,MACAsE,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,SACAhB,EACEY,EADFZ,KAGMiB,EAAkBC,cAAlBD,cAIEE,EACN3D,yBAAe,cADjBC,KAAQ0D,WAUJ9C,EAAO8C,EACTT,EAASU,SAAS/B,QAAQ8B,EAAY,IACtCT,EAASU,SAUP9C,EAPC5B,EAEH2B,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,IAAQrC,EAAK,GAAI,CAAEsC,OAAO,IAHV,GASdvC,EAAQqE,GAAoBG,EAElC,OACE,YAACI,EAAA,EAAD,CACE3E,KAAMA,EACN4E,UAAU,EACV7E,MAAOA,EACP8E,UAAW/E,EACXgF,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACX,YAAC,EAAD,CACErE,MAAOmE,EAAQ,YAACA,EAAD,MAAYnE,EAC3BkF,MAAM,QACNhF,KAAMA,EACND,MAAOA,IAERC,GACC,YAAC,EAAD,CACEF,MAAOA,EACP6B,KAAMA,EACN3B,KAAMA,EACN4B,WAAYA,IAGhB,YAACqD,EAAA,EAAD,CAAMC,QAAM,GACTnB,EACD,YAAC,EAAD,CAAUpD,iBAAkBA,IAC5B,YAAC,EAAD,CAAkB2C,KAAMA,KAE1B,YAAC6B,EAAA,EAAD,CACErB,YAAaA,EACbE,SAAUA,EACVrC,KAAMA,EACN3B,KAAMA,EACN4B,WAAYA,IAEd,YAACwD,EAAA,EAAD,S,qBCzFNC,EAAOC,QAAU,CAAC,kBAAoB,iDAAiD,oBAAsB,mDAAmD,KAAO,+BAA+B,IAAM,gC,qBCA5MD,EAAOC,QAAU,CAAC,kBAAoB,iDAAiD,oBAAsB,mDAAmD,cAAgB,yCAAyC,KAAO,+BAA+B,SAAW,oCAAoC,KAAO,+BAA+B,aAAe,0C,qBCAnWD,EAAOC,QAAU,CAAC,kBAAoB,2DAA2D,oBAAsB,6DAA6D,KAAO,yCAAyC,IAAM,0C,qBCA1OD,EAAOC,QAAU,CAAC,kBAAoB,mDAAmD,oBAAsB,qDAAqD,WAAa,wCAAwC,SAAW,sCAAsC,SAAW,sCAAsC,KAAO,mC,8LCOrTC,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6B/D,GAEzD,OADAgE,QAAQC,KAAK,aAAeF,EAAO,2EAC5B,kBAAS/D,KAGZkE,EAAkBJ,EAAc,mBAChCK,EAAcL,EAAc,eAC5BM,EAAaN,EAAc,cAC3BvB,EAAQuB,EAAc,SACtBO,EAAqBP,EAAc,sBACnCQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACG1E,EACF,8BACD,OAAO,YAACuE,EAAD,eAAeD,EAAiBtE,EAAhC,CAAuC0E,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,6QACA,8EAEF,YAACR,EAAD,CAAaQ,QAAQ,eACxB,YAACP,EAAD,CAAYO,QAAQ,cAApB,oBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,sBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,yBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,sBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,iBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,YACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,cACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,qBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,cAEG,0CACA,+DAA8C,0BAAYC,WAAW,KAAvB,YAA9C,oGACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,wFAKL,4CACA,6LACA,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,aACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,oQAYL,+CACA,oWACA,wFACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,IAAwE,kBAAIA,WAAW,MAAf,YAAxE,qEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,IAA6E,kBAAIA,WAAW,MAAf,SAA7E,wCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,yBAA1E,qEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,sDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,qEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,IAA8E,kBAAIA,WAAW,MAAf,aAA9E,2DAEF,2FACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAEtB,kEACA,qBAAG,0BAAYA,WAAW,KAAvB,sDACH,qFACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,6EACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,uFACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,8KAEF,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,WACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,ydA4BL,4CACA,qRACA,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,WACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,2FAKL,0QAAyP,0BAAYA,WAAW,KAAvB,iBAAzP,+DAAkX,iBAAGnF,KAAK,YAAR,QAAlX,KACA,8JAA6I,iBAAGA,KAAK,4BAAR,qBAA7I,KACA,uCACA,yEACA,sBACE,kBAAImF,WAAW,MAAK,0BAAYA,WAAW,MAAvB,MAApB,IAAwE,kBAAIA,WAAW,MAAf,YAAxE,4EACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,OAAuH,0BAAYA,WAAW,MAAvB,UAAvH,kIAA6S,0BAAYA,WAAW,MAAvB,SAA7S,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,kBAApB,IAAoF,kBAAIA,WAAW,MAAf,YAApF,iEACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,cAApB,IAAgF,kBAAIA,WAAW,MAAf,YAAhF,wIAEF,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,WACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,ubAuBL,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,qBAAG,sBAAQC,WAAW,KAAnB,qCAAH,8MAGF,kCACA,wKAAuJ,iBAAGnF,KAAK,YAAR,QAAvJ,KACA,oCACA,mMAAkL,iBAAGA,KAAK,cAAR,QAAlL,KACA,2CACA,kQAAiP,6BAAGmF,WAAW,KAAQ,CACnQ,KAAQ,qGADqO,oGAAjP,KAGA,kEACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,4DACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,iKACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,IAA8E,kBAAIA,WAAW,MAAf,aAA9E,uFACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,YAApB,IAA8E,kBAAIA,WAAW,MAAf,YAA9E,8CAEF,2EACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,eAApB,IAAiF,kBAAIA,WAAW,MAAf,YAAjF,gCACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,IAA6E,kBAAIA,WAAW,MAAf,YAA7E,0JACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QAApB,IAA0E,kBAAIA,WAAW,MAAf,YAA1E,sIACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qBAApB,IAAuF,kBAAIA,WAAW,MAAf,YAAvF,sFACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,IAA4E,kBAAIA,WAAW,MAAf,yBAA5E,uDACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,IAA4E,kBAAIA,WAAW,MAAf,YAA5E,4DAEF,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,WACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,+6BAmDL,mCACA,2DACA,YAACrC,EAAD,CAAOoC,QAAQ,SAAf,WACA,uBAAK,gCAAMC,WAAW,OAAU,IAA3B,oxBAkBTH,EAAWI,gBAAiB","file":"component---src-pages-common-properties-parameter-definition-mdx-7b92175fc2b176ae96f1.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Title = makeShortcode(\"Title\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The parameter definition json files is an easy way to provide input for controlling the common properties dialog. It consists of information that is available in the operator json combined with UI hints, information on data sets, and resources.`}</p>\n      <p>{`The parameter definition consists of eight sections.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n <AnchorLink mdxType=\"AnchorLink\">Title definition</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Current parameters</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Parameter definitions</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">UI-only parameters</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Complex types</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">UI hints</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Conditions</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Data set metadata</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Resources</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Title definition`}</h2>\n    <p>{`The title of the properties editor. If `}<inlineCode parentName=\"p\">{`editable`}</inlineCode>{` is set to true (default), the title can be edited. If set to false, the title will be readonly.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"titleDefinition\": {\n    \"title\": \"Properties Title\",\n    \"editable\": true\n  }\n`}</code></pre>\n    <h2>{`Current parameters`}</h2>\n    <p>{`A list of input parameters and initial values upon input. The list is a set of key/value pairs with the key being the field name and the value is the initial value.`}</p>\n    <Title mdxType=\"Title\"> Example </Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"current_parameters\": {\n    \"targetField\": [],\n    \"inputFieldList\": [],\n    \"elasticNetParam\": 0.0,\n    \"fitIntercept\": false,\n    \"maxIter\": 75,\n    \"regParam\": 0.1,\n    \"standardization\": true,\n    \"threshold\": 0.5,\n    \"tol\": 0.0000010\n  }\n`}</code></pre>\n    <h2>{`Parameter definitions`}</h2>\n    <p>{`The list of parameters definitions for this property dialog. The list contains the name of the parameter, the data type of the parameter, the role and the default value. The information provided is as needed by the backend engine, i.e. the parameter name should be the name of the parameter that is expected for the backend engine.`}</p>\n    <p>{`The list of parameter definitions has the following attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Required Parameter identifier as consumed by the backend engine.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`default`}</inlineCode>{` `}<em parentName=\"li\">{`(any)`}</em>{` The default value of the parameter.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`enum`}</inlineCode>{` `}<em parentName=\"li\">{`(array`}{`[string]`}{`)`}</em>{` A restricted list of string values that are valid for the field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Parameter type as consumed by the backend engine.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`role`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Parameter role, which is an optional specialization of the type.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`required`}</inlineCode>{` `}<em parentName=\"li\">{`(boolean)`}</em>{` Indication whether parameter is required or optional.`}</li>\n    </ul>\n    <p>{`Parameter types have one of a fixed set of basic types. These are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`integer`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`double`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`string`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`date`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`time`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`timestamp`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`custom`}</inlineCode></li>\n    </ul>\n    <p>{`These can be used as maps or arrays e.g.:`}</p>\n    <p><inlineCode parentName=\"p\">{`array[<value-type>]: a sequence or list of values`}</inlineCode></p>\n    <p>{`Parameter roles defined by the role attribute can be one of:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expression`}</inlineCode>{`: an expression assumed to be in the expression language for the run time`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`column`}</inlineCode>{`: value represents one or more columns from the data model visible to this operator`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`new_column`}</inlineCode>{`: value represents the name of a new column to be added to the data model and must therefore not match an existing column and conform to existing syntactic restrictions.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"parameters\": [\n    {\n      \"id\":\"targetField\",\n      \"type\":\"string\",\n      \"default\":\"\",\n      \"role\":\"column\"\n    },\n    {\n      \"id\":\"inputFieldList\",\n      \"type\":\"array[string]\",\n      \"default\":[],\n      \"role\":\"column\"\n    },\n    {\n      \"id\": \"impurity\",\n      \"enum\": [\n        \"gini\",\n        \"entropy\"\n      ],\n      \"default\": \"gini\"\n    },\n    {\n      \"id\":\"elasticNetParam\",\n      \"type\":\"double\",\n      \"default\":0.0\n    }\n]\n`}</code></pre>\n    <h2>{`UI-only Parameters`}</h2>\n    <p>{`A list of input parameters and initial values upon input. This set of parameters are separated from the backend parameters (current parameters). The idea is that these parameters are not passed into the backend engine by the common properties consumer.`}</p>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"current_ui_parameters\": {\n    \"databaseResource\": true,\n    \"tol\": 0.0000010\n  }\n`}</code></pre>\n    <p>{`UI-only parameters require information about the parameters same as the parameter definition information used for the backend parameters. The UI-only parameter definition information is stored in the UI-hints section in the sub-section named `}<inlineCode parentName=\"p\">{`ui_parameters`}</inlineCode>{`. A description of the UI hints specifications can be found `}<a href=\"ui-hints\">{`here`}</a>{`.`}</p>\n    <p>{`UI-only properties are returned to the consuming application via a separate parameter on the applyPropertiesChanges callback. See the `}<a href=\"/common-canvas/callbacks\">{`Callbacks section`}</a>{`.`}</p>\n    <h2>{`Complex types`}</h2>\n    <p>{`The complex types have the following attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Required Identifier of complex type, can be referenced in other places.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` If `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` is specified, common properties will return the values as an array of objects consisting of key value pairs. This defaults to `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key_definition`}</inlineCode>{` `}<em parentName=\"li\">{`(object)`}</em>{` A parameter definition attribute on the key parameter field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parameters`}</inlineCode>{` `}<em parentName=\"li\">{`(object)`}</em>{` Required List of parameters fields. Each parameter can be defined as a parameter definition attribute or a complex type attribute.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"complex_types\": [\n    {\n      \"id\": \"SortEntry\",\n      \"type\": \"object\",\n      \"key_definition\": {\n        \"id\": \"field\",\n        \"type\": \"string\",\n        \"role\": \"column\",\n        \"default\": \"\"\n      },\n      \"parameters\": [\n        {\n          \"id\": \"sort_order\",\n          \"enum\": [\n            \"Ascending\",\n            \"Descending\"\n          ],\n          \"default\": \"Ascending\"\n        }\n      ]\n    }\n  ]\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`On Parameters and Complex Types::`}</strong>{`\nNote that both parameter and complex type definitions are in the exact same format as defined in the operator schema. Therefore the contents of operator JSON files can be used for these two sections.`}</p>\n    </InlineNotification>\n    <h2>{`UI Hints`}</h2>\n    <p>{`A set of specifications for controlling the layout and flow of the common properties. A description of the UI hints specifications can be found `}<a href=\"ui-hints\">{`here`}</a>{`.`}</p>\n    <h2>{`Conditions`}</h2>\n    <p>{`A set of specifications for controlling validation checking of parameters during the common properties dialog. A description of the Conditions specifications can be found `}<a href=\"conditions\">{`here`}</a>{`.`}</p>\n    <h2>{`Data Set Metadata`}</h2>\n    <p>{`The data set metadata is an array of datarecord-metadata objects as defined in the datarecord-metadata JSON schema. Each datarecord-metadata object contains and array of fields that provide column information on the input data set at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/elyra-ai/wdp-pipeline-schemas/tree/master/common-pipeline/datarecord-metadata\"\n      }}>{`https://github.com/elyra-ai/wdp-pipeline-schemas/tree/master/common-pipeline/datarecord-metadata`}</a>{`.`}</p>\n    <p>{`The fields have the following attributes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Required Field name. Must be unique within the dataset.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Required Field type. Can be a primitive type (string, integer, double, date, time, timestamp), or a vector, map, or struct containing those types. Required.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nullable`}</inlineCode>{` `}<em parentName=\"li\">{`(boolean)`}</em>{` Indicates whether or not one can place null values into the field. Default: False.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`metadata`}</inlineCode>{` `}<em parentName=\"li\">{`(object)`}</em>{` A set of additional metadata attributes.`}</li>\n    </ul>\n    <p>{`The additional metadata attributes are as follows.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`description`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` A description of the field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`measure`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` The field measurement type. The value can be one of the following. range, discrete, flag, set, ordered-set, typeless, collection, geospatial, default`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`role`}</inlineCode>{` `}<em parentName=\"li\">{`(string)`}</em>{` Field role for modeling. The value can be one of the following. input, target, both, none, partition, split, frequency, record-id`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`max_string_length`}</inlineCode>{` `}<em parentName=\"li\">{`(number)`}</em>{` Maximum character length for string fields. Length is unlimited when not present.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`values`}</inlineCode>{` `}<em parentName=\"li\">{`(array`}{`[string]`}{`)`}</em>{` Array of unique categorical values for the column.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ranges`}</inlineCode>{` `}<em parentName=\"li\">{`(object)`}</em>{` Minimum and maximum discovered values for scalar data.`}</li>\n    </ul>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"dataset_metadata\": [\n  {\n    \"name\": \"Schema-1\",\n    \"fields\": [\n      {\n        \"name\": \"Age\",\n        \"type\": \"integer\",\n        \"metadata\": {\n          \"description\": \"\",\n          \"measure\": \"range\",\n          \"role\": \"input\"\n        }\n      },\n      {\n        \"name\": \"Sex\",\n        \"type\": \"string\",\n        \"metadata\": {\n          \"description\": \"\",\n          \"measure\": \"discrete\",\n          \"role\": \"input\"\n        }\n      },\n      {\n        \"name\": \"BP\",\n        \"type\": \"string\",\n        \"metadata\": {\n          \"description\": \"\",\n          \"measure\": \"discrete\",\n          \"role\": \"input\"\n        }\n      }\n    ]\n  },\n  {\n    \"name\": \"Schema-2\",\n    \"fields\": [\n      {\n        \"name\": \"Birthdate\",\n        \"type\": \"date\",\n        \"metadata\": {\n          \"description\": \"Date of birth\",\n          \"measure\": \"range\",\n          \"role\": \"input\"\n        }\n      }\n    ]\n  }\n]\n\n\n`}</code></pre>\n    <h2>{`Resources`}</h2>\n    <p>{`This is a map of string resources.`}</p>\n    <Title mdxType=\"Title\">Example</Title>\n    <pre><code parentName=\"pre\" {...{}}>{`\"resources\":{\n  \"org.apache.spark.ml.classification.DecisionTreeClassifier.label\":\"Random Forest Classifier\",\n  \"org.apache.spark.ml.classification.DecisionTreeClassifier.desc\":\"Fitted Random Forest Classification Model\",\n  \"inputFieldList.label\":\"Input columns\",\n  \"inputFieldList.desc\":\"Select one or more input columns\",\n  \"targetField.label\":\"Target column\",\n  \"targetField.desc\":\"Select a target column\",\n  \"max_depth_not_valid\":\"The max depth parameter must be greater than or equal to zero\",\n  \"max_iter_not_valid\": \"The max iterations parameter must be greater than or equal to zero\",\n  \"min_instances_per_node_not_valid\": \"The minimum instances per node value must be >= 1\",\n  \"subsampling_rate_not_valid\": \"The subsampling rate value must be > 0 and <= 1\"\n}\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}