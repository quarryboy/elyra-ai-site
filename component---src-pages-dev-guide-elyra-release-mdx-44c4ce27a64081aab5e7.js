(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{"013z":function(e,t,a){"use strict";var l=a("q1tI"),r=a.n(l),n=a("NmYn"),o=a.n(n),c=a("Wbzz"),b=a("Xrax"),i=a("k4MR"),s=a("TSYQ"),u=a.n(s),d=a("QH2O"),p=a.n(d),h=a("qKvR"),m=function(e){var t,a=e.title,l=e.theme,r=e.tabs,n=void 0===r?[]:r;return Object(h.b)("div",{className:u()(p.a.pageHeader,(t={},t[p.a.withTabs]=n.length,t[p.a.darkMode]="dark"===l,t))},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12"},Object(h.b)("h1",{id:"page-title",className:p.a.text},a)))))},g=a("BAC9"),O=function(e){var t=e.relativePagePath,a=e.repository,l=Object(c.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||l,n=r.baseUrl,o=r.subDirectory,b=n+"/edit/"+r.branch+o+"/src/pages"+t;return n?Object(h.b)("div",{className:"bx--row "+g.row},Object(h.b)("div",{className:"bx--col"},Object(h.b)("a",{className:g.link,href:b},"Edit this page on GitHub"))):null},j=a("FCXl"),y=a("dI71"),f=a("I8xM"),k=function(e){function t(){return e.apply(this,arguments)||this}return Object(y.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,l=e.slug,r=l.split("/").filter(Boolean).slice(-1)[0],n=a.map((function(e){var t,a=o()(e,{lower:!0,strict:!0}),n=a===r,b=new RegExp(r+"/?(#.*)?$"),i=l.replace(b,a);return Object(h.b)("li",{key:e,className:u()((t={},t[f.selectedItem]=n,t),f.listItem)},Object(h.b)(c.Link,{className:f.link,to:""+i},e))}));return Object(h.b)("div",{className:f.tabsContainer},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(h.b)("nav",{"aria-label":t},Object(h.b)("ul",{className:f.list},n))))))},t}(r.a.Component),N=a("MjG9"),x=a("CzIb"),v=a("Asxa"),w=a("OIbQ"),T=a.n(w),q=function(e){var t=e.date,a=new Date(t);return t?Object(h.b)(v.c,{className:T.a.row},Object(h.b)(v.a,null,Object(h.b)("div",{className:T.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,a=e.children,l=e.location,r=e.Title,n=t.frontmatter,s=void 0===n?{}:n,u=t.relativePagePath,d=t.titleType,p=s.tabs,g=s.title,y=s.theme,f=s.description,v=s.keywords,w=s.date,T=Object(x.a)().interiorTheme,E=Object(c.useStaticQuery)("2456312558").site.pathPrefix,P=E?l.pathname.replace(E,""):l.pathname,C=p?P.split("/").filter(Boolean).slice(-1)[0]||o()(p[0],{lower:!0}):"",B=y||T;return Object(h.b)(i.a,{tabs:p,homepage:!1,theme:B,pageTitle:g,pageDescription:f,pageKeywords:v,titleType:d},Object(h.b)(m,{title:r?Object(h.b)(r,null):g,label:"label",tabs:p,theme:B}),p&&Object(h.b)(k,{title:g,slug:P,tabs:p,currentTab:C}),Object(h.b)(N.a,{padded:!0},a,Object(h.b)(O,{relativePagePath:u}),Object(h.b)(q,{date:w})),Object(h.b)(j.a,{pageContext:t,location:l,slug:P,tabs:p,currentTab:C}),Object(h.b)(b.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},V0sR:function(e,t,a){"use strict";a.r(t),a.d(t,"Title",(function(){return c})),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return u}));var l=a("wx14"),r=a("zLVn"),n=(a("q1tI"),a("7ljp")),o=a("013z"),c=(a("qKvR"),function(){return Object(n.b)("span",null,"Elyra release")}),b={},i={Title:c,_frontmatter:b},s=o.a;function u(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(n.b)(s,Object(l.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",null,"Before you begin"),Object(n.b)("p",null,"Elyra depends on a few different packages that are under the control of the Elyra community and used\nmostly to abstract integration with other runtimes and components."),Object(n.b)("p",null,"Currently, these packages are:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/elyra-ai/pipeline-editor"}),"pipeline-editor")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/elyra-ai/canvas"}),"canvas"))),Object(n.b)("p",null,"Before you begin creating a new Elyra release, verify if there is a need to release any of these packages, and if\nnecessary, update Elyra to use the new release."),Object(n.b)("h2",null,"Elyra release process overview"),Object(n.b)("p",null,"Building an Elyra release consists of the following steps:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Updating the ",Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"../getting_started/changelog.md"}),"changelog.md")," with the list of changes added to the release"),Object(n.b)("li",{parentName:"ul"},"Building the Elyra python package."),Object(n.b)("li",{parentName:"ul"},"Building Elyra JupyterLab extensions as npm packages."),Object(n.b)("li",{parentName:"ul"},"Generate and build the modified packages to enable single-extension deployment."),Object(n.b)("li",{parentName:"ul"},"Build and publish multiple docker images")),Object(n.b)("p",null,"Most of the steps required to prepare and publish a release have been automated through the ",Object(n.b)("inlineCode",{parentName:"p"},"create-release.sh")," script,\nwhich exposes three goals:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"The ",Object(n.b)("inlineCode",{parentName:"li"},"prepare-changelog")," goal traverse the recent commits to update the changelog.md for a given release.")),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create release prepare-changelog --version 2.3.0\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"The ",Object(n.b)("inlineCode",{parentName:"li"},"prepare")," goal create the release artifacts and make them available locally for validation.")),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create release prepare --version 2.3.0 --dev-version 2.4.0\n")),Object(n.b)("p",null,"— The ‘publish’ goal get a previous prepared release and publish the artifacts to respective repositories."),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create release publish --version 2.3.0\n")),Object(n.b)("h3",null,"Creating minor/patch releases from branches"),Object(n.b)("p",null,"In the case of creating minor/patch releases from a branch, one will need to modify the release script so that it\nperform a checkout of the ",Object(n.b)("inlineCode",{parentName:"p"},"given branch")," after cloning the Elyra repository:"),Object(n.b)("p",null,"Update the ",Object(n.b)("inlineCode",{parentName:"p"},"checkout_code")," function in the create-release script and add the following at the end of that function:"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{}),"check_run(['git', 'checkout', '<BRANCH NAME>'], cwd=config.source_dir)\ncheck_run(['git', 'status'], cwd=config.source_dir)\n")),Object(n.b)("h2",null,"Preparing Elyra release"),Object(n.b)("h3",null,"Generate the release changelog"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create release prepare-changelog --version 2.3.0\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"The updated changelog will then be available at ",Object(n.b)("inlineCode",{parentName:"li"},"./build/release/elyra")," as a git commit",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"The release manager should make any necessary adjustments and/or updates before ‘pushing the changelog commit’. "),Object(n.b)("li",{parentName:"ul"},"Note that the release manage could also push the change log as a new pull request to gather inputs from the community.")))),Object(n.b)("h2",null,"Prepare the release artifacts"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create-release.py prepare --version 2.0.0 --dev-version 2.1.0 [--rc 0][--beta 0]\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"The artifacts for the new release will then be available at ",Object(n.b)("inlineCode",{parentName:"li"},"./build/release/"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"The Elyra folder is the main release"),Object(n.b)("li",{parentName:"ul"},"The other folders, are the individual extensions packaged as standalone packages")))),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"elyra\nelyra-code-snippet-extension\nelyra-pipeline-editor-extension\nelyra-python-editor-extension\nelyra-r-editor-extension\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Test the release",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"Run multiple scenarios, to make sure each extension is working ok"),Object(n.b)("li",{parentName:"ul"},"Run the covid-notebook scenario"),Object(n.b)("li",{parentName:"ul"},"Run the NOAA sample")))),Object(n.b)("h3",null,"Publish the release"),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"create-release.py publish --version 2.0.0 [--rc 0] [--beta 0]\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Build and publish container images based on release tag")),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"git pull --rebase\ngit checkout tags/v2.0.0\nmake container-images publish-container-images\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Update dev and latest image tags based on release tag")),Object(n.b)("pre",null,Object(n.b)("code",Object(l.a)({parentName:"pre"},{className:"language-bash"}),"docker tag elyra/elyra:2.0.0 elyra/elyra:dev && docker push elyra/elyra:dev\ndocker tag elyra/elyra:2.0.0 elyra/elyra:latest && docker push elyra/elyra:latest\ndocker tag quay.io/elyra/elyra:2.0.0 quay.io/elyra/elyra:dev && docker push quay.io/elyra/elyra:dev\ndocker tag quay.io/elyra/elyra:2.0.0 quay.io/elyra/elyra:latest && docker push quay.io/elyra/elyra:latest\n\ndocker tag elyra/airflow:2.0.0 elyra/airflow:dev && docker push elyra/airflow:dev\ndocker tag elyra/airflow:2.0.0 elyra/airflow:latest && docker push elyra/airflow:latest\ndocker tag quay.io/elyra/airflow:2.0.0 quay.io/elyra/airflow:dev && docker push quay.io/elyra/airflow:dev\ndocker tag quay.io/elyra/airflow:2.0.0 quay.io/elyra/airflow:latest && docker push quay.io/elyra/airflow:latest\n\ndocker tag elyra/kf-notebook:2.0.0 elyra/kf-notebook:dev && docker push elyra/kf-notebook:dev\ndocker tag elyra/kf-notebook:2.0.0 elyra/kf-notebook:latest && docker push elyra/kf-notebook:latest\ndocker tag quay.io/elyra/kf-notebook:2.0.0 quay.io/elyra/kf-notebook:dev && docker push quay.io/elyra/kf-notebook:dev\ndocker tag quay.io/elyra/kf-notebook:2.0.0 quay.io/elyra/kf-notebook:latest && docker push quay.io/elyra/kf-notebook:latest\n")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Merge changes for conda-forge",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-feedstock/pulls"}),"https://github.com/conda-forge/elyra-feedstock/pulls")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-server-feedstock/pulls"}),"https://github.com/conda-forge/elyra-server-feedstock/pulls")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-code-snippet-extension-feedstock/pulls"}),"https://github.com/conda-forge/elyra-code-snippet-extension-feedstock/pulls")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-pipeline-editor-extension-feedstock/pulls"}),"https://github.com/conda-forge/elyra-pipeline-editor-extension-feedstock/pulls")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-python-editor-extension-feedstock/pulls"}),"https://github.com/conda-forge/elyra-python-editor-extension-feedstock/pulls")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(l.a)({parentName:"li"},{href:"https://github.com/conda-forge/elyra-r-editor-extension-feedstock/pulls"}),"https://github.com/conda-forge/elyra-r-editor-extension-feedstock/pulls"))))))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-dev-guide-elyra-release-mdx-44c4ce27a64081aab5e7.js.map