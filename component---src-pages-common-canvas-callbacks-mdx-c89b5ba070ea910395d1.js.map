{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/common-canvas/callbacks.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-common-canvas-callbacks-mdx-c89b5ba070ea910395d1.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`You can `}<em parentName=\"p\">{`optionally`}</em>{` provide callback listeners. These will be called when the user interacts with the canvas.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">contextMenuHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">editActionHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">beforeEditActionHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">clickActionHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">decorationActionHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">tipHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">idGeneratorHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">selectionChangeHandler</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">layoutHandler</AnchorLink>\n    </AnchorLinks>\n    <h2>{`contextMenuHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    contextMenuHandler(source, defaultMenu)\n\n`}</code></pre>\n    <p>{`f this callback is not provided common canvas will handle context menus, and their actions, internally. You only need to implement this callback if you want to add or remove options to/from the context menu.`}</p>\n    <p>{`The job of this callback is to tell common canvas what items to display in the context menu. This will be dependent on what object or set of objects the context menu was requested for by the user.`}</p>\n    <p>{`This callback will be called if the user performs a context menu gesture (such as mouse ‘right click’) on a:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`node`}</li>\n      <li parentName=\"ul\">{`link`}</li>\n      <li parentName=\"ul\">{`comment`}</li>\n      <li parentName=\"ul\">{`port`}</li>\n      <li parentName=\"ul\">{`on the canvas background or`}</li>\n      <li parentName=\"ul\">{`if a number of objects are selected, the combination of objects.`}</li>\n    </ul>\n    <p>{`This callback must return an array that defines the menu to be displayed. If the callback is not provided, a default context menu (the defaultMenu passed into the handler) will be displayed by the common canvas.`}</p>\n    <p>{`The source object passed in looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    {\n      type: \"node\",\n      targetObject: {<object_info>},\n      selectedObjectIds: [\"node_1\", \"node_2\"],\n      mousePos: {x: \"10\", y:\"20\"}\n    }\n\n`}</code></pre>\n    <h4>{`type`}</h4>\n    <p>{` Indicates type of object for which the context menu was selected. Can be “node”, “port”, “link”, “canvas” or “comment”`}</p>\n    <h4>{`targetObject`}</h4>\n    <p>{`The object for which the context menu was requested. Only provided when type is “node” or “comment”`}</p>\n    <h4>{`selectedObjectIds`}</h4>\n    <p>{`An array containing the IDs of all currently selected nodes and/or comments`}</p>\n    <h4>{`mousePos`}</h4>\n    <p>{`An object containing the coords of the mouse when the context menu was requested`}</p>\n    <p>{`The callback would need to return an array, that describes the context menu to be displayed, that looks something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    [\n     {action: \"deleteSelectedObjects\", label: \"Delete\"},\n     {divider: true},\n     {action: \"myAction\", label: \"My Action\"}\n     {action: \"myUnavailableAction\", label: \"A test disabled item\", enable: false}\n    ]\n\n`}</code></pre>\n    <p>{`There is one element in the array for each entry in the context menu. An entry can be either a context menu item, which consists of a label and an action, or a divider, whose field would need to be set to true.`}</p>\n    <p>{`Actions can be either internal (implemented inside the common canvas, like “deleteSelectedObjects” above) or external (like “myAction”).`}</p>\n    <p>{`Existing internal actions are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`selectAll`}</li>\n      <li parentName=\"ul\">{`cut`}</li>\n      <li parentName=\"ul\">{`copy`}</li>\n      <li parentName=\"ul\">{`paste`}</li>\n      <li parentName=\"ul\">{`undo`}</li>\n      <li parentName=\"ul\">{`redo`}</li>\n      <li parentName=\"ul\">{`createSupernode`}</li>\n      <li parentName=\"ul\">{`expandSupernode`}</li>\n      <li parentName=\"ul\">{`collapseSupernode`}</li>\n      <li parentName=\"ul\">{`deleteSelectedObjects`}</li>\n      <li parentName=\"ul\">{`createComment`}</li>\n      <li parentName=\"ul\">{`deleteLink`}</li>\n      <li parentName=\"ul\">{`disconnectNode`}</li>\n      <li parentName=\"ul\">{`highlightBranch`}</li>\n      <li parentName=\"ul\">{`highlightDownstream`}</li>\n      <li parentName=\"ul\">{`highlightUpstream`}</li>\n      <li parentName=\"ul\">{`unhighlight`}</li>\n    </ul>\n    <p>{`External actions are custom actions you want common canvas to display for your application. To get common canvas to display your action you would need to return an array from the callback that includes a menu item for the action.`}</p>\n    <p>{`When the user clicks the option in the context menu matching your action common canvas will call the `}<AnchorLink mdxType=\"AnchorLink\">{`editActionHandler`}</AnchorLink>{` callback so you’ll need to implement some code in that callback to execute the intended action. If you want to simply add your action to the default context menu provided by common canvas you can take the defaultMenu parameter provided to the callback and add your menu item to it. Alternatively, you can provide a complete new context menu of your own.`}</p>\n    <p>{`Here is a sample implementation of contextMenuHandler, which takes a source object (described above) and the defaultMenu as parameters, and adds a custom action to the default menu when the user ‘right clicks’ the canvas background.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    contextMenuHandler(source, defaultMenu) {\n      let customMenu = defaultMenu;\n      if (source.type === \"canvas\") {\n    customMenu = customMenu.concat({ action: \"myAction\", label: \"My Action\" });\n      }\n      return customMenu;\n    }\n\n`}</code></pre>\n    <p>{`In addition to adding the context menu item, you would also need to implement the editActionHandler callback to execute the action, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    editActionHandler(data) {\n      if (data.editType === \"myAction\") {\n        // Execute my action code here.\n      }\n    } \n\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Tip:`}</strong>{` To avoid any future name clashes with internal actions you should make sure you action names are unique. For example, you could add a prefix to your action names eg. $MyApp`}<em parentName=\"p\">{`action where $MayApp`}</em>{` is the prefix for all your actions.`}</p>\n    </InlineNotification>\n    <h2>{`editActionHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    editActionHandler(data, command)\n\n`}</code></pre>\n    <p>{`This callback is optional. You don’t need to implement anything for it and it doesn’t return anything. It is called whenever the user does the following types of action on the canvas:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Clicks a tool in the toolbar.`}</li>\n      <li parentName=\"ul\">{`Clicks an option in the context menu.`}</li>\n      <li parentName=\"ul\">{`Presses a `}<Link to=\"/common-canvas/canvas-documentation#keyboard-support\" mdxType=\"Link\">{`key combination`}</Link>{` on the keyboard to cause the canvas to change.`}</li>\n      <li parentName=\"ul\">{`Performs some direct manipulation on the canvas such as:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Creates a node (createNode)`}</li>\n          <li parentName=\"ul\">{`Moves one or a set of nodes/comments (moveObjects)`}</li>\n          <li parentName=\"ul\">{`Edits a comment (editComment)`}</li>\n          <li parentName=\"ul\">{`Links two nodes together (linkNodes)`}</li>\n          <li parentName=\"ul\">{`Links a comment to a node (linkComment)`}</li>\n          <li parentName=\"ul\">{`Resizes a supernode (resizeObjects)`}</li>\n          <li parentName=\"ul\">{`Resizes a comment (editComment)`}</li>\n          <li parentName=\"ul\">{`Expands a supernode in place (expandSuperNodeInPlace)`}</li>\n          <li parentName=\"ul\">{`Navigates into a sub-flow in a supernode (displaySubPipeline)`}</li>\n          <li parentName=\"ul\">{`Navigates out of a sub-flow in a supernode (displayPreviousPipeline)`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`This callback is called `}<strong parentName=\"p\">{`after`}</strong>{` the common-canvas internal object model has been updated. This callback is provided with two parameters: `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`command`}</inlineCode>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <h4 parentName=\"li\">{`data parameter`}</h4>\n        {`that looks like this. The data provided can vary depending on the action the user performed.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`    {\n      editType: \"createComment\",\n      editSource: \"contextmenu\",\n      selectedObjects: [],\n      selectedObjectIds: [],\n      offsetX: 100,\n      offsetY: 42\n    }\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`editType`}</h4>\n        <p parentName=\"li\">{`This is the action that originates from either the toolbar, context menu, keyboard action or direct manipulation on the canvas. If you specified your own action in the context menu or in the toolbar this field will be your action’s name.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`editSource`}</h4>\n        <p parentName=\"li\">{`This is the source of the action. It can be set to “toolbar”, “contextmenu”, “keyboard” or “canvas” (for an action caused by direct manipulation on the canvas).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedObjects`}</h4>\n        <p parentName=\"li\">{`An array of the currently selected objects.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedObjectIds`}</h4>\n        <p parentName=\"li\">{`An array of the IDs of currently selected objects. Included for backward compatibility.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`Other fields`}</h4>\n        <p parentName=\"li\">{`Numerous other fields which vary based on the action and the source of the action.`}</p>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">\n        <h4 parentName=\"li\">{`command parameter`}</h4>\n        {`This is a Javascript class which is the command object that was added to the command stack and executed to run the action ‘requested’ by the user. If the user performed an `}<inlineCode parentName=\"li\">{`undo`}</inlineCode>{` action this will be the command that has been undone. If the user performed a `}<inlineCode parentName=\"li\">{`redo`}</inlineCode>{` action this will be the command that was redone. The command object may contain fields which are connected with the execution of the command.`}</li>\n    </ol>\n    <h2>{`beforeEditActionHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    beforeEditActionHandler(data, command)\n\n`}</code></pre>\n    <p>{`This callback is optional. You don’t `}<em parentName=\"p\">{`need`}</em>{` to implement anything for it but if you do implement it you `}<strong parentName=\"p\">{`must return`}</strong>{` either a data object or null. This callback is called in all the same instances where `}<inlineCode parentName=\"p\">{`editActionHandler`}</inlineCode>{` is called. The difference is that this callback is called `}<em parentName=\"p\">{`before`}</em>{` the internal object model is updated. This gives your application the opportunity to examine the action that is about to be performed and either: let it continue; modify it and let it continue; or cancel it.`}</p>\n    <p>{`This callback is provided with two parameters: `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`command`}</inlineCode>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <h4 parentName=\"li\">{`data parameter`}</h4>\n        {`this is the same as the data object described for `}<inlineCode parentName=\"li\">{`editActionHandler`}</inlineCode>{` (see above)`}</li>\n      <li parentName=\"ol\">\n        <h4 parentName=\"li\">{`command parameter`}</h4>\n        {`typically this will be null but for `}<inlineCode parentName=\"li\">{`undo`}</inlineCode>{` operations (that is where data.editType === “undo”) this will be the command that is about to be undone. For `}<inlineCode parentName=\"li\">{`redo`}</inlineCode>{` operations (that is where data.editType === “redo”) this will be the command that is about to be redone.`}</li>\n    </ol>\n    <p>{`This callback `}<strong parentName=\"p\">{`must return`}</strong>{` either the data object that was passed in or null. `}<inlineCode parentName=\"p\">{`beforeEditActionHandler`}</inlineCode>{` will behave as follows based on what is returned:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If the data object is returned unmodified: the action will be performed as normal.`}</li>\n      <li parentName=\"ul\">{`If the data object is returned modified: the action will be performed based on the modified data object. This means your application can alter the behavior of the action that will be performed. For example, you could intercept a createNode command and change the label for the new node in the nodeTemplate to something different. Then when the node is created the new label will be used. It is recommended you be very very careful when updating this object since there is no error checking in common-canvas to ensure you modified the object correctly.`}</li>\n      <li parentName=\"ul\">{`If null is returned: the action will be cancelled and not performed on the internal object model nor will editActionHandler be called.`}</li>\n    </ul>\n    <p>{`If you need to do any asynchronous activity in the beforeEditActionHandler callback you can:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Return null from the callback - which will cancel the current action`}</li>\n      <li parentName=\"ul\">{`Do your asynchronous activity`}</li>\n      <li parentName=\"ul\">{`Then call`}<inlineCode parentName=\"li\">{` CanvasController.editActionHandler(data)`}</inlineCode>{` passing in the `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{` object as a parameter with the modified properties. This will then execute the action as before. Note: This means the `}<inlineCode parentName=\"li\">{`beforeEditActionHandler`}</inlineCode>{` will be called a second time so be sure you put in a check to make sure you don’t get into a loop.`}</li>\n    </ul>\n    <h2>{`clickActionHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    clickActionHandler(source)\n\n`}</code></pre>\n    <p>{`This callback is provided for your information. You don’t need to implement anything for it and it doesn’t need to return anything to common canvas. It is called whenever the user clicks or double clicks on something on the canvas. You could use this callback to implement opening a properties dialog when the user double clicks a node.`}</p>\n    <p>{`Note: When handling selections, it is recommended the selectionChangeHandler be used in preference to this handler when possible. selectionChangeHandler will notify you of all selection changes regardless of how they occur, such as when the user presses Ctrl+A on the keyboard to select all objects.`}</p>\n    <p>{`At the moment only click/double-click on nodes and the canvas background are returned. It is provided with one parameter that looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    {\n      clickType: \"DOUBLE_CLICK\"\n      id: \"node_1\",\n      objectType: \"node\",\n      selectedObjectIds: [\"node_1\", \"node_2\"]\n    }\n\n`}</code></pre>\n    <p>{`The fields can be:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`clickType`}</h4>\n        <p parentName=\"li\">{`This can be either “SINGLE_CLICK”, “SINGLE_CLICK_CONTEXTMENU” or “DOUBLE_CLICK”`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`objectType`}</h4>\n        <p parentName=\"li\">{`Can be either “node”, “comment”, “canvas” or “region”. “region” is specified when the user pulls out a selection rectangle around a set of objects that might include nodes and comments.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`id`}</h4>\n        <p parentName=\"li\">{`The ID of the node or comment clicked. Only provided when objectType is “node” or “comment”`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedObjectIds`}</h4>\n        <p parentName=\"li\">{`An array of the selected objects (after the click action was performed).`}</p>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` “SINGLE_CLICK_CONTEXTMENU” indicates that the user performed a contextmenu gesture when doing the click such as pressing the right-side mouse button or a two finger tap on a trackpad.`}</p>\n    </InlineNotification>\n    <h2>{`decorationActionHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    decorationActionHandler(object, id, pipelineId)\n\n`}</code></pre>\n    <p>{`Decorations are small images that can be displayed on or near to your nodes and links. They can be for display only or actionable (so the user can click on them). See the canvas JSON schema for information on how to define decorations for your nodes.`}</p>\n    <p>{`This callback is called when the user clicks on an actionable decoration. You don’t need to implement anything for this callback unless you added actionable decorations to your nodes. It doesn’t return anything. It is called whenever the user clicks on a decoration that you added to a node in the canvas JSON.`}</p>\n    <p>{`It is provided with two parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`object`}</h4>\n        <p parentName=\"li\">{`the node or link with which the decoration is associated.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`id`}</h4>\n        <p parentName=\"li\">{`the ID of the decoration that you provided in the canvas JSON`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`pipelineId`}</h4>\n        <p parentName=\"li\">{`the ID of the pipeline for the node.`}</p>\n      </li>\n    </ul>\n    <h2>{`tipHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    tipHandler(tipType, data)\n\n`}</code></pre>\n    <p>{`This callback is called before tips are shown for: palette items; nodes in the canvas; ports or links. The application can handle the callback and return the content of a tip, overwriting the default content. The common canvas provides default implementations for all of the tips except for links.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For palette items, the tip contains the category, node type and node description.`}</li>\n      <li parentName=\"ul\">{`For nodes, the tip contains the name, description and status icon and optionally, if the name was modified from the original name, the original node type.`}</li>\n      <li parentName=\"ul\">{`For ports, the port label is shown.`}</li>\n      <li parentName=\"ul\">{`For links, no tip is shown by default.`}</li>\n    </ul>\n    <p>{`To overwrite the content, you can return either a string or a React element. If your code returns null for a particular type of tip, common-canvas will display the default tip for that object. For an example of an implementation for a tipHandler, see App.js in the test harness code (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/elyra-ai/canvas/blob/master/canvas_modules/harness/src/client/App.js\"\n      }}>{`https://github.com/elyra-ai/canvas/blob/master/canvas_modules/harness/src/client/App.js`}</a>{`).`}</p>\n    <p>{`Before a tip is shown, common-canvas calls the tipHandler with the type of the tip and the data specific to the element.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Palette items:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`tipType: tipTypePaletteItem (common-constants.TIP_TYPE_PALETTE_ITEM)`}</li>\n          <li parentName=\"ul\">{`data: JSON object with node template information (nodeTemplate):`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`\n{\n    \"nodeTemplate\": {\n        \"label\": \"C50\",\n        \"description\": \"C50 Model\",\n        \"operator_id_ref\": \"com.ibm.commonicons.models.c50\",\n        \"type\": \"model_node\",\n        \"image\": \"/images/common_node_icons/models/model_c50.svg\",\n        \"input_ports\": [{...}],\n        \"output_ports\": []\n    }\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Nodes:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`tipType: tipTypeNode (common-constants.TIP_TYPE_NODE)`}</li>\n          <li parentName=\"ul\">{`data: JSON object with pipelineId and node information:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`\n{\n    \"pipelineId\": \"153651d6-9b88-423c-b01b-861f12d01489\",\n    \"node\": {\n        \"id\": \"idGWRVT47XDV\",\n        \"type\": \"execution_node\",\n        \"operator_id_ref\": \"type\",\n        \"output_ports\": [...],\n        \"input_ports\": [...],\n        \"label\": \"Define Types\",\n        \"description\": \"\",\n        \"image\": \"\",\n        \"x_pos\": 445,\n        \"y_pos\": 219,\n        \"class_name\": \"canvas-node\",\n        \"decorations\": [],\n        \"parameters\": [],\n        \"messages\": [],\n        \"inputPortsHeight\": 20,\n        \"outputPortsHeight\": 20,\n        \"height\": 75,\n        \"width\": 70\n    }\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Ports:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`tipType: tipTypePort (common-constants.TIP_TYPE_PORT)`}</li>\n          <li parentName=\"ul\">{`data: JSON object with pipelineId, node and port information:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"pipelineId\": \"153651d6-9b88-423c-b01b-861f12d01489\",\n    \"node\": {\n        \"id\": \"idGWRVT47XDV\",\n        \"type\": \"execution_node\",\n        \"operator_id_ref\": \"type\",\n        \"output_ports\": [{...}],\n        \"input_ports\": [{...}],\n        \"label\": \"Define Types\",\n        \"description\": \"\",\n        \"image\": \"\",\n        \"x_pos\": 445,\n        \"y_pos\": 219,\n        \"class_name\": \"canvas-node\",\n        \"decorations\": [],\n        \"parameters\": [],\n        \"messages\": [],\n        \"inputPortsHeight\": 20,\n        \"outputPortsHeight\": 20,\n        \"height\": 75,\n        \"width\": 70\n    },\n    \"port\": {\n        \"id\": \"outPort\",\n        \"label\": \"Output Port\",\n        \"cardinality\": {\n            \"min\": \"0\",\n            \"max\": \"-1\"\n        }\n    }\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Links`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`tipType: tipTypeLink (common-constants.TIP_TYPE_LINK)`}</li>\n          <li parentName=\"ul\">{`data: JSON object with pipelineId and link information. The link contains the source node (src) and source port id (srcPortId), as well as the target node (trg) and target port id (trgPortId):`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"pipelineId\": \"153651d6-9b88-423c-b01b-861f12d01489\",\n    \"link\": {\n        \"id\": \"canvas_link_3\",\n        \"x1\": 515,\n        \"y1\": 248,\n        \"x2\": 611,\n        \"y2\": 180,\n        \"class_name\": \"canvas-data-link\",\n        \"type\": \"nodeLink\",\n        \"src\": {\n            \"id\": \"idGWRVT47XDV\",\n            \"type\": \"execution_node\",\n            \"operator_id_ref\": \"type\",\n            \"output_ports\": [{...}],\n            \"input_ports\": [{...}],\n            \"label\": \"Define Types\",\n            \"description\": \"\",\n            \"image\": \"\",\n            \"x_pos\": 445,\n            \"y_pos\": 219,\n            \"class_name\": \"canvas-node\",\n            \"decorations\": [],\n            \"parameters\": [],\n            \"messages\": [],\n            \"inputPortsHeight\": 20,\n            \"outputPortsHeight\": 20,\n            \"height\": 75,\n            \"width\": 70\n        },\n        \"srcPortId\": \"outPort\",\n        \"trg\": {\n            \"id\": \"id8I6RH2V91XW\",\n            \"type\": \"binding\",\n            \"operator_id_ref\": \"c50\",\n            \"output_ports\": [],\n            \"input_ports\": [{...}],\n            \"label\": \"C5.0\",\n            \"description\": \"\",\n            \"image\": \"\",\n            \"x_pos\": 611,\n            \"y_pos\": 151,\n            \"class_name\": \"canvas-node\",\n            \"decorations\": [],\n            \"parameters\": [],\n            \"messages\": [],\n            \"inputPortsHeight\": 20,\n            \"outputPortsHeight\": 0,\n            \"height\": 75,\n            \"width\": 70\n        },\n        \"trgPortId\": \"inPort\",\n        \"path\": \"M 515 248C 563 248 563 180 611 180 \"\n    }\n}\n\n`}</code></pre>\n    <h2>{`idGeneratorHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    idGeneratorHandler(action, data)\n\n`}</code></pre>\n    <p>{`This callback is called when new objects are created in the canvas and allows the user to provide their own method to generate a unique id for the object. If no idGeneratorHandler is set or the method returns null, a UUID is generated by common-canvas. The method is called with a string for the action that was performed (create node/comment/link, clone node/comment/link) and a JSON object with additional data.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`create node:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: create_node`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`nodeType:\n{\n   \"label\":\"C50\",\n   \"description\":\"C50 Model\",\n   \"operator_id_ref\":\"com.ibm.commonicons.models.c50\",\n   \"type\":\"model_node\",\n   \"image\":\"/images/common_node_icons/models/model_c50.svg\",\n   \"input_ports\":[\n      {\n         \"id\":\"inPort\",\n         \"label\":\"Input Port\",\n         \"cardinality\":{\n            \"min\":0,\n            \"max\":1\n         }\n      }\n   ],\n   \"output_ports\":[\n\n   ]\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`create comment:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: create_comment`}</li>\n          <li parentName=\"ul\">{`data: n/a`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`create node link:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: create_node_link`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`sourceNode: {\n   \"id\":\"6a547456-f1ea-48a6-9721-45d6ae70dd6b\",\n   \"label\":\"Aggregate\",\n   \"type\":\"execution_node\",\n   \"operator_id_ref\":\"com.ibm.commonicons.operations.aggregate\",\n   \"image\":\"/images/common_node_icons/operations/operation_aggregate.svg\",\n   \"class_name\":\"d3-node-body\",\n   \"input_ports\":[...],\n   \"output_ports\":[...],\n   \"x_pos\":55,\n   \"y_pos\":97.5,\n   \"inputPortsHeight\":20,\n   \"outputPortsHeight\":20,\n   \"height\":75,\n   \"width\":70\n},\ntargetNode: {\n   \"id\":\"71c96629-be46-418b-be63-0a02ef2fe2e0\",\n   \"label\":\"Append\",\n   \"type\":\"execution_node\",\n   \"operator_id_ref\":\"com.ibm.commonicons.operations.append\",\n   \"image\":\"/images/common_node_icons/operations/operation_append.svg\",\n   \"class_name\":\"d3-node-body\",\n   \"input_ports\":[...],\n   \"output_ports\":[...],\n   \"x_pos\":264,\n   \"y_pos\":83.5,\n   \"inputPortsHeight\":20,\n   \"outputPortsHeight\":20,\n   \"height\":75,\n   \"width\":70\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`create comment link:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: create_comment_link`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`comment: {\n   \"id\":\"8c81aac7-ebe5-4f96-9d63-eabc22b09635\",\n   \"class_name\":\"d3-comment-rect\",\n   \"content\":\"\",\n   \"height\":42,\n   \"width\":175,\n   \"x_pos\":50,\n   \"y_pos\":50\n},\ntargetNode: {\n   \"id\":\"71c96629-be46-418b-be63-0a02ef2fe2e0\",\n   \"label\":\"Append\",\n   \"type\":\"execution_node\",\n   \"operator_id_ref\":\"com.ibm.commonicons.operations.append\",\n   \"image\":\"/images/common_node_icons/operations/operation_append.svg\",\n   \"class_name\":\"d3-node-body\",\n   \"input_ports\":[...],\n   \"output_ports\":[...],\n   \"x_pos\":264,\n   \"y_pos\":83.5,\n   \"inputPortsHeight\":20,\n   \"outputPortsHeight\":20,\n   \"height\":75,\n   \"width\":70\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`clone node: triggered when copying&pasting a node`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: clone_node`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`node: {\n   \"id\":\"56d30c83-3a08-4147-933e-b01d3c348ac1\",\n   \"label\":\"Append\",\n   \"type\":\"execution_node\",\n   \"operator_id_ref\":\"com.ibm.commonicons.operations.append\",\n   \"image\":\"/images/common_node_icons/operations/operation_append.svg\",\n   \"class_name\":\"d3-node-body\",\n   \"input_ports\":[...],\n   \"output_ports\":[...],\n   \"x_pos\":265,\n   \"y_pos\":177.5,\n   \"inputPortsHeight\":20,\n   \"outputPortsHeight\":20,\n   \"height\":75,\n   \"width\":70\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`clone comment: triggered when copying&pasting a comment`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: clone_comment`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`comment: {\n   \"id\":\"8c81aac7-ebe5-4f96-9d63-eabc22b09635\",\n   \"class_name\":\"d3-comment-rect\",\n   \"content\":\"\",\n   \"height\":42,\n   \"width\":175,\n   \"x_pos\":50,\n   \"y_pos\":50\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`clone node link: triggered when copying&pasting two connected nodes`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: clone_node_link`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`link: {\n   \"id\":\"12c4308e-f572-402a-8dd3-604d438539d4\",\n   \"class_name\":\"d3-data-link\",\n   \"srcNodeId\":\"2b1af6c2-f98b-4728-97b3-416d40224bce\",\n   \"trgNodeId\":\"b43fffe6-dc01-4d30-8b6d-abd977850a2e\",\n   \"type\":\"nodeLink\"\n},\nsourceNodeId: \"56d30c83-3a08-4147-933e-b01d3c348ac1\",\ntargetNodeId: \"815271f0-f4da-4793-ab8f-c4c32d3dd7e0\"\n\n`}</code></pre>\n    <p>{`Note that the link to be cloned has references to the original source and target nodes, while the sourceNodeId and targetNodeId are the new node ids for the copied nodes. The new nodes are not part of the model yet.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`clone comment link: triggered when copying&pasting a comment and a node that are connected`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`action: clone_comment_link`}</li>\n          <li parentName=\"ul\">{`data:`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`link: {\n   \"id\":\"12c4308e-f572-402a-8dd3-604d438539d4\",\n   \"class_name\":\"d3-comment-link\",\n   \"srcNodeId\":\"2b1af6c2-f98b-4728-97b3-416d40224bce\",\n   \"trgNodeId\":\"b43fffe6-dc01-4d30-8b6d-abd977850a2e\",\n   \"type\":\"commentLink\"\n},\nsourceNodeId: \"56d30c83-3a08-4147-933e-b01d3c348ac1\",\ntargetNodeId: \"815271f0-f4da-4793-ab8f-c4c32d3dd7e0\"\n\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` The link to be cloned has references to the original comment and target node, while the sourceNodeId and targetNodeId are the new ids for the copied comment and node. The new node and comment are not part of the model yet.`}</p>\n    </InlineNotification>\n    <h2>{`selectionChangeHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    selectionChangeHandler(data)\n\n`}</code></pre>\n    <p>{`The selectionChangeHandler callback is triggered whenever the selection in the canvas changes. The callback contains a JSON object with the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"selection\": [\n      \"id6PXRG57DGIV\"\n    ],\n    \"selectedNodes\": [\n      {\n        \"id\": \"id6PXRG57DGIV\",\n        \"type\": \"binding\",\n        \"operator_id_ref\": \"variablefile\",\n        \"output_ports\": [...],\n        \"input_ports\": [],\n        \"label\": \"DRUG1n\",\n        \"description\": \"\",\n        \"image\": \"\",\n        \"x_pos\": 96,\n        \"y_pos\": 219,\n        \"class_name\": \"canvas-node\",\n        \"decorations\": [],\n        \"parameters\": [],\n        \"messages\": [],\n        \"inputPortsHeight\": 0,\n        \"outputPortsHeight\": 20,\n        \"height\": 75,\n        \"width\": 70\n      }\n    ],\n    \"selectedComments\": [],\n    \"addedNodes\": [\n      {\n        \"id\": \"id6PXRG57DGIV\",\n        \"type\": \"binding\",\n        \"operator_id_ref\": \"variablefile\",\n        \"output_ports\": [...],\n        \"input_ports\": [],\n        \"label\": \"DRUG1n\",\n        \"description\": \"\",\n        \"image\": \"\",\n        \"x_pos\": 96,\n        \"y_pos\": 219,\n        \"class_name\": \"canvas-node\",\n        \"decorations\": [],\n        \"parameters\": [],\n        \"messages\": [],\n        \"inputPortsHeight\": 0,\n        \"outputPortsHeight\": 20,\n        \"height\": 75,\n        \"width\": 70\n      }\n    ],\n    \"addedComments\": [],\n    \"deselectedNodes\": [\n      {\n        \"id\": \"id2PZSCTRPRIJ\",\n        \"type\": \"execution_node\",\n        \"operator_id_ref\": \"derive\",\n        \"output_ports\": [...],\n        \"input_ports\": [...],\n        \"label\": \"Na_to_K\",\n        \"description\": \"\",\n        \"image\": \"\",\n        \"x_pos\": 219.01116943359375,\n        \"y_pos\": 162.3754425048828,\n        \"class_name\": \"canvas-node\",\n        \"decorations\": [],\n        \"parameters\": [],\n        \"messages\": [...],\n        \"inputPortsHeight\": 20,\n        \"outputPortsHeight\": 20,\n        \"height\": 75,\n        \"width\": 70\n      }\n    ],\n    \"deselectedComments\": [\n      {\n        \"id\": \"id42ESQA3VPXB\",\n        \"content\": \" comment 1\",\n        \"height\": 34,\n        \"width\": 128,\n        \"x_pos\": 132,\n        \"y_pos\": 103,\n        \"class_name\": \"canvas-comment-1\"\n      }\n    ],\n    previousPipelineId: \"123-456\",\n    selectedPipelineId: \"789-012\"\n}\n\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selection:`}</h4>\n        {`Array with ids of selected nodes and comments`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedNodes`}</h4>\n        {`Array of selected node objects`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedComments`}</h4>\n        {`Array of selected comment objects`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`addedNodes`}</h4>\n        {`Array with node objects that were added to the selection`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`addedComments`}</h4>\n        {`Array with comment objects that were added to the selection`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`deselectedNodes`}</h4>\n        {`Array with node objects that were removed from the selection`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`deselectedComments`}</h4>\n        {`Array with comment objects that were removed from the selection`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`previousPipelineId`}</h4>\n        {`The ID of the Pipeline for the selected objects prior to the selection action`}</li>\n      <li parentName=\"ul\">\n        <h4 parentName=\"li\">{`selectedPipelineId`}</h4>\n        {`The ID of the Pipeline for the newly selected objects`}</li>\n    </ul>\n    <h2>{`layoutHandler`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`    layoutHandler(data)\n`}</code></pre>\n    <p>{`This is an optional handler you don’t need to implement anything for it unless you want to. The layoutHandler callback, when provided, is called for each node on the canvas. The callback should return a Javascript object whose properties will override the default properties for node layout. The callback is provided with a parameter data which is the node object. Your code can look at the node properties and decide which properties it needs to override. This can be used to change the node shape, styling and position and size of node elements like the image, main label etc.`}</p>\n    <p>{`For more details see: `}<Link to=\"/common-canvas/customizing-node-layout\" mdxType=\"Link\">{`Customizing Node Layout Properties`}</Link>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}