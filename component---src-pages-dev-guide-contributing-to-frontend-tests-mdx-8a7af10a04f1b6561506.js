(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{"013z":function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),s=n("NmYn"),i=n.n(s),o=n("Wbzz"),c=n("Xrax"),b=n("k4MR"),l=n("TSYQ"),d=n.n(l),u=n("QH2O"),p=n.n(u),m=n("qKvR"),j=function(e){var t,n=e.title,a=e.theme,r=e.tabs,s=void 0===r?[]:r;return Object(m.b)("div",{className:d()(p.a.pageHeader,(t={},t[p.a.withTabs]=s.length,t[p.a.darkMode]="dark"===a,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:p.a.text},n)))))},g=n("BAC9"),O=function(e){var t=e.relativePagePath,n=e.repository,a=Object(o.useStaticQuery)("1364590287").site.siteMetadata.repository,r=n||a,s=r.baseUrl,i=r.subDirectory,c=s+"/edit/"+r.branch+i+"/src/pages"+t;return s?Object(m.b)("div",{className:"bx--row "+g.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:g.link,href:c},"Edit this page on GitHub"))):null},h=n("FCXl"),f=n("dI71"),x=n("I8xM"),y=function(e){function t(){return e.apply(this,arguments)||this}return Object(f.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,a=e.slug,r=a.split("/").filter(Boolean).slice(-1)[0],s=n.map((function(e){var t,n=i()(e,{lower:!0,strict:!0}),s=n===r,c=new RegExp(r+"/?(#.*)?$"),b=a.replace(c,n);return Object(m.b)("li",{key:e,className:d()((t={},t[x.selectedItem]=s,t),x.listItem)},Object(m.b)(o.Link,{className:x.link,to:""+b},e))}));return Object(m.b)("div",{className:x.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",{"aria-label":t},Object(m.b)("ul",{className:x.list},s))))))},t}(r.a.Component),w=n("MjG9"),N=n("CzIb"),T=n("Asxa"),v=n("OIbQ"),k=n.n(v),C=function(e){var t=e.date,n=new Date(t);return t?Object(m.b)(T.c,{className:k.a.row},Object(m.b)(T.a,null,Object(m.b)("div",{className:k.a.text},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,n=e.children,a=e.location,r=e.Title,s=t.frontmatter,l=void 0===s?{}:s,d=t.relativePagePath,u=t.titleType,p=l.tabs,g=l.title,f=l.theme,x=l.description,T=l.keywords,v=l.date,k=Object(N.a)().interiorTheme,P=Object(o.useStaticQuery)("2456312558").site.pathPrefix,I=P?a.pathname.replace(P,""):a.pathname,E=p?I.split("/").filter(Boolean).slice(-1)[0]||i()(p[0],{lower:!0}):"",z=f||k;return Object(m.b)(b.a,{tabs:p,homepage:!1,theme:z,pageTitle:g,pageDescription:x,pageKeywords:T,titleType:u},Object(m.b)(j,{title:r?Object(m.b)(r,null):g,label:"label",tabs:p,theme:z}),p&&Object(m.b)(y,{title:g,slug:I,tabs:p,currentTab:E}),Object(m.b)(w.a,{padded:!0},n,Object(m.b)(O,{relativePagePath:d}),Object(m.b)(C,{date:v})),Object(m.b)(h.a,{pageContext:t,location:a,slug:I,tabs:p,currentTab:E}),Object(m.b)(c.a,null))}},AwYL:function(e,t,n){"use strict";n.r(t),n.d(t,"Title",(function(){return c})),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return p}));var a,r=n("wx14"),s=n("zLVn"),i=(n("q1tI"),n("7ljp")),o=n("013z"),c=(n("qKvR"),function(){return Object(i.b)("span",null,"Contributing to frontend tests")}),b={},l=(a="PageDescription",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",e)}),d={Title:c,_frontmatter:b},u=o.a;function p(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(i.b)(u,Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(l,{mdxType:"PageDescription"},Object(i.b)("p",null,"Elyra uses two types of frontend tests: integration tests (which use ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.cypress.io/"}),"cypress"),") and unit tests (which use ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io/docs/en/getting-started"}),"jest"),"). ")),Object(i.b)("h2",null,"Integration tests"),Object(i.b)("p",null,"Before running integration tests, docker needs to be installed and running on your machine. There are two ways to run the integration tests: to only see the output logs from all of the integration tests, run ",Object(i.b)("inlineCode",{parentName:"p"},"make test-integration")," from the root directory. To debug tests that are going wrong or develop new tests, run ",Object(i.b)("inlineCode",{parentName:"p"},"make test-integration-debug")," - this will open an interactive tool for writing and debugging tests."),Object(i.b)("p",null,"Elyra’s integration tests automatically start JupyterLab and visit / interact with pages through cypress API calls. The tests use the cypress API to check for the existence of various buttons and visual elements. Refer to the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.cypress.io/api/api/table-of-contents.html"}),"cypress API")," for more details."),Object(i.b)("p",null,"New integration tests can be added to ",Object(i.b)("inlineCode",{parentName:"p"},"tests/integration"),". "),Object(i.b)("h2",null,"Unit tests"),Object(i.b)("p",null,"To run all of the unit tests, use ",Object(i.b)("inlineCode",{parentName:"p"},"make test-ui-unit")," from the root directory. To run the unit tests for a specific Elyra package, simply run ",Object(i.b)("inlineCode",{parentName:"p"},"jest")," from that package’s directory (under ",Object(i.b)("inlineCode",{parentName:"p"},"packages/"),"). For writing tests, ",Object(i.b)("inlineCode",{parentName:"p"},"jest")," has a watch mode option: just run ",Object(i.b)("inlineCode",{parentName:"p"},"jest --watch"),". "),Object(i.b)("p",null,"Elyra’s unit tests test the various classes and objects used by Elyra extensions. Refer to the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io/docs/en/getting-started"}),"jest API")," for more details. "),Object(i.b)("p",null,"To add unit tests for a package that doesn’t have tests set up, some configuration files are required. In the directory for the package being tested, add a file titled ",Object(i.b)("inlineCode",{parentName:"p"},"jest.config.js")," that contains the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"module.exports = require('../../testutils/jest.config');\n")),Object(i.b)("p",null,"Then, in the ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),", add the following under ",Object(i.b)("inlineCode",{parentName:"p"},"'scripts'"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'"test": "jest",\n"build:test": "tsc --build tsconfig.test.json",\n')),Object(i.b)("p",null,"And the following under ",Object(i.b)("inlineCode",{parentName:"p"},"'dev_dependencies'"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'"@jupyterlab/testutils": "^1.0.0",\n"@types/enzyme": "^3.10.5",\n"@types/enzyme-adapter-react-16": "^1.0.6",\n"@types/jest": "^23.3.11",\n"enzyme": "^3.11.0",\n"enzyme-adapter-react-16": "^1.15.3",\n"install": "^0.13.0",\n"jest": "^24.7.1",\n"jest-raw-loader": "^1.0.1",\n"ts-jest": "^24.0.2",\n')),Object(i.b)("p",null,"Create a file ",Object(i.b)("inlineCode",{parentName:"p"},"tsconfig.test.json")," that contains:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'{\n  "extends": "../../tsconfigbase.test",\n  "include": ["src/*", "test/*"],\n  "references": []\n}\n')),Object(i.b)("p",null,"Finally, create a folder called ",Object(i.b)("inlineCode",{parentName:"p"},"test")," in the ",Object(i.b)("inlineCode",{parentName:"p"},"src")," directory of the package being tested, and add tests using the file extension ",Object(i.b)("inlineCode",{parentName:"p"},".spec.ts"),"."))}p.isMDXComponent=!0},BAC9:function(e,t,n){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,n){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,n){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,n){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}}}]);
//# sourceMappingURL=component---src-pages-dev-guide-contributing-to-frontend-tests-mdx-8a7af10a04f1b6561506.js.map