{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/common-canvas/customizing-node-layout.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-common-canvas-customizing-node-layout-mdx-e133439a6ea44e97af18.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Node layout properties define how all the elements of a node are displayed such as: the position and size of the main image; the position of the main label; even the shape of the node itself!`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Properties override</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Default properties from Common canvas</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Default values</AnchorLink>\n    <AnchorLink mdxType=\"AnchorLink\">Default properties override</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Customizing individual nodes</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Properties override`}</h2>\n    <p>{`You can change just about anything to do with the way the nodes appear in your canvas. So you can get a very different looking canvas to suit your needs.`}</p>\n    <h2>{`Default properties from Common canvas`}</h2>\n    <p>{`There are two possible sets of node layout properties provided by common-canvas. The set of properties that are used by common-canvas are controlled by the `}<inlineCode parentName=\"p\">{`enableNodeFormatType`}</inlineCode>{` configuration property which can be set to either “Horizontal” or “Vertical”.`}</p>\n    <h2>{`Default values`}</h2>\n    <p>{`The possible node layout properties (that are currently supported) are shown below with the values they have when `}<inlineCode parentName=\"p\">{`enableNodeFormatType = \"Horizontal\"`}</inlineCode>{`. You can see the values for the other two sets of properties by looking at the `}<a href=\"https://github.com/elyra-ai/canvas/blob/master/canvas_modules/common-canvas/src/object-model/layout-dimensions.js\">{`layout-dimensions.js program`}</a>{`. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Default node sizes. The height might be overridden for nodes with more ports\n// than will fit in the default size.\ndefaultNodeWidth: 160,\ndefaultNodeHeight: 40,\n\n// Default node shape. Can be \"rectangle\" or \"port-arcs\"\nnodeShape: \"port-arcs\",\n\n// SVG path strings to define the shape of your node and its\n// selection highlighting. If set to null the paths will be set by default\n// based on the nodeShape setting.\nbodyPath: null,\nselectionPath: null,\n\n// Display image\nimageDisplay: true,\n\n// Image dimensions\nimageWidth: 26,\nimageHeight: 26,\n\n// Image position\nimagePosition: \"topLeft\",\nimagePosX: 6,\nimagePosY: 7,\n\n// Label dimensions\nlabelWidth: 112,\nlabelHeight: 19,\n\n// Label position\nlabelPosition: \"topLeft\",\nlabelPosX: 36,\nlabelPosY: 12,\n\n// Label appearance\nlabelEditable: false,\nlabelAlign: \"left\", // can be \"left\" or \"center\"\nlabelSingleLine: true, // false allow multi-line labels\nlabelOutline: false,\nlabelMaxCharacters: null, // null allows unlimited characters\nlabelAllowReturnKey: false, // true allows line feed to be inserted into label\n\n// An array of decorations to be applied to the node. For details see:\n// https://github.com/elyra-ai/canvas/wiki/2.4.2-Decoration-Specification\ndecorations: [],\n\n// Positions and dimensions for 9 enumerated default decorator positions.\n// decoratorWidth and decoratorHeight are the dimensions of the outline\n// rectangle and decoratorPadding is the padding for the image within the\n// outline rectangle.\ndecoratorTopY: 2,\ndecoratorMiddleY: -8,\ndecoratorBottomY: -18,\n\ndecoratorLeftX: 2,\ndecoratorCenterX: -8,\ndecoratorRightX: -30,\n\n// Width, height and padding for image decorators\ndecoratorWidth: 16,\ndecoratorHeight: 16,\ndecoratorPadding: 2,\n\n// Width and height for label decorators\ndecoratorLabelWidth: 80,\ndecoratorLabelHeight: 15,\n\n// Display drop shadow under and round the nodes\ndropShadow: true,\n\n// The gap between a node and its selection highlight rectangle\nnodeHighlightGap: 1,\n\n// The size of the node sizing area that extends around the node, over\n// which the mouse pointer will change to the sizing arrows.\nnodeSizingArea: 10,\n\n// Error indicator dimensions\nerrorPosition: \"topLeft\",\nerrorXPos: 24,\nerrorYPos: 5,\nerrorWidth: 10.5,\nerrorHeight: 10.5,\n\n// When sizing a supernode this decides the size of the corner area for\n// diagonal sizing.\nnodeCornerResizeArea: 10,\n\n// What point to draw the data links from and to when enableLinkType is set\n// to \"Straight\". Possible values are \"image_center\" or \"node_center\".\ndrawNodeLinkLineFromTo: \"node_center\",\n\n// What point to draw the comment to node link line to. Possible values\n// are \"image_center\" or \"node_center\".\ndrawCommentLinkLineTo: \"node_center\",\n\n// This is the size of the horizontal line protruding from the\n// port on the source node when drawing an elbow or straight connection line.\nminInitialLine: 30,\n\n// For the elbow connection type with nodes with multiple output ports,\n// this is used to increment the minInitialLine so that connection lines\n// do not overlap each other when they turn up or down after the elbow.\nminInitialLineIncrement: 8,\n\n// This is the minimum size of the horizontal line entering the\n// target port on the target node when drawing an Elbow connection line.\nminFinalLine: 30,\n\n// Display input ports.\ninputPortDisplay: true,\n\n// Object for input port can be \"circle\" or \"image\".\ninputPortObject: \"circle\",\n\n// If input port object is \"image\" use this image.\ninputPortImage: \"\",\n\n// If input port dimensions for \"image\".\ninputPortWidth: 12,\ninputPortHeight: 12,\n\n// Position of left single input port. Multiple input ports will be\n// automatically positioned with the Y coordinate being overriden. These\n// values are an offset from the top left corner of the node outline.\n// Used when linkDirection is \"LeftRight\".\ninputPortLeftPosX: 0,\ninputPortLeftPosY: 20,\n\n// Position of top single input port. Multiple input ports will be\n// automatically positioned with the X coordinate being overriden. These\n// values are an offset from the top left corner of the node outline.\n// Used when linkDirection is \"TopBottom\".\ninputPortTopPosX: 80,\ninputPortTopPosY: 0,\n\n// Position of bottom single input port. Multiple input ports will be\n// automatically positioned with the X coordinate being overriden. These\n// values are an offset from the bottom left corner of the node outline.\n// Used when linkDirection is \"BottomTop\".\ninputPortBottomPosX: 80,\ninputPortBottomPosY: 0,\n\n// The 'guide' is the object drawn at the mouse position as a new line\n// is being dragged outwards.\n// Object for input port guide can be \"circle\" or \"image\".\ninputPortGuideObject: \"circle\",\n\n// If input port guide object is \"image\" use this image.\ninputPortGuideImage: \"\",\n\n// Display output ports.\noutputPortDisplay: true,\n\n// Object for output port can be \"circle\" or \"image\".\noutputPortObject: \"circle\",\n\n// If output port object is \"image\" use this image.\noutputPortImage: \"\",\n\n// Output port dimensions for \"image\".\noutputPortWidth: 12,\noutputPortHeight: 12,\n\n// Position of right single input port. Multiple input ports will be\n// automatically positioned with the Y coordinate being overriden. These\n// values are an offset from the top right corner of the node outline.\n// Used when linkDirection is \"LeftRight\".\noutputPortRightPosX: 0,\noutputPortRightPosY: 20,\n\n// Position of top single input port. Multiple input ports will be\n// automatically positioned with the X coordinate being overriden. These\n// values are an offset from the top left corner of the node outline.\n// Used when linkDirection is \"BottomTop\".\noutputPortTopPosX: 80,\noutputPortTopPosY: 0,\n\n// Position of bottom single input port. Multiple input ports will be\n// automatically positioned with the X coordinate being overriden. These\n// values are an offset from the bottom left corner of the node outline.\n// Used when linkDirection is \"TopBottom\".\noutputPortBottomPosX: 80,\noutputPortBottomPosY: 0,\n\n// The 'guide' is the object drawn at the mouse position as a new line\n// is being dragged outwards.\n// Object for output port guide can be \"circle\" or \"image\".\noutputPortGuideObject: \"circle\",\n\n// If output port guide object is \"image\" use this image.\noutputPortGuideImage: \"\",\n\n// Radius of the either the input or output ports when they are set to \"circle\"\nportRadius: 3,\n\n// Size of an offset above and below the set of port arcs.\nportArcOffset: 3,\n\n// Radius of an imaginary circle around the port. This controls the\n// spacing of ports and the size of port arcs when nodeShape is set to\n// port-arcs.\nportArcRadius: 6,\n\n// Spacing between the port arcs around the ports.\nportArcSpacing: 3,\n\n// Display of vertical ellipsis to show context menu\nellipsisDisplay: true,\nellipsisPosition: \"topLeft\",\nellipsisWidth: 10,\nellipsisHeight: 22,\nellipsisPosX: 145,\nellipsisPosY: 9,\nellipsisHoverAreaPadding: 2\n\n`}</code></pre>\n    <h4>{`Notes`}</h4>\n    <p>{`All coordinate positions for elements are based on one of nine anchor points around the node:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`       \"topLeft\", \"topCenter\", \"topRight\",  \n       \"middleLeft\", \"middleCenter\", \"middleRight\",   \n       \"bottomLeft\", \"bottomCenter\", \"bottomRight\".   \n\n`}</code></pre>\n    <p>{`The PosX and PosY position for each element is an offset from the associated anchor point where PosX is the number of pixels `}<strong parentName=\"p\">{`to the right of`}</strong>{` the anchor point and PosY is a number of pixels `}<strong parentName=\"p\">{`down from`}</strong>{` the anchor point. Negative values can be provided to specify an offset `}<strong parentName=\"p\">{`to the left and up from`}</strong>{` the anchor point. The default anchor point for all elements is `}<inlineCode parentName=\"p\">{`topLeft`}</inlineCode>{`. By the way, the top left corner of the node is also the point that the node will be positioned at based on its `}<inlineCode parentName=\"p\">{`x_pos`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`y_pos`}</inlineCode>{` fields in the pipelineFlow document.`}</p>\n    <p>{`Elements like the node image and vertical ellipsis are positioned based on the top left corner of that element. Text is positioned based on the top left corner of its containing `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{`.`}</p>\n    <p>{`The values for `}<inlineCode parentName=\"p\">{`bodyPath`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`selectionPath`}</inlineCode>{` must be `}<a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\">{`SVG path strings`}</a>{` which describe how to draw the node body shape and its selection highlight shape. For example, the following would draw a triangular node body and a triangular selection outline 5 pixels away from it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    bodyPath: \"     M  0 0 L  70 35  0 70 Z\",\n    selectionPath: \"M -5 -5 L 75 35 -5 75 Z\",\n`}</code></pre>\n    <h2>{`Default properties override`}</h2>\n    <p>{`There are a couple of ways to do this depending on your needs. First, if you just want to change the look of all nodes on your canvas you can specify the `}<inlineCode parentName=\"p\">{`enableNodeLayout`}</inlineCode>{` configuration parameter in the `}<Link to=\"/common-canvas/config/canvas-config#canvas-config-object\" mdxType=\"Link\">{`main canvas configuration object`}</Link>{`. The properties from this object will replace any properties in the default set, which was chosen based on the settings of `}<inlineCode parentName=\"p\">{`enableNodeFormatType`}</inlineCode>{`. So you don’t need to provide all of the properties; just the ones you want to replace.`}</p>\n    <p>{`Let’s say you want to go crazy and have your nodes be displayed as ellipses. You could provide the following settings in `}<inlineCode parentName=\"p\">{`enableNodeLayout`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` {\n    bodyPath: \"     M  0 30 Q  0  0 60  0 Q 120  0 120 30 Q 120 60 60 60 Q  0 60  0 30 Z\",\n    selectionPath: \"M -5 30 Q -5 -5 60 -5 Q 125 -5 125 30 Q 125 65 60 65 Q -5 65 -5 30 Z\",\n    defaultNodeWidth: 120,\n    defaultNodeHeight: 60,\n    imageWidth: 30,\n    imageHeight: 30,\n    imagePosX: 20,\n    imagePosY: 10,\n    labelEditable: true,\n    labelPosX: 60,\n    labelPosY: 37,\n    labelWidth: 90,\n    labelHeight: 17, // Should match the font size specified in css + padding\n    ellipsisDisplay: true,\n    ellipsisPosX: 100,\n    ellipsisPosY: 20,\n    haloDisplay: false,\n    portPosY: 30\n}\n`}</code></pre>\n    <h4>{`Notes`}</h4>\n    <p>{`In the test harness you can see some of these layout values in action by:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Opening the Common Canvas side panel (click the hamburger icon)`}</li>\n      <li parentName=\"ol\">{`Select the `}<inlineCode parentName=\"li\">{`Blue Ellipses`}</inlineCode>{` example app. You should see all the nodes shown as blue ellipses. 3 Checkout some of the other sample apps to see how the default styling has been overridden.`}</li>\n    </ol>\n    <p>{`If you experiment, you will see the nodes can be selected, moved and manipulated just like regular nodes. Even if you drag a node from the palette, it will appear with the overridden layout properties.`}</p>\n    <h2>{`Customizing individual nodes`}</h2>\n    <p>{`If you want each node to have a different layout based on some criteria you can use the second method for overriding the node layout properties. This employs the `}<Link to=\"/common-canvas/callbacks#layouthandler\" mdxType=\"Link\">{`layoutHandler callback method`}</Link>{`. When you specify this callback method to common canvas your layout handler method will be called for each node on the canvas, during initialization and occasionally at other times.`}</p>\n    <p>{`The method should return a simple Javascript object that contains any node layout properties you want to override from the defaults and the ones specified in `}<inlineCode parentName=\"p\">{`enableNodeLayout`}</inlineCode>{` config field. This is an important point: there are three levels of properties provided where each overrides the previous set:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`First we take the full default set of node layout properties based on the value for `}<inlineCode parentName=\"li\">{`enableNodeFormatType`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Then we override these with the properties from the `}<inlineCode parentName=\"li\">{`enableNodeLayout`}</inlineCode>{` field in the config object, if any are provided.`}</li>\n      <li parentName=\"ol\">{`Finally we override the combined set with any properties from the object returned from the layoutHandler method if one is specified.`}</li>\n    </ol>\n    <p>{`The callback is provided with a parameter `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` which is the node object from the pipelineFlow so your code can examine the node object and return node layout properties as appropriate.`}</p>\n    <p>{`Here is a simple example of a `}<inlineCode parentName=\"p\">{`layoutHandler`}</inlineCode>{` callback method which will override the width of the node based on the width of the main label for any node where the node’s `}<inlineCode parentName=\"p\">{`op`}</inlineCode>{` field is set to `}<inlineCode parentName=\"p\">{`Sort`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`layoutHandler(data) {\n    let nodeFormat = {};\n    if (data.op === \"Sort\") {\n        const labLen = data.label ? data.label.length : 0;\n        const width = (labLen * 9) + 30; // Allow 9 pixels for each character and a bit extra for padding\n        nodeFormat = {\n            defaultNodeWidth: width // Override default width with calculated width\n        };\n    }\n    return nodeFormat;\n\n\\`layoutHandler(data) {\n    let nodeFormat = {};\n    if (data.op === \"Sort\") {\n        const labLen = data.label ? data.label.length : 0;\n        const width = (labLen * 9) + 30; // Allow 9 pixels for each character and a bit extra for padding\n        nodeFormat = {\n            defaultNodeWidth: width // Override default width with calculated width\n        };\n    }\n    return nodeFormat;\n`}</code></pre>\n    <p>{`OK, it’s not a very complicated example but hopefully you get the message :)`}</p>\n    <p>{`You can see an example application that use the `}<Link to=\"/common-canvas/callbacks#layouthandler\" mdxType=\"Link\">{`layoutHandler callback method`}</Link>{`. In the test harness:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Open the Common Canvas side panel (click the hamburger icon)`}</li>\n      <li parentName=\"ol\">{`Select the `}<inlineCode parentName=\"li\">{`Explain`}</inlineCode>{` sample application`}</li>\n    </ol>\n    <p>{`You will see the nodes have different shapes and colors based on their type. You can examine the `}<a href=\"https://github.com/elyra-ai/canvas/blob/master/canvas_modules/harness/src/client/components/custom-canvases/explain/explain-canvas.jsx\">{`Explain sample app code`}</a>{` to see how it works. This involves these three parts:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <a href=\"https://github.com/elyra-ai/canvas/blob/3e2a1be61047b6ea85fe13020a00ec5dc8a41405/canvas_modules/harness/src/client/components/custom-canvases/explain/explain-canvas.jsx#L15\">This line</a> sets the `enableConnectionType` which will set all nodeLayout properties to their defaults.\n      </li>\n      <li parentName=\"ol\">\n        <a href=\"https://github.com/elyra-ai/canvas/blob/3e2a1be61047b6ea85fe13020a00ec5dc8a41405/canvas_modules/harness/src/client/components/custom-canvases/explain/explain-canvas.jsx#L17\">This line</a> will override the node layout defaults with ones specified for all nodes.\n      </li>\n      <li parentName=\"ol\">\n        <a href=\"https://github.com/elyra-ai/canvas/blob/3e2a1be61047b6ea85fe13020a00ec5dc8a41405/canvas_modules/harness/src/client/components/custom-canvases/explain/explain-canvas.jsx#L39\">The layout handler</a> will override layout properties on a node by node basis.\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}