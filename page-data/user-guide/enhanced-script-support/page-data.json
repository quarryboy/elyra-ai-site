{"componentChunkName":"component---src-pages-user-guide-enhanced-script-support-mdx","path":"/user-guide/enhanced-script-support/","result":{"pageContext":{"frontmatter":{"title":"Enhanced script support","description":"Enhanced script support"},"relativePagePath":"/user-guide/enhanced-script-support.mdx","titleType":"page","MdxNode":{"id":"df1e3655-8041-536b-bba3-761184b27ce1","children":[],"parent":"c0be9dfe-adbd-5baf-92e8-2d779f0c5c3c","internal":{"content":"---\ntitle: Enhanced script support\ndescription: Enhanced script support\n---\n\nexport const Title = () => (\n  <span>\n    Enhanced script support\n  </span>\n);\n\n<PageDescription>\n\nElyra provides **Enhanced Script Support** where Python and R scripts can be developed and\nexecuted. It also leverages the **Hybrid Runtime Support** to enable running\nthese scripts in remote environments.\n\n</PageDescription>\n\n\n\n![Enhanced Python Support](../images/ai/python-editor.gif)\n\nThe execution of these scripts leverages the available Python and R based Kernels. This enables users to run their scripts in different configurations and environments.\n\nElyra also allows submitting a Python and R scripts as a single node pipeline for execution in a Kubeflow Pipelines or Apache Airflow environment in the cloud. This feature is accessible when the Elyra [AI Pipelines](../user_guide/pipelines.md) extension is also enabled.\n\n## Python script execution support\n\nIn the JupyterLab Launcher, click the `Python Editor` icon to create a new Python script and open the Python Editor.\n\n![Open Python Editor](../images/ai/auncher-python-editor.png)\n\nWhen used in conjunction with `Jupyter Enterprise Gateway`, the dropdown in the editor's toolbar will be populated with more kernel options,\nallowing users to run their scripts with remote kernels with more specialized resources.\n\nTo run your script locally, select the `Python 3` option in the dropdown menu, and click the `Run` icon.\n\n## R script execution support\n\nIn the JupyterLab Launcher, click the `R Editor` icon to create a new R script and open the R Editor.\n\n![Open R Editor](../images/ai/launcher-r-editor.png)\n\nTo run your R script locally you will need to install an R kernel.\n\nIf you are using a [conda](https://docs.conda.io/en/latest/miniconda.html) environment:\n```bash\n$ conda install -y r-irkernel\n```\n\nAlternatively, you can install it via [CRAN](https://cran.r-project.org/) on an R console:  \nNOTE: You will need to have R installed and available prior to using this method of installing the R kernel.\n\nIn an R interactive console,\n```bash\n> install.packages('IRkernel')\n```\nthen enable it on Jupyter:\n```bash\n> IRkernel::installspec()\n```\n\nYou can check that the R kernel was successfully installed with:\n```bash\njupyter kernelspec list\n```\n\nTo run the script, from the Script editor toolbar, select the `R` option in the kernel selection drop-down, and click the `Run` icon.\n\nSimilar to the extended support for Python kernels when using the `Jupyter Enterprise Gateway`, the Script editor dropdown in the toolbar will display all available remote kernel options for R scripts.\n\n### R-Editor Language Server Protocol\nYou can enable R language server features for the R Editor in a conda environment with the following command:\n```bash\n$ conda install -c conda-forge r-languageserver\n```\n\nYou can find more documentation about conda-forge [here](https://github.com/conda-forge/r-languageserver-feedstock).\n\nAnother option is to install the R language server through the [CRAN](https://cran.r-project.org/). Once R is installed, use the following [command](https://github.com/REditorSupport/languageserver):\n```bash\n$ R -e install.packages(\"languageserver\")\n```\n\n## Ability to execute a Python and R script as a pipeline\n\nElyra allows the execution of Python and R scripts as a pipeline or batch job in remote cloud environments. This feature leverages the AI pipelines feature and requires access to either a Kubeflow Pipelines or Apache Airflow deployment via a [runtime configuration](../user_guide/runtime-conf).\n\nTo run a Python or R script as a pipeline, open the script file and select `Run as Pipeline` button from the editor toolbar.\n\n![Run Python Script as pipeline](../images/ai/submit-script.gif)\n\nTo learn more about [runtime configurations](../user_guide/runtime-conf) and [runtime images](../user_guide/runtime-image-conf), follow those sections provided in the Elyra user guide documentation.\n\n## Script Editors components\n\nThe Elyra Python Editor and R Editor are based on the JupyterLab editor which is currently based on CodeMirror.\n\n<Row>\n    <Column colMd={6} colLg={6}>\n\n![Python Editor and R Editor Components](../images/ai/script-editor-components.png)\n\n</Column>\n</Row>","type":"Mdx","contentDigest":"7a067f39fc675c6478170dd0ab18bf2b","owner":"gatsby-plugin-mdx","counter":329},"frontmatter":{"title":"Enhanced script support","description":"Enhanced script support"},"exports":{},"rawBody":"---\ntitle: Enhanced script support\ndescription: Enhanced script support\n---\n\nexport const Title = () => (\n  <span>\n    Enhanced script support\n  </span>\n);\n\n<PageDescription>\n\nElyra provides **Enhanced Script Support** where Python and R scripts can be developed and\nexecuted. It also leverages the **Hybrid Runtime Support** to enable running\nthese scripts in remote environments.\n\n</PageDescription>\n\n\n\n![Enhanced Python Support](../images/ai/python-editor.gif)\n\nThe execution of these scripts leverages the available Python and R based Kernels. This enables users to run their scripts in different configurations and environments.\n\nElyra also allows submitting a Python and R scripts as a single node pipeline for execution in a Kubeflow Pipelines or Apache Airflow environment in the cloud. This feature is accessible when the Elyra [AI Pipelines](../user_guide/pipelines.md) extension is also enabled.\n\n## Python script execution support\n\nIn the JupyterLab Launcher, click the `Python Editor` icon to create a new Python script and open the Python Editor.\n\n![Open Python Editor](../images/ai/auncher-python-editor.png)\n\nWhen used in conjunction with `Jupyter Enterprise Gateway`, the dropdown in the editor's toolbar will be populated with more kernel options,\nallowing users to run their scripts with remote kernels with more specialized resources.\n\nTo run your script locally, select the `Python 3` option in the dropdown menu, and click the `Run` icon.\n\n## R script execution support\n\nIn the JupyterLab Launcher, click the `R Editor` icon to create a new R script and open the R Editor.\n\n![Open R Editor](../images/ai/launcher-r-editor.png)\n\nTo run your R script locally you will need to install an R kernel.\n\nIf you are using a [conda](https://docs.conda.io/en/latest/miniconda.html) environment:\n```bash\n$ conda install -y r-irkernel\n```\n\nAlternatively, you can install it via [CRAN](https://cran.r-project.org/) on an R console:  \nNOTE: You will need to have R installed and available prior to using this method of installing the R kernel.\n\nIn an R interactive console,\n```bash\n> install.packages('IRkernel')\n```\nthen enable it on Jupyter:\n```bash\n> IRkernel::installspec()\n```\n\nYou can check that the R kernel was successfully installed with:\n```bash\njupyter kernelspec list\n```\n\nTo run the script, from the Script editor toolbar, select the `R` option in the kernel selection drop-down, and click the `Run` icon.\n\nSimilar to the extended support for Python kernels when using the `Jupyter Enterprise Gateway`, the Script editor dropdown in the toolbar will display all available remote kernel options for R scripts.\n\n### R-Editor Language Server Protocol\nYou can enable R language server features for the R Editor in a conda environment with the following command:\n```bash\n$ conda install -c conda-forge r-languageserver\n```\n\nYou can find more documentation about conda-forge [here](https://github.com/conda-forge/r-languageserver-feedstock).\n\nAnother option is to install the R language server through the [CRAN](https://cran.r-project.org/). Once R is installed, use the following [command](https://github.com/REditorSupport/languageserver):\n```bash\n$ R -e install.packages(\"languageserver\")\n```\n\n## Ability to execute a Python and R script as a pipeline\n\nElyra allows the execution of Python and R scripts as a pipeline or batch job in remote cloud environments. This feature leverages the AI pipelines feature and requires access to either a Kubeflow Pipelines or Apache Airflow deployment via a [runtime configuration](../user_guide/runtime-conf).\n\nTo run a Python or R script as a pipeline, open the script file and select `Run as Pipeline` button from the editor toolbar.\n\n![Run Python Script as pipeline](../images/ai/submit-script.gif)\n\nTo learn more about [runtime configurations](../user_guide/runtime-conf) and [runtime images](../user_guide/runtime-image-conf), follow those sections provided in the Elyra user guide documentation.\n\n## Script Editors components\n\nThe Elyra Python Editor and R Editor are based on the JupyterLab editor which is currently based on CodeMirror.\n\n<Row>\n    <Column colMd={6} colLg={6}>\n\n![Python Editor and R Editor Components](../images/ai/script-editor-components.png)\n\n</Column>\n</Row>","fileAbsolutePath":"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/src/pages/user-guide/enhanced-script-support.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}