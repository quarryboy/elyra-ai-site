{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/common-properties/properties-documentation.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","InlineNotification","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","target","small","isMDXComponent"],"mappings":"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","file":"component---src-pages-common-properties-properties-documentation-mdx-708f21ac6ed0818615a5.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dsobryan/Documents/ElyraOS/elyra-ai-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The Elyra test harness (`}<a parentName=\"p\" {...{\n          \"href\": \"http://ibm.biz/elyra-canvas\"\n        }}>{`http://ibm.biz/elyra-canvas`}</a>{`) allows consumers to explore a number of configurations of both the canvas as well as properties. All current documentation of Common properties components may be found `}<a href=\"https://wdp-common-canvas-dev.stage1.mybluemix.net/#/properties\" target=\"_blank\">{`here`}</a>{`. `}</p>\n    </PageDescription>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` You must be on an IBM network to access either of these links.`}</p>\n    </InlineNotification>\n    <p>{`The examples below show off consumers who have adopted the Elyra canvas technology.`}</p>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Introductions</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Callbacks</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Introduction`}</h2>\n    <p>{`Common properties displays controls to view and set property values.`}</p>\n    <p>{`You can look at the harness/src/client/App.js file of this repo to see examples of code that uses the common properties component.\nGetting started with Common Properties programming`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` There are two ways one can use the Common Properties tooling: Either by allowing the form to be built dynamically from a parameterDef JSON (which is comprised of the base property set, ui-hints, conditions, and resources), or by explicitly providing the dialog form for rendering (deprecated). The first approach is recommended as an easier and clearer interface`}</p>\n    </InlineNotification>\n    <p>{`This takes 3 easy steps:`}</p>\n    <h3>{`Step 1 : Import`}</h3>\n    <p>{`To use Common Properties in your React application you need to do the following. First import the CommonProperties React component from the common-canvas library. It’s recommended to use All Components if common-canvas is also being imported, otherwise use Properties only option.`}</p>\n    <h4>{`All Components`}</h4>\n    <p><inlineCode parentName=\"p\">{`import { CommonProperties } from \"@elyra/canvas\";`}</inlineCode></p>\n    <h4>{`Properties Only`}</h4>\n    <p><inlineCode parentName=\"p\">{`import { CommonProperties } from \"@elyra/canvas/dist/lib/properties\";`}</inlineCode></p>\n    <h3>{`Step 2 : Set the data`}</h3>\n    <p>{`Next you’ll need to populate propertiesInfo with:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`propertiesInfo: {\n  parameterDef: this.parameterDef,          // Parameter definitions/hints/conditions\n  appData: \"{user-defined}\",                // User data returned in applyPropertyChanges [optional]\n  additionalComponents: \"{components}\",     // Additional component(s) to display [optional]\n  messages: \"[node_messages]\",              // Node messages array [optional]\n  expressionInfo: this.expressionInfo,      // Information for expression builder [optional],\n  initialEditorSize: \"{size}\"               // This value will override the value of editor_size in uiHints. This can have a value of \"small\", \"medium\", \"large\", or null [optional]\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`parameterDef schema and examples: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/pipeline-schemas/tree/master/common-canvas/parameter-defs\"\n          }}>{`https://github.com/elyra-ai/pipeline-schemas/tree/master/common-canvas/parameter-defs`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Common Properties Parameter Definition: `}<br />{` found `}<a href=\"parameter-definition\">{`here`}</a>{`. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`expressionInfo`}</inlineCode>{` schema and examples: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/pipeline-schemas/tree/master\"\n          }}>{`https://github.com/elyra-ai/pipeline-schemas/tree/master`}</a></p>\n      </li>\n    </ul>\n    <p>{`or…`}</p>\n    <p>{`(Deprecated)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`propertiesInfo: {\n  formData: this.formData,\n  appData: \"{user data returned back in applyPropertyChanges}\", //optional\n  additionalComponents: \"{additional control(s) to display}\",   //optional\n  messages: \"[node_messages]\",                                  // Node messages array [optional]\n  expressionInfo: this.expressionInfo,                          // Information for expression builder [optional]\n  initialEditorSize: \"{size}\"                                   // This value will override the value of editor_size in uiHints. This can have a value of \"small\", \"medium\", \"large\", or null [optional]\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`formData`}</inlineCode>{` schema: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/pipeline-schemas/tree/master/common-canvas/form\"\n          }}>{`https://github.com/elyra-ai/pipeline-schemas/tree/master/common-canvas/form`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`form information wiki: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/wml-canvas-service/wiki/2.-Runtimes-And-Operators\"\n          }}>{`https://github.com/elyra-ai/wml-canvas-service/wiki/2.-Runtimes-And-Operators`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The optional messages attribute can be used to set validation messages associated with a node. The format of the message objects is defined in Pipelin Flow UI schema: `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/elyra-ai/pipeline-schemas/blob/master/common-pipeline/pipeline-flow/pipeline-flow-ui-v1-schema.json\"\n          }}>{`https://github.com/elyra-ai/pipeline-schemas/blob/master/common-pipeline/pipeline-flow/pipeline-flow-ui-v1-schema.json`}</a></p>\n      </li>\n    </ul>\n    <h3>{`Step 3 : Display the properties editor`}</h3>\n    <p>{`Finally you’ll need to display the editor. Inside your render code, add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { IntlProvider } from \"react-intl\";\nvar i18nData = require(\"../intl/en.js\");\n\nvar locale = \"en\";\nvar messages = i18nData.messages;\n  <IntlProvider key=\"IntlProvider2\" locale={ locale } messages={ messages }>\n    <CommonProperties\n      ref={(instance) => {\n        this.CommonProperties = instance;\n      }}\n      propertiesInfo={this.propertiesInfo} // required\n      propertiesConfig={this.propertiesConfig} // optional\n      callbacks={this.callbacks} // required\n      customPanels={[CustomSliderPanel, CustomTogglePanel]} //optional\n      customControls={[CustomSliderControl]} // optional\n      light // optional\n    />\n  </IntlProvider>\n`}</code></pre>\n    <h3>{`Properties`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`propertiesInfo `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`: See above`}</li>\n      <li parentName=\"ul\">{`propertiesConfig `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`:`}</li>\n      <li parentName=\"ul\">{`containerType `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`: type of container to display the properties, can be “Modal” or “Custom”. default: ”`}<inlineCode parentName=\"li\">{`Custom`}</inlineCode>{`”`}</li>\n      <li parentName=\"ul\">{`rightFlyout `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: if custom container is a right-flyout, set to true. default: `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\">{`applyOnBlur `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: calls applyPropertyChanges when focus leave common-properties. default: `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\">{`enableResize `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: adds a button that allows the right-side fly-out editor to expand/collapse between small and medium sizes. default: `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n      <li parentName=\"ul\">{`conditionReturnValueHandling `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`: used to determine how hidden or disabled control values are returned in applyPropertyChanges callback. Current options are “value” or “null”. default: ”`}<inlineCode parentName=\"li\">{`value`}</inlineCode>{`”`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`buttonLabels `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`:`}</li>\n          <li parentName=\"ul\">{`primary `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`: Label to use for the primary button of the properties dialog`}</li>\n          <li parentName=\"ul\">{`secondary `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`: Label to use for the secondary button of the properties dialog`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`heading `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: show heading and heading icon in right-side fly-out panels. default: `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\">{`schemaValidation `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: If set to true, schema validation will be enabled when a parameter definition has been set in CommonProperties. Any errors found will be reported on the browser dev console. It is recommended you run with schema validation switched on while in development mode.`}</li>\n      <li parentName=\"ul\">{`applyPropertiesWithoutEdit `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: When true, will always call applyPropertyChanges even if no changes were made. default: `}<inlineCode parentName=\"li\">{`false`}</inlineCode></li>\n      <li parentName=\"ul\">{`maxLengthForMultiLineControls `}<inlineCode parentName=\"li\">{`number`}</inlineCode>{` - maximum characters allowed for multi-line string controls like textarea. default: 1024`}</li>\n      <li parentName=\"ul\">{`maxLengthForSingleLineControls `}<inlineCode parentName=\"li\">{`number`}</inlineCode>{` - maximum characters allowed for single-line string controls like textfield. default: 128`}</li>\n      <li parentName=\"ul\">{`callbacks `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` - See below for more details on each callback method`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`applyPropertyChanges // required`}</li>\n          <li parentName=\"ul\">{`closePropertiesDialog // required`}</li>\n          <li parentName=\"ul\">{`helpClickHandler // optional`}</li>\n          <li parentName=\"ul\">{`controllerHandler // optional`}</li>\n          <li parentName=\"ul\">{`propertyListener // optional`}</li>\n          <li parentName=\"ul\">{`actionHandler // optional`}</li>\n          <li parentName=\"ul\">{`buttonHandler // optional`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`View `}<a href=\"custom-components#custom-panels\">{`Common Properties Custom Components`}</a>{` for the following:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`customPanels `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{`: array of custom panels.`}</li>\n          <li parentName=\"ul\">{`customControls `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{`: array of custom controls.`}</li>\n          <li parentName=\"ul\">{`customConditionOps `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{`: array of custom condition operators. `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`light `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`: Carbon controls in common-properties will use light mode. When the `}<inlineCode parentName=\"li\">{`light`}</inlineCode>{` option is disabled, the background color will be the same as the Carbon theme background. When the `}<inlineCode parentName=\"li\">{`light`}</inlineCode>{` option is enabled, the background color is set to $ui-01. Defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode></li>\n    </ul>\n    <h4>{`Internationalization and override of labels in CommonProperties`}</h4>\n    <p>{`The CommonProperties dialogs have a set of labels that can have customized and internationalized values. CommonProperties uses the react-intl package to provide internationalization of these labels. This requires the IntlProvider element to wrap the CommonProperties element. You can look at the harness/src/intl/en.js file of this repo to see the list of labels and the default values.`}</p>\n    <br />\n    <h4>{`Reference methods`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`/*\n* @closeEditor (boolean) - determines if closePropertiesDialog is called or not \n*/\napplyPropertiesEditing(closeEditor)\n`}</code></pre>\n    <h3>{`Using CommonProperties in CommonCanvas right-flyout panel`}</h3>\n    <a href=\"/common-canvas/canvas-documentation#step-3-:-set-the-model-and-palette-data\">Common Canvas</a> has a right-flyout panel that can render a React object. It can be used to render Common Properties in a flyout panel.\n    <p>{`Create a CommonProperties object with containerType set to “Custom” and rightFlyout set to true.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    const rightFlyoutContent =(<CommonProperties\n        propertiesInfo={this.propertiesInfo}\n        propertiesConfig={{ containerType: \"Custom\", rightFlyout: true }}\n        callbacks={this.callbacks}  \n    />);\n\n`}</code></pre>\n    <p>{`Pass the CommonProperties object into CommonCanvas’s rightFlyoutContent props. Also set the showRightFlyout boolean to tell CommonCanvas when to show the rightFlyout.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    <CommonCanvas\n  config={commonCanvasConfig}\n  contextMenuHandler={this.contextMenuHandler}\n  contextMenuActionHandler= {this.contextMenuActionHandler}\n  editActionHandler= {this.editActionHandler}\n  clickActionHandler= {this.clickActionHandler}\n  decorationActionHandler= {this.decorationActionHandler}\n  toolbarConfig={toolbarConfig}\n  toolbarMenuActionHandler={this.toolbarMenuActionHandler}\n  rightFlyoutContent={rightFlyoutContent}\n  showRightFlyout={showRightFlyout}\n    />\n\n`}</code></pre>\n    <h2>{`Callbacks`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">applyPropertyChanges(propertySet, appData, additionalInfo, undoInfo, uiProperties)</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">closePropertiesDialog(closeSource)</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">propertyListener()</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">controllerHandler()</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">actionHandler()</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">buttonHandler()</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">helpClickHandler()</AnchorLink>\n    </AnchorLinks>\n    <h3>{`applyPropertyChanges(propertySet, appData, additionalInfo, undoInfo, uiProperties)`}</h3>\n    <p>{`Executes when the user clicks `}<inlineCode parentName=\"p\">{`OK`}</inlineCode>{` in the property dialog. This callback allows users to save the current property values.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`propertySet: The set of current property values`}</li>\n      <li parentName=\"ul\">{`appData: (optional) application data that was passed in to `}<inlineCode parentName=\"li\">{`propertiesInfo`}</inlineCode></li>\n      <li parentName=\"ul\">{`additionalInfo: Object with additional information returned:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`messages: (optional) An array of messages associated with the nodes current property values.`}</li>\n          <li parentName=\"ul\">{`title: The title of the properties editor`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`undoInfo: Object with information needed to undo this apply:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`properties: Set of property values;`}</li>\n          <li parentName=\"ul\">{`messages: (optional) An array of messages associated with the nodes property values.`}</li>\n          <li parentName=\"ul\">{`uiProperties: (optional) Set of UI only properties values`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`uiProperties: The set of UI only property values (optional)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`applyPropertyChanges(propertySet, appData, additionalInfo, undoInfo, uiProperties) {\n  var data = {\n    propertySet: propertySet,\n    appData: appData,\n    additionalInfo: {\n        messages: messages,\n        title: title\n    }\n  };\n}\n\n`}</code></pre>\n    <h3>{`closePropertiesDialog(closeSource)`}</h3>\n    <p>{`Executes when user clicks `}<inlineCode parentName=\"p\">{`Save`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Cancel`}</inlineCode>{` in the property editor dialog. This callback is used to control the visibility of the property editor dialog. `}<inlineCode parentName=\"p\">{`closeSource`}</inlineCode>{` identifies where this call was initiated from. It will equal “apply” if the user clicked on “Save” when no changes were made, or “cancel” if the user clicked on “Cancel”`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`closePropertiesDialog() {\n  this.setState({ showPropertiesDialog: false, propertiesInfo: {} });\n}\n`}</code></pre>\n    <h3>{`propertyListener()`}</h3>\n    <p>{`Executes when a user property values are updated.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`propertyListener(data) {\n\n}\n\n`}</code></pre>\n    <h3>{`controllerHandler()`}</h3>\n    <p>{`Executes when the property controller is created. Returns the property controller. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/elyra-ai/canvas/wiki/3.6-Common-Properties-Controller\"\n      }}>{`https://github.com/elyra-ai/canvas/wiki/3.6-Common-Properties-Controller`}</a>{` for APIs`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`controllerHandler(propertyController) {\n\n}\n\n`}</code></pre>\n    <h3>{`actionHandler()`}</h3>\n    <p>{`Called whenever an action is ran. `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` come from uihints and appData is passed in with propertiesInfo.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`actionHandler(id, appData, data) {\n\n}\n\n`}</code></pre>\n    <h3>{`buttonHandler()`}</h3>\n    <p>{`Called when the edit button is clicked on in a readonlyTable control. The callback provides the following data:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`data: an object that consists of`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`type: of button the click was invoked from. Currently, only type: edit is returned today from the edit button click of a readonlyTable control.`}</li>\n          <li parentName=\"ul\">{`propertyId: of the control that was clicked.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`buttonHandler(data) {\n\n}\n\n`}</code></pre>\n    <h3>{`helpClickHandler()`}</h3>\n    <p>{`Executes when user clicks the help icon in the property editor dialog. The callback provides the following data:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`nodeTypeId: in case of parameterDef, id property of uihints; in case formData, the componentId.`}</li>\n      <li parentName=\"ul\">{`helpData: Optional helpData specified in paramDef/formData (see below).`}</li>\n      <li parentName=\"ul\">{`appData: Optional application data that was passed in to propertiesInfo`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`helpClickHandler(nodeTypeId, helpData, appData) {\n\n}\n\n`}</code></pre>\n    <p>{`To control whether a node shows the help icon in the right fly-out, a help object with optional helpData needs to be provided in the paramDef or formData:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`paramDef: Provide help object in operator’s uihints. If help object exists, the icon will be shown. Optionally, provide a helpData object within the help object, which will be passed in the helpClickHandler callback.     `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/pipeline-schemas/blob/master/common-pipeline/operators/uihints-v2-schema.json#L64\"\n        }}>{`https://github.com/elyra-ai/pipeline-schemas/blob/master/common-pipeline/operators/uihints-v2-schema.json#L64`}</a></li>\n      <li parentName=\"ul\">{`formData: add help object to form definition. The `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/elyra-ai/pipeline-schemas/blob/master/common-canvas/form/form-v2-schema.json#L51\"\n        }}>{`https://github.com/elyra-ai/pipeline-schemas/blob/master/common-canvas/form/form-v2-schema.json#L51`}</a></li>\n    </ul>\n    <p>{`If no help object is found, no help link will be shown.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}